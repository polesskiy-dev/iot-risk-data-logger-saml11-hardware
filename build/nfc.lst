ARM GAS  /tmp/ccsHqiS5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"nfc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.handleInit,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	handleInit:
  26              	.LVL0:
  27              	.LFB142:
  28              		.file 1 "app/tasks/nfc/nfc.c"
   1:app/tasks/nfc/nfc.c **** /**
   2:app/tasks/nfc/nfc.c ****  * @file nfc.c
   3:app/tasks/nfc/nfc.c ****  * @brief NFC task and initialization for ST25DV NFC tag.
   4:app/tasks/nfc/nfc.c ****  *
   5:app/tasks/nfc/nfc.c ****  * @see https://www.st.com/resource/en/application_note/an5512-st25-fast-transfer-mode-embedded-lib
   6:app/tasks/nfc/nfc.c ****  * @see https://www.st.com/resource/en/application_note/an4910-data-exchange-between-wired-ic-and-w
   7:app/tasks/nfc/nfc.c ****  */
   8:app/tasks/nfc/nfc.c **** 
   9:app/tasks/nfc/nfc.c **** #include "nfc.h"
  10:app/tasks/nfc/nfc.c **** #include "nfc_handlers.h"
  11:app/tasks/nfc/nfc.c **** 
  12:app/tasks/nfc/nfc.c **** static osStatus_t handleNFCFSM(NFC_Actor_t *this, message_t *message);
  13:app/tasks/nfc/nfc.c **** static osStatus_t handleInit(NFC_Actor_t *this, message_t *message);
  14:app/tasks/nfc/nfc.c **** 
  15:app/tasks/nfc/nfc.c **** NFC_Actor_t NFC_Actor = {
  16:app/tasks/nfc/nfc.c ****         .super = {
  17:app/tasks/nfc/nfc.c ****                 .actorId = NFC_ACTOR_ID,
  18:app/tasks/nfc/nfc.c ****                 .messageHandler = (messageHandler_t) handleNFCFSM,
  19:app/tasks/nfc/nfc.c ****                 .osMessageQueueId = NULL,
  20:app/tasks/nfc/nfc.c ****                 .osThreadId = NULL,
  21:app/tasks/nfc/nfc.c ****         },
  22:app/tasks/nfc/nfc.c ****         .state = NFC_NO_STATE
  23:app/tasks/nfc/nfc.c **** };
  24:app/tasks/nfc/nfc.c **** 
  25:app/tasks/nfc/nfc.c **** uint32_t nfcTaskBuffer[DEFAULT_TASK_STACK_SIZE_WORDS];
  26:app/tasks/nfc/nfc.c **** StaticTask_t nfcTaskControlBlock;
  27:app/tasks/nfc/nfc.c **** const osThreadAttr_t nfcTaskDescription = {
  28:app/tasks/nfc/nfc.c ****         .name = "nfcTask",
  29:app/tasks/nfc/nfc.c ****         .cb_mem = &nfcTaskControlBlock,
  30:app/tasks/nfc/nfc.c ****         .cb_size = sizeof(nfcTaskControlBlock),
ARM GAS  /tmp/ccsHqiS5.s 			page 2


  31:app/tasks/nfc/nfc.c ****         .stack_mem = &nfcTaskBuffer[0],
  32:app/tasks/nfc/nfc.c ****         .stack_size = sizeof(nfcTaskBuffer),
  33:app/tasks/nfc/nfc.c ****         .priority = (osPriority_t) osPriorityNormal,
  34:app/tasks/nfc/nfc.c **** };
  35:app/tasks/nfc/nfc.c **** 
  36:app/tasks/nfc/nfc.c **** actor_t* NFC_TaskInit(void) {
  37:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osMessageQueueId = osMessageQueueNew(DEFAULT_QUEUE_SIZE, DEFAULT_QUEUE_MESSAGE_SI
  38:app/tasks/nfc/nfc.c ****     .name = "nfcQueue"
  39:app/tasks/nfc/nfc.c ****   });
  40:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osThreadId = osThreadNew(NFC_Task, NULL, &nfcTaskDescription);
  41:app/tasks/nfc/nfc.c **** 
  42:app/tasks/nfc/nfc.c ****   return (actor_t*) &NFC_Actor;
  43:app/tasks/nfc/nfc.c **** }
  44:app/tasks/nfc/nfc.c **** 
  45:app/tasks/nfc/nfc.c **** void NFC_Task(void *argument) {
  46:app/tasks/nfc/nfc.c ****   (void) argument; // Avoid unused parameter warning
  47:app/tasks/nfc/nfc.c ****   message_t msg;
  48:app/tasks/nfc/nfc.c **** 
  49:app/tasks/nfc/nfc.c ****   /* Reset Mailbox enable to allow write to EEPROM */
  50:app/tasks/nfc/nfc.c **** //  ST25DV_ResetMBEN_Dyn(&st25dv);
  51:app/tasks/nfc/nfc.c **** 
  52:app/tasks/nfc/nfc.c ****   for (;;) {
  53:app/tasks/nfc/nfc.c ****     // Wait for messages from the queue
  54:app/tasks/nfc/nfc.c ****     if (osMessageQueueGet(NFC_Actor.super.osMessageQueueId, &msg, NULL, osWaitForever) == osOK) {
  55:app/tasks/nfc/nfc.c ****       osStatus_t status = NFC_Actor.super.messageHandler((actor_t *) &NFC_Actor, &msg);
  56:app/tasks/nfc/nfc.c ****       if (status != osOK) {
  57:app/tasks/nfc/nfc.c ****         // TODO Handle error, emit common error event and reinitialize module
  58:app/tasks/nfc/nfc.c ****         NFC_Actor.state = NFC_STATE_ERROR;
  59:app/tasks/nfc/nfc.c ****       }
  60:app/tasks/nfc/nfc.c ****     }
  61:app/tasks/nfc/nfc.c ****   }
  62:app/tasks/nfc/nfc.c **** }
  63:app/tasks/nfc/nfc.c **** 
  64:app/tasks/nfc/nfc.c **** /** Handle GPO interrupt */
  65:app/tasks/nfc/nfc.c **** //void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
  66:app/tasks/nfc/nfc.c **** //  if (GPIO_Pin == _NFC_INT_Pin) {
  67:app/tasks/nfc/nfc.c **** //    #ifdef DEBUG
  68:app/tasks/nfc/nfc.c **** //      fprintf(stdout, "NFC GPO Interrupt\n");
  69:app/tasks/nfc/nfc.c **** //    #endif
  70:app/tasks/nfc/nfc.c **** //    osMessageQueuePut(NFC_Actor.super.osMessageQueueId, &(message_t){NFC_GPO_INTERRUPT}, 0, 0);
  71:app/tasks/nfc/nfc.c **** //  }
  72:app/tasks/nfc/nfc.c **** //}
  73:app/tasks/nfc/nfc.c **** 
  74:app/tasks/nfc/nfc.c **** static osStatus_t handleNFCFSM(NFC_Actor_t *this, message_t *message) {
  75:app/tasks/nfc/nfc.c ****   switch (this->state) {
  76:app/tasks/nfc/nfc.c ****     case NFC_NO_STATE:
  77:app/tasks/nfc/nfc.c ****       handleInit(this, message);
  78:app/tasks/nfc/nfc.c ****       return osOK;
  79:app/tasks/nfc/nfc.c ****     case NFC_STANDBY_STATE:
  80:app/tasks/nfc/nfc.c ****       // TODO handle low power state
  81:app/tasks/nfc/nfc.c ****       return osOK;
  82:app/tasks/nfc/nfc.c ****     default:
  83:app/tasks/nfc/nfc.c ****       return osOK;
  84:app/tasks/nfc/nfc.c ****   }
  85:app/tasks/nfc/nfc.c **** 
  86:app/tasks/nfc/nfc.c **** //  switch (message->event) {
  87:app/tasks/nfc/nfc.c **** //    case NFC_GPO_INTERRUPT:
ARM GAS  /tmp/ccsHqiS5.s 			page 3


  88:app/tasks/nfc/nfc.c **** //      NFC_HandleGPOInterrupt(&st25dv);
  89:app/tasks/nfc/nfc.c **** //      return osOK;
  90:app/tasks/nfc/nfc.c **** //    case NFC_MAILBOX_HAS_NEW_MESSAGE:
  91:app/tasks/nfc/nfc.c **** //      fprintf(stdout, "Mailbox has new message\n");
  92:app/tasks/nfc/nfc.c **** //      NFC_ReadMailboxTo(&st25dv, mailboxBuffer);
  93:app/tasks/nfc/nfc.c **** //      // Print for debug purposes
  94:app/tasks/nfc/nfc.c **** //      for (int i = 0; i < ST25DV_MAX_MAILBOX_LENGTH; i++) {
  95:app/tasks/nfc/nfc.c **** //        fprintf(stdout, "0x%x ", mailboxBuffer[i]);
  96:app/tasks/nfc/nfc.c **** //      }
  97:app/tasks/nfc/nfc.c **** //      return osOK;
  98:app/tasks/nfc/nfc.c **** //    default:
  99:app/tasks/nfc/nfc.c **** //      return osError;
 100:app/tasks/nfc/nfc.c **** //  }
 101:app/tasks/nfc/nfc.c **** }
 102:app/tasks/nfc/nfc.c **** 
 103:app/tasks/nfc/nfc.c **** static osStatus_t handleInit(NFC_Actor_t *this, message_t *message) {
  29              		.loc 1 103 69 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 104:app/tasks/nfc/nfc.c ****   osStatus_t status;
  33              		.loc 1 104 3 view .LVU1
 105:app/tasks/nfc/nfc.c **** 
 106:app/tasks/nfc/nfc.c ****   switch (message->event) {
  34              		.loc 1 106 3 view .LVU2
  35              		.loc 1 106 18 is_stmt 0 view .LVU3
  36 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  37              		.loc 1 106 3 view .LVU4
  38 0002 012B     		cmp	r3, #1
  39 0004 01D0     		beq	.L9
 107:app/tasks/nfc/nfc.c ****     case GLOBAL_CMD_INITIALIZE:
 108:app/tasks/nfc/nfc.c ****       status = NFC_ST25DVInit(&this->st25dv);
 109:app/tasks/nfc/nfc.c ****       if (status != NFCTAG_OK)
 110:app/tasks/nfc/nfc.c ****         return osError;
 111:app/tasks/nfc/nfc.c ****       this->state = NFC_STANDBY_STATE;
 112:app/tasks/nfc/nfc.c **** 
 113:app/tasks/nfc/nfc.c ****       return osOK;
 114:app/tasks/nfc/nfc.c ****     default:
 115:app/tasks/nfc/nfc.c ****       return osOK;
  40              		.loc 1 115 14 view .LVU5
  41 0006 0020     		movs	r0, #0
  42              	.LVL1:
 116:app/tasks/nfc/nfc.c ****   }
 117:app/tasks/nfc/nfc.c **** }...
  43              		.loc 1 117 1 view .LVU6
  44 0008 7047     		bx	lr
  45              	.LVL2:
  46              	.L9:
 103:app/tasks/nfc/nfc.c **** static osStatus_t handleInit(NFC_Actor_t *this, message_t *message) {
  47              		.loc 1 103 69 view .LVU7
  48 000a 10B5     		push	{r4, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 4, -8
  52              		.cfi_offset 14, -4
  53 000c 0446     		mov	r4, r0
 108:app/tasks/nfc/nfc.c ****       status = NFC_ST25DVInit(&this->st25dv);
ARM GAS  /tmp/ccsHqiS5.s 			page 4


  54              		.loc 1 108 7 is_stmt 1 view .LVU8
 108:app/tasks/nfc/nfc.c ****       status = NFC_ST25DVInit(&this->st25dv);
  55              		.loc 1 108 16 is_stmt 0 view .LVU9
  56 000e 1430     		adds	r0, r0, #20
  57              	.LVL3:
 108:app/tasks/nfc/nfc.c ****       status = NFC_ST25DVInit(&this->st25dv);
  58              		.loc 1 108 16 view .LVU10
  59 0010 FFF7FEFF 		bl	NFC_ST25DVInit
  60              	.LVL4:
 109:app/tasks/nfc/nfc.c ****       if (status != NFCTAG_OK)
  61              		.loc 1 109 7 is_stmt 1 view .LVU11
 109:app/tasks/nfc/nfc.c ****       if (status != NFCTAG_OK)
  62              		.loc 1 109 10 is_stmt 0 view .LVU12
  63 0014 10B9     		cbnz	r0, .L4
 111:app/tasks/nfc/nfc.c ****       this->state = NFC_STANDBY_STATE;
  64              		.loc 1 111 7 is_stmt 1 view .LVU13
 111:app/tasks/nfc/nfc.c ****       this->state = NFC_STANDBY_STATE;
  65              		.loc 1 111 19 is_stmt 0 view .LVU14
  66 0016 0123     		movs	r3, #1
  67 0018 2374     		strb	r3, [r4, #16]
 113:app/tasks/nfc/nfc.c ****       return osOK;
  68              		.loc 1 113 7 is_stmt 1 view .LVU15
  69              	.LVL5:
  70              	.L1:
  71              		.loc 1 117 1 is_stmt 0 view .LVU16
  72 001a 10BD     		pop	{r4, pc}
  73              	.LVL6:
  74              	.L4:
 110:app/tasks/nfc/nfc.c ****         return osError;
  75              		.loc 1 110 16 view .LVU17
  76 001c 4FF0FF30 		mov	r0, #-1
  77              	.LVL7:
 110:app/tasks/nfc/nfc.c ****         return osError;
  78              		.loc 1 110 16 view .LVU18
  79 0020 FBE7     		b	.L1
  80              		.cfi_endproc
  81              	.LFE142:
  83              		.section	.text.handleNFCFSM,"ax",%progbits
  84              		.align	1
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	handleNFCFSM:
  91              	.LVL8:
  92              	.LFB141:
  74:app/tasks/nfc/nfc.c **** static osStatus_t handleNFCFSM(NFC_Actor_t *this, message_t *message) {
  93              		.loc 1 74 71 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  74:app/tasks/nfc/nfc.c **** static osStatus_t handleNFCFSM(NFC_Actor_t *this, message_t *message) {
  97              		.loc 1 74 71 is_stmt 0 view .LVU20
  98 0000 08B5     		push	{r3, lr}
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 3, -8
ARM GAS  /tmp/ccsHqiS5.s 			page 5


 102              		.cfi_offset 14, -4
  75:app/tasks/nfc/nfc.c ****   switch (this->state) {
 103              		.loc 1 75 3 is_stmt 1 view .LVU21
  75:app/tasks/nfc/nfc.c ****   switch (this->state) {
 104              		.loc 1 75 15 is_stmt 0 view .LVU22
 105 0002 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
  75:app/tasks/nfc/nfc.c ****   switch (this->state) {
 106              		.loc 1 75 3 view .LVU23
 107 0004 0BB1     		cbz	r3, .L13
 108              	.LVL9:
 109              	.L11:
 101:app/tasks/nfc/nfc.c **** }
 110              		.loc 1 101 1 view .LVU24
 111 0006 0020     		movs	r0, #0
 112 0008 08BD     		pop	{r3, pc}
 113              	.LVL10:
 114              	.L13:
  77:app/tasks/nfc/nfc.c ****       handleInit(this, message);
 115              		.loc 1 77 7 is_stmt 1 view .LVU25
 116 000a FFF7FEFF 		bl	handleInit
 117              	.LVL11:
  78:app/tasks/nfc/nfc.c ****       return osOK;
 118              		.loc 1 78 7 view .LVU26
  78:app/tasks/nfc/nfc.c ****       return osOK;
 119              		.loc 1 78 14 is_stmt 0 view .LVU27
 120 000e FAE7     		b	.L11
 121              		.cfi_endproc
 122              	.LFE141:
 124              		.section	.text.NFC_Task,"ax",%progbits
 125              		.align	1
 126              		.global	NFC_Task
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	NFC_Task:
 133              	.LFB140:
  45:app/tasks/nfc/nfc.c **** void NFC_Task(void *argument) {
 134              		.loc 1 45 31 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL12:
  45:app/tasks/nfc/nfc.c **** void NFC_Task(void *argument) {
 139              		.loc 1 45 31 is_stmt 0 view .LVU29
 140 0000 00B5     		push	{lr}
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 14, -4
 144 0002 85B0     		sub	sp, sp, #20
 145              	.LCFI3:
 146              		.cfi_def_cfa_offset 24
 147              	.LVL13:
 148              	.L15:
  46:app/tasks/nfc/nfc.c ****   (void) argument; // Avoid unused parameter warning
 149              		.loc 1 46 3 is_stmt 1 view .LVU30
  47:app/tasks/nfc/nfc.c ****   message_t msg;
ARM GAS  /tmp/ccsHqiS5.s 			page 6


 150              		.loc 1 47 3 view .LVU31
  52:app/tasks/nfc/nfc.c ****   for (;;) {
 151              		.loc 1 52 3 view .LVU32
  54:app/tasks/nfc/nfc.c ****     if (osMessageQueueGet(NFC_Actor.super.osMessageQueueId, &msg, NULL, osWaitForever) == osOK) {
 152              		.loc 1 54 5 view .LVU33
  54:app/tasks/nfc/nfc.c ****     if (osMessageQueueGet(NFC_Actor.super.osMessageQueueId, &msg, NULL, osWaitForever) == osOK) {
 153              		.loc 1 54 9 is_stmt 0 view .LVU34
 154 0004 4FF0FF33 		mov	r3, #-1
 155 0008 0022     		movs	r2, #0
 156 000a 01A9     		add	r1, sp, #4
 157 000c 0748     		ldr	r0, .L19
 158 000e 8068     		ldr	r0, [r0, #8]
 159 0010 FFF7FEFF 		bl	osMessageQueueGet
 160              	.LVL14:
  54:app/tasks/nfc/nfc.c ****     if (osMessageQueueGet(NFC_Actor.super.osMessageQueueId, &msg, NULL, osWaitForever) == osOK) {
 161              		.loc 1 54 8 view .LVU35
 162 0014 0028     		cmp	r0, #0
 163 0016 F5D1     		bne	.L15
 164              	.LBB2:
  55:app/tasks/nfc/nfc.c ****       osStatus_t status = NFC_Actor.super.messageHandler((actor_t *) &NFC_Actor, &msg);
 165              		.loc 1 55 7 is_stmt 1 view .LVU36
  55:app/tasks/nfc/nfc.c ****       osStatus_t status = NFC_Actor.super.messageHandler((actor_t *) &NFC_Actor, &msg);
 166              		.loc 1 55 42 is_stmt 0 view .LVU37
 167 0018 0448     		ldr	r0, .L19
 168 001a C368     		ldr	r3, [r0, #12]
  55:app/tasks/nfc/nfc.c ****       osStatus_t status = NFC_Actor.super.messageHandler((actor_t *) &NFC_Actor, &msg);
 169              		.loc 1 55 27 view .LVU38
 170 001c 01A9     		add	r1, sp, #4
 171 001e 9847     		blx	r3
 172              	.LVL15:
  56:app/tasks/nfc/nfc.c ****       if (status != osOK) {
 173              		.loc 1 56 7 is_stmt 1 view .LVU39
  56:app/tasks/nfc/nfc.c ****       if (status != osOK) {
 174              		.loc 1 56 10 is_stmt 0 view .LVU40
 175 0020 0028     		cmp	r0, #0
 176 0022 EFD0     		beq	.L15
  58:app/tasks/nfc/nfc.c ****         NFC_Actor.state = NFC_STATE_ERROR;
 177              		.loc 1 58 9 is_stmt 1 view .LVU41
  58:app/tasks/nfc/nfc.c ****         NFC_Actor.state = NFC_STATE_ERROR;
 178              		.loc 1 58 25 is_stmt 0 view .LVU42
 179 0024 014B     		ldr	r3, .L19
 180 0026 0222     		movs	r2, #2
 181 0028 1A74     		strb	r2, [r3, #16]
 182 002a EBE7     		b	.L15
 183              	.L20:
 184              		.align	2
 185              	.L19:
 186 002c 00000000 		.word	.LANCHOR0
 187              	.LBE2:
 188              		.cfi_endproc
 189              	.LFE140:
 191              		.section	.rodata.NFC_TaskInit.str1.4,"aMS",%progbits,1
 192              		.align	2
 193              	.LC0:
 194 0000 6E666351 		.ascii	"nfcQueue\000"
 194      75657565 
 194      00
ARM GAS  /tmp/ccsHqiS5.s 			page 7


 195              		.section	.text.NFC_TaskInit,"ax",%progbits
 196              		.align	1
 197              		.global	NFC_TaskInit
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	NFC_TaskInit:
 204              	.LFB139:
  36:app/tasks/nfc/nfc.c **** actor_t* NFC_TaskInit(void) {
 205              		.loc 1 36 29 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 24
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 30B5     		push	{r4, r5, lr}
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 12
 212              		.cfi_offset 4, -12
 213              		.cfi_offset 5, -8
 214              		.cfi_offset 14, -4
 215 0002 87B0     		sub	sp, sp, #28
 216              	.LCFI5:
 217              		.cfi_def_cfa_offset 40
  37:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osMessageQueueId = osMessageQueueNew(DEFAULT_QUEUE_SIZE, DEFAULT_QUEUE_MESSAGE_SI
 218              		.loc 1 37 3 view .LVU44
  37:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osMessageQueueId = osMessageQueueNew(DEFAULT_QUEUE_SIZE, DEFAULT_QUEUE_MESSAGE_SI
 219              		.loc 1 37 127 is_stmt 0 view .LVU45
 220 0004 0024     		movs	r4, #0
 221 0006 0094     		str	r4, [sp]
 222 0008 0194     		str	r4, [sp, #4]
 223 000a 0294     		str	r4, [sp, #8]
 224 000c 0394     		str	r4, [sp, #12]
 225 000e 0494     		str	r4, [sp, #16]
 226 0010 0594     		str	r4, [sp, #20]
 227 0012 094B     		ldr	r3, .L23
 228 0014 0093     		str	r3, [sp]
  37:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osMessageQueueId = osMessageQueueNew(DEFAULT_QUEUE_SIZE, DEFAULT_QUEUE_MESSAGE_SI
 229              		.loc 1 37 38 view .LVU46
 230 0016 6A46     		mov	r2, sp
 231 0018 0C21     		movs	r1, #12
 232 001a 0820     		movs	r0, #8
 233 001c FFF7FEFF 		bl	osMessageQueueNew
 234              	.LVL16:
  37:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osMessageQueueId = osMessageQueueNew(DEFAULT_QUEUE_SIZE, DEFAULT_QUEUE_MESSAGE_SI
 235              		.loc 1 37 36 view .LVU47
 236 0020 064D     		ldr	r5, .L23+4
 237 0022 A860     		str	r0, [r5, #8]
  40:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osThreadId = osThreadNew(NFC_Task, NULL, &nfcTaskDescription);
 238              		.loc 1 40 3 is_stmt 1 view .LVU48
  40:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osThreadId = osThreadNew(NFC_Task, NULL, &nfcTaskDescription);
 239              		.loc 1 40 32 is_stmt 0 view .LVU49
 240 0024 064A     		ldr	r2, .L23+8
 241 0026 2146     		mov	r1, r4
 242 0028 0648     		ldr	r0, .L23+12
 243 002a FFF7FEFF 		bl	osThreadNew
 244              	.LVL17:
  40:app/tasks/nfc/nfc.c ****   NFC_Actor.super.osThreadId = osThreadNew(NFC_Task, NULL, &nfcTaskDescription);
ARM GAS  /tmp/ccsHqiS5.s 			page 8


 245              		.loc 1 40 30 view .LVU50
 246 002e 6860     		str	r0, [r5, #4]
  42:app/tasks/nfc/nfc.c ****   return (actor_t*) &NFC_Actor;
 247              		.loc 1 42 3 is_stmt 1 view .LVU51
  43:app/tasks/nfc/nfc.c **** }
 248              		.loc 1 43 1 is_stmt 0 view .LVU52
 249 0030 2846     		mov	r0, r5
 250 0032 07B0     		add	sp, sp, #28
 251              	.LCFI6:
 252              		.cfi_def_cfa_offset 12
 253              		@ sp needed
 254 0034 30BD     		pop	{r4, r5, pc}
 255              	.L24:
 256 0036 00BF     		.align	2
 257              	.L23:
 258 0038 00000000 		.word	.LC0
 259 003c 00000000 		.word	.LANCHOR0
 260 0040 00000000 		.word	.LANCHOR1
 261 0044 00000000 		.word	NFC_Task
 262              		.cfi_endproc
 263              	.LFE139:
 265              		.global	nfcTaskDescription
 266              		.section	.rodata.str1.4,"aMS",%progbits,1
 267              		.align	2
 268              	.LC1:
 269 0000 6E666354 		.ascii	"nfcTask\000"
 269      61736B00 
 270              		.global	nfcTaskControlBlock
 271              		.global	nfcTaskBuffer
 272              		.global	NFC_Actor
 273              		.section	.bss.nfcTaskBuffer,"aw",%nobits
 274              		.align	2
 277              	nfcTaskBuffer:
 278 0000 00000000 		.space	512
 278      00000000 
 278      00000000 
 278      00000000 
 278      00000000 
 279              		.section	.bss.nfcTaskControlBlock,"aw",%nobits
 280              		.align	2
 283              	nfcTaskControlBlock:
 284 0000 00000000 		.space	92
 284      00000000 
 284      00000000 
 284      00000000 
 284      00000000 
 285              		.section	.data.NFC_Actor,"aw"
 286              		.align	2
 287              		.set	.LANCHOR0,. + 0
 290              	NFC_Actor:
 291 0000 04000000 		.word	4
 292 0004 00000000 		.word	0
 293 0008 00000000 		.word	0
 294 000c 00000000 		.word	handleNFCFSM
 295 0010 00       		.byte	0
 296 0011 00000000 		.space	299
 296      00000000 
ARM GAS  /tmp/ccsHqiS5.s 			page 9


 296      00000000 
 296      00000000 
 296      00000000 
 297              		.section	.rodata.nfcTaskDescription,"a"
 298              		.align	2
 299              		.set	.LANCHOR1,. + 0
 302              	nfcTaskDescription:
 303 0000 00000000 		.word	.LC1
 304 0004 00000000 		.space	4
 305 0008 00000000 		.word	nfcTaskControlBlock
 306 000c 5C000000 		.word	92
 307 0010 00000000 		.word	nfcTaskBuffer
 308 0014 00020000 		.word	512
 309 0018 18000000 		.word	24
 310 001c 00000000 		.space	8
 310      00000000 
 311              		.text
 312              	.Letext0:
 313              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 314              		.file 3 "/usr/include/newlib/sys/_types.h"
 315              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 316              		.file 5 "/usr/include/newlib/sys/types.h"
 317              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 318              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 319              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 320              		.file 9 "app/core/actor/../../config/events_list/events_list.h"
 321              		.file 10 "app/core/actor/../../config/actors_list/actors_list.h"
 322              		.file 11 "app/core/actor/actor.h"
 323              		.file 12 "Drivers/BSP/Components/ST25DV/st25dv_reg.h"
 324              		.file 13 "Drivers/BSP/Components/ST25DV/st25dv.h"
 325              		.file 14 "app/tasks/nfc/nfc.h"
 326              		.file 15 "app/tasks/nfc/nfc_handlers.h"
ARM GAS  /tmp/ccsHqiS5.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nfc.c
     /tmp/ccsHqiS5.s:18     .text.handleInit:0000000000000000 $t
     /tmp/ccsHqiS5.s:25     .text.handleInit:0000000000000000 handleInit
     /tmp/ccsHqiS5.s:84     .text.handleNFCFSM:0000000000000000 $t
     /tmp/ccsHqiS5.s:90     .text.handleNFCFSM:0000000000000000 handleNFCFSM
     /tmp/ccsHqiS5.s:125    .text.NFC_Task:0000000000000000 $t
     /tmp/ccsHqiS5.s:132    .text.NFC_Task:0000000000000000 NFC_Task
     /tmp/ccsHqiS5.s:186    .text.NFC_Task:000000000000002c $d
     /tmp/ccsHqiS5.s:192    .rodata.NFC_TaskInit.str1.4:0000000000000000 $d
     /tmp/ccsHqiS5.s:196    .text.NFC_TaskInit:0000000000000000 $t
     /tmp/ccsHqiS5.s:203    .text.NFC_TaskInit:0000000000000000 NFC_TaskInit
     /tmp/ccsHqiS5.s:258    .text.NFC_TaskInit:0000000000000038 $d
     /tmp/ccsHqiS5.s:302    .rodata.nfcTaskDescription:0000000000000000 nfcTaskDescription
     /tmp/ccsHqiS5.s:267    .rodata.str1.4:0000000000000000 $d
     /tmp/ccsHqiS5.s:283    .bss.nfcTaskControlBlock:0000000000000000 nfcTaskControlBlock
     /tmp/ccsHqiS5.s:277    .bss.nfcTaskBuffer:0000000000000000 nfcTaskBuffer
     /tmp/ccsHqiS5.s:290    .data.NFC_Actor:0000000000000000 NFC_Actor
     /tmp/ccsHqiS5.s:274    .bss.nfcTaskBuffer:0000000000000000 $d
     /tmp/ccsHqiS5.s:280    .bss.nfcTaskControlBlock:0000000000000000 $d
     /tmp/ccsHqiS5.s:286    .data.NFC_Actor:0000000000000000 $d
     /tmp/ccsHqiS5.s:298    .rodata.nfcTaskDescription:0000000000000000 $d

UNDEFINED SYMBOLS
NFC_ST25DVInit
osMessageQueueGet
osMessageQueueNew
osThreadNew
