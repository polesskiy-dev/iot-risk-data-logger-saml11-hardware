ARM GAS  /tmp/ccHWaGIZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"rng.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_RNG_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_RNG_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_RNG_Init:
  27              	.LFB139:
  28              		.file 1 "Core/Src/rng.c"
   1:Core/Src/rng.c **** /* USER CODE BEGIN Header */
   2:Core/Src/rng.c **** /**
   3:Core/Src/rng.c ****   ******************************************************************************
   4:Core/Src/rng.c ****   * @file    rng.c
   5:Core/Src/rng.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/rng.c ****   *          of the RNG instances.
   7:Core/Src/rng.c ****   ******************************************************************************
   8:Core/Src/rng.c ****   * @attention
   9:Core/Src/rng.c ****   *
  10:Core/Src/rng.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/rng.c ****   * All rights reserved.
  12:Core/Src/rng.c ****   *
  13:Core/Src/rng.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/rng.c ****   * in the root directory of this software component.
  15:Core/Src/rng.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/rng.c ****   *
  17:Core/Src/rng.c ****   ******************************************************************************
  18:Core/Src/rng.c ****   */
  19:Core/Src/rng.c **** /* USER CODE END Header */
  20:Core/Src/rng.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/rng.c **** #include "rng.h"
  22:Core/Src/rng.c **** 
  23:Core/Src/rng.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/rng.c **** 
  25:Core/Src/rng.c **** /* USER CODE END 0 */
  26:Core/Src/rng.c **** 
  27:Core/Src/rng.c **** RNG_HandleTypeDef hrng;
  28:Core/Src/rng.c **** 
  29:Core/Src/rng.c **** /* RNG init function */
  30:Core/Src/rng.c **** void MX_RNG_Init(void)
ARM GAS  /tmp/ccHWaGIZ.s 			page 2


  31:Core/Src/rng.c **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  32:Core/Src/rng.c **** 
  33:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_Init 0 */
  34:Core/Src/rng.c **** 
  35:Core/Src/rng.c ****   /* USER CODE END RNG_Init 0 */
  36:Core/Src/rng.c **** 
  37:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_Init 1 */
  38:Core/Src/rng.c **** 
  39:Core/Src/rng.c ****   /* USER CODE END RNG_Init 1 */
  40:Core/Src/rng.c ****   hrng.Instance = RNG;
  38              		.loc 1 40 3 view .LVU1
  39              		.loc 1 40 17 is_stmt 0 view .LVU2
  40 0002 0548     		ldr	r0, .L5
  41 0004 054B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  41:Core/Src/rng.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
  43              		.loc 1 41 3 is_stmt 1 view .LVU3
  44              		.loc 1 41 7 is_stmt 0 view .LVU4
  45 0008 FFF7FEFF 		bl	HAL_RNG_Init
  46              	.LVL0:
  47              		.loc 1 41 6 view .LVU5
  48 000c 00B9     		cbnz	r0, .L4
  49              	.L1:
  42:Core/Src/rng.c ****   {
  43:Core/Src/rng.c ****     Error_Handler();
  44:Core/Src/rng.c ****   }
  45:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_Init 2 */
  46:Core/Src/rng.c **** 
  47:Core/Src/rng.c ****   /* USER CODE END RNG_Init 2 */
  48:Core/Src/rng.c **** 
  49:Core/Src/rng.c **** }
  50              		.loc 1 49 1 view .LVU6
  51 000e 08BD     		pop	{r3, pc}
  52              	.L4:
  43:Core/Src/rng.c ****   }
  53              		.loc 1 43 5 is_stmt 1 view .LVU7
  54 0010 FFF7FEFF 		bl	Error_Handler
  55              	.LVL1:
  56              		.loc 1 49 1 is_stmt 0 view .LVU8
  57 0014 FBE7     		b	.L1
  58              	.L6:
  59 0016 00BF     		.align	2
  60              	.L5:
  61 0018 00000000 		.word	.LANCHOR0
  62 001c 00080650 		.word	1342572544
  63              		.cfi_endproc
  64              	.LFE139:
  66              		.section	.text.HAL_RNG_MspInit,"ax",%progbits
ARM GAS  /tmp/ccHWaGIZ.s 			page 3


  67              		.align	1
  68              		.global	HAL_RNG_MspInit
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	HAL_RNG_MspInit:
  75              	.LVL2:
  76              	.LFB140:
  50:Core/Src/rng.c **** 
  51:Core/Src/rng.c **** void HAL_RNG_MspInit(RNG_HandleTypeDef* rngHandle)
  52:Core/Src/rng.c **** {
  77              		.loc 1 52 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 56
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 52 1 is_stmt 0 view .LVU10
  82 0000 10B5     		push	{r4, lr}
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
  87 0002 8EB0     		sub	sp, sp, #56
  88              	.LCFI2:
  89              		.cfi_def_cfa_offset 64
  90 0004 0446     		mov	r4, r0
  53:Core/Src/rng.c **** 
  54:Core/Src/rng.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  91              		.loc 1 54 3 is_stmt 1 view .LVU11
  92              		.loc 1 54 28 is_stmt 0 view .LVU12
  93 0006 3422     		movs	r2, #52
  94 0008 0021     		movs	r1, #0
  95 000a 01A8     		add	r0, sp, #4
  96              	.LVL3:
  97              		.loc 1 54 28 view .LVU13
  98 000c FFF7FEFF 		bl	memset
  99              	.LVL4:
  55:Core/Src/rng.c ****   if(rngHandle->Instance==RNG)
 100              		.loc 1 55 3 is_stmt 1 view .LVU14
 101              		.loc 1 55 15 is_stmt 0 view .LVU15
 102 0010 2268     		ldr	r2, [r4]
 103              		.loc 1 55 5 view .LVU16
 104 0012 0E4B     		ldr	r3, .L13
 105 0014 9A42     		cmp	r2, r3
 106 0016 01D0     		beq	.L11
 107              	.L7:
  56:Core/Src/rng.c ****   {
  57:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 0 */
  58:Core/Src/rng.c **** 
  59:Core/Src/rng.c ****   /* USER CODE END RNG_MspInit 0 */
  60:Core/Src/rng.c **** 
  61:Core/Src/rng.c ****   /** Initializes the peripherals clock
  62:Core/Src/rng.c ****   */
  63:Core/Src/rng.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RNG;
  64:Core/Src/rng.c ****     PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLL;
  65:Core/Src/rng.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
  66:Core/Src/rng.c ****     {
ARM GAS  /tmp/ccHWaGIZ.s 			page 4


  67:Core/Src/rng.c ****       Error_Handler();
  68:Core/Src/rng.c ****     }
  69:Core/Src/rng.c **** 
  70:Core/Src/rng.c ****     /* RNG clock enable */
  71:Core/Src/rng.c ****     __HAL_RCC_RNG_CLK_ENABLE();
  72:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
  73:Core/Src/rng.c **** 
  74:Core/Src/rng.c ****   /* USER CODE END RNG_MspInit 1 */
  75:Core/Src/rng.c ****   }
  76:Core/Src/rng.c **** }
 108              		.loc 1 76 1 view .LVU17
 109 0018 0EB0     		add	sp, sp, #56
 110              	.LCFI3:
 111              		.cfi_remember_state
 112              		.cfi_def_cfa_offset 8
 113              		@ sp needed
 114 001a 10BD     		pop	{r4, pc}
 115              	.LVL5:
 116              	.L11:
 117              	.LCFI4:
 118              		.cfi_restore_state
  63:Core/Src/rng.c ****     PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLL;
 119              		.loc 1 63 5 is_stmt 1 view .LVU18
  63:Core/Src/rng.c ****     PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLL;
 120              		.loc 1 63 40 is_stmt 0 view .LVU19
 121 001c 4FF48023 		mov	r3, #262144
 122 0020 0193     		str	r3, [sp, #4]
  64:Core/Src/rng.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 123              		.loc 1 64 5 is_stmt 1 view .LVU20
  64:Core/Src/rng.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 124              		.loc 1 64 37 is_stmt 0 view .LVU21
 125 0022 4FF00063 		mov	r3, #134217728
 126 0026 0C93     		str	r3, [sp, #48]
  65:Core/Src/rng.c ****     {
 127              		.loc 1 65 5 is_stmt 1 view .LVU22
  65:Core/Src/rng.c ****     {
 128              		.loc 1 65 9 is_stmt 0 view .LVU23
 129 0028 01A8     		add	r0, sp, #4
 130 002a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 131              	.LVL6:
  65:Core/Src/rng.c ****     {
 132              		.loc 1 65 8 view .LVU24
 133 002e 50B9     		cbnz	r0, .L12
 134              	.L9:
  71:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
 135              		.loc 1 71 5 is_stmt 1 view .LVU25
 136              	.LBB2:
  71:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
 137              		.loc 1 71 5 view .LVU26
  71:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
 138              		.loc 1 71 5 view .LVU27
 139 0030 074B     		ldr	r3, .L13+4
 140 0032 DA6C     		ldr	r2, [r3, #76]
 141 0034 42F48022 		orr	r2, r2, #262144
 142 0038 DA64     		str	r2, [r3, #76]
  71:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
 143              		.loc 1 71 5 view .LVU28
ARM GAS  /tmp/ccHWaGIZ.s 			page 5


 144 003a DB6C     		ldr	r3, [r3, #76]
 145 003c 03F48023 		and	r3, r3, #262144
 146 0040 0093     		str	r3, [sp]
  71:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
 147              		.loc 1 71 5 view .LVU29
 148 0042 009B     		ldr	r3, [sp]
 149              	.LBE2:
  71:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspInit 1 */
 150              		.loc 1 71 5 view .LVU30
 151              		.loc 1 76 1 is_stmt 0 view .LVU31
 152 0044 E8E7     		b	.L7
 153              	.L12:
  67:Core/Src/rng.c ****     }
 154              		.loc 1 67 7 is_stmt 1 view .LVU32
 155 0046 FFF7FEFF 		bl	Error_Handler
 156              	.LVL7:
 157 004a F1E7     		b	.L9
 158              	.L14:
 159              		.align	2
 160              	.L13:
 161 004c 00080650 		.word	1342572544
 162 0050 00100240 		.word	1073876992
 163              		.cfi_endproc
 164              	.LFE140:
 166              		.section	.text.HAL_RNG_MspDeInit,"ax",%progbits
 167              		.align	1
 168              		.global	HAL_RNG_MspDeInit
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	HAL_RNG_MspDeInit:
 175              	.LVL8:
 176              	.LFB141:
  77:Core/Src/rng.c **** 
  78:Core/Src/rng.c **** void HAL_RNG_MspDeInit(RNG_HandleTypeDef* rngHandle)
  79:Core/Src/rng.c **** {
 177              		.loc 1 79 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
  80:Core/Src/rng.c **** 
  81:Core/Src/rng.c ****   if(rngHandle->Instance==RNG)
 182              		.loc 1 81 3 view .LVU34
 183              		.loc 1 81 15 is_stmt 0 view .LVU35
 184 0000 0268     		ldr	r2, [r0]
 185              		.loc 1 81 5 view .LVU36
 186 0002 054B     		ldr	r3, .L18
 187 0004 9A42     		cmp	r2, r3
 188 0006 00D0     		beq	.L17
 189              	.L15:
  82:Core/Src/rng.c ****   {
  83:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspDeInit 0 */
  84:Core/Src/rng.c **** 
  85:Core/Src/rng.c ****   /* USER CODE END RNG_MspDeInit 0 */
  86:Core/Src/rng.c ****     /* Peripheral clock disable */
ARM GAS  /tmp/ccHWaGIZ.s 			page 6


  87:Core/Src/rng.c ****     __HAL_RCC_RNG_CLK_DISABLE();
  88:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspDeInit 1 */
  89:Core/Src/rng.c **** 
  90:Core/Src/rng.c ****   /* USER CODE END RNG_MspDeInit 1 */
  91:Core/Src/rng.c ****   }
  92:Core/Src/rng.c **** }
 190              		.loc 1 92 1 view .LVU37
 191 0008 7047     		bx	lr
 192              	.L17:
  87:Core/Src/rng.c ****   /* USER CODE BEGIN RNG_MspDeInit 1 */
 193              		.loc 1 87 5 is_stmt 1 view .LVU38
 194 000a 044A     		ldr	r2, .L18+4
 195 000c D36C     		ldr	r3, [r2, #76]
 196 000e 23F48023 		bic	r3, r3, #262144
 197 0012 D364     		str	r3, [r2, #76]
 198              		.loc 1 92 1 is_stmt 0 view .LVU39
 199 0014 F8E7     		b	.L15
 200              	.L19:
 201 0016 00BF     		.align	2
 202              	.L18:
 203 0018 00080650 		.word	1342572544
 204 001c 00100240 		.word	1073876992
 205              		.cfi_endproc
 206              	.LFE141:
 208              		.global	hrng
 209              		.section	.bss.hrng,"aw",%nobits
 210              		.align	2
 211              		.set	.LANCHOR0,. + 0
 214              	hrng:
 215 0000 00000000 		.space	16
 215      00000000 
 215      00000000 
 215      00000000 
 216              		.text
 217              	.Letext0:
 218              		.file 2 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l412xx.h"
 219              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 220              		.file 4 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 221              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 222              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rng.h"
 223              		.file 7 "Core/Inc/main.h"
 224              		.file 8 "Core/Inc/rng.h"
 225              		.file 9 "<built-in>"
ARM GAS  /tmp/ccHWaGIZ.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 rng.c
     /tmp/ccHWaGIZ.s:18     .text.MX_RNG_Init:0000000000000000 $t
     /tmp/ccHWaGIZ.s:26     .text.MX_RNG_Init:0000000000000000 MX_RNG_Init
     /tmp/ccHWaGIZ.s:61     .text.MX_RNG_Init:0000000000000018 $d
     /tmp/ccHWaGIZ.s:67     .text.HAL_RNG_MspInit:0000000000000000 $t
     /tmp/ccHWaGIZ.s:74     .text.HAL_RNG_MspInit:0000000000000000 HAL_RNG_MspInit
     /tmp/ccHWaGIZ.s:161    .text.HAL_RNG_MspInit:000000000000004c $d
     /tmp/ccHWaGIZ.s:167    .text.HAL_RNG_MspDeInit:0000000000000000 $t
     /tmp/ccHWaGIZ.s:174    .text.HAL_RNG_MspDeInit:0000000000000000 HAL_RNG_MspDeInit
     /tmp/ccHWaGIZ.s:203    .text.HAL_RNG_MspDeInit:0000000000000018 $d
     /tmp/ccHWaGIZ.s:214    .bss.hrng:0000000000000000 hrng
     /tmp/ccHWaGIZ.s:210    .bss.hrng:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RNG_Init
Error_Handler
memset
HAL_RCCEx_PeriphCLKConfig
