ARM GAS  /tmp/ccfEWiwI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"SEGGER_RTT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata._DoInit.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 5465726D 		.ascii	"Terminal\000"
  20      696E616C 
  20      00
  21              		.section	.text._DoInit,"ax",%progbits
  22              		.align	1
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv4-sp-d16
  29              	_DoInit:
  30              	.LFB0:
  31              		.file 1 "libraries/RTT/RTT/SEGGER_RTT.c"
   1:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
   2:libraries/RTT/RTT/SEGGER_RTT.c **** *                    SEGGER Microcontroller GmbH                     *
   3:libraries/RTT/RTT/SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
   5:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
   6:libraries/RTT/RTT/SEGGER_RTT.c **** *            (c) 1995 - 2021 SEGGER Microcontroller GmbH             *
   7:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
   8:libraries/RTT/RTT/SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  10:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
  11:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  12:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  14:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
  15:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  16:libraries/RTT/RTT/SEGGER_RTT.c **** * All rights reserved.                                               *
  17:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  18:libraries/RTT/RTT/SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:libraries/RTT/RTT/SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:libraries/RTT/RTT/SEGGER_RTT.c **** * compatible with the RTT protocol and J-Link.                       *
  21:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  22:libraries/RTT/RTT/SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
  23:libraries/RTT/RTT/SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:libraries/RTT/RTT/SEGGER_RTT.c **** * condition is met:                                                  *
  25:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
ARM GAS  /tmp/ccfEWiwI.s 			page 2


  26:libraries/RTT/RTT/SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:libraries/RTT/RTT/SEGGER_RTT.c **** *   notice, this condition and the following disclaimer.             *
  28:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  29:libraries/RTT/RTT/SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:libraries/RTT/RTT/SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  31:libraries/RTT/RTT/SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:libraries/RTT/RTT/SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  33:libraries/RTT/RTT/SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:libraries/RTT/RTT/SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:libraries/RTT/RTT/SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:libraries/RTT/RTT/SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:libraries/RTT/RTT/SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:libraries/RTT/RTT/SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:libraries/RTT/RTT/SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:libraries/RTT/RTT/SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:libraries/RTT/RTT/SEGGER_RTT.c **** * DAMAGE.                                                            *
  42:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  43:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
  44:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  45:libraries/RTT/RTT/SEGGER_RTT.c **** *       RTT version: 7.54                                           *
  46:libraries/RTT/RTT/SEGGER_RTT.c **** *                                                                    *
  47:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
  48:libraries/RTT/RTT/SEGGER_RTT.c **** 
  49:libraries/RTT/RTT/SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  50:libraries/RTT/RTT/SEGGER_RTT.c **** File    : SEGGER_RTT.c
  51:libraries/RTT/RTT/SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  52:libraries/RTT/RTT/SEGGER_RTT.c ****           allows real-time communication on targets which support
  53:libraries/RTT/RTT/SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  54:libraries/RTT/RTT/SEGGER_RTT.c **** Revision: $Rev: 23622 $
  55:libraries/RTT/RTT/SEGGER_RTT.c **** 
  56:libraries/RTT/RTT/SEGGER_RTT.c **** Additional information:
  57:libraries/RTT/RTT/SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  58:libraries/RTT/RTT/SEGGER_RTT.c ****           H->T    Host to target communication
  59:libraries/RTT/RTT/SEGGER_RTT.c ****           T->H    Target to host communication
  60:libraries/RTT/RTT/SEGGER_RTT.c **** 
  61:libraries/RTT/RTT/SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  62:libraries/RTT/RTT/SEGGER_RTT.c ****           Name is fixed to "Terminal"
  63:libraries/RTT/RTT/SEGGER_RTT.c **** 
  64:libraries/RTT/RTT/SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  65:libraries/RTT/RTT/SEGGER_RTT.c **** 
  66:libraries/RTT/RTT/SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  67:libraries/RTT/RTT/SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  68:libraries/RTT/RTT/SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  69:libraries/RTT/RTT/SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  70:libraries/RTT/RTT/SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):  
  71:libraries/RTT/RTT/SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  72:libraries/RTT/RTT/SEGGER_RTT.c **** 
  73:libraries/RTT/RTT/SEGGER_RTT.c **** 
  74:libraries/RTT/RTT/SEGGER_RTT.c **** ----------------------------------------------------------------------
  75:libraries/RTT/RTT/SEGGER_RTT.c **** */
  76:libraries/RTT/RTT/SEGGER_RTT.c **** 
  77:libraries/RTT/RTT/SEGGER_RTT.c **** #include "SEGGER_RTT.h"
  78:libraries/RTT/RTT/SEGGER_RTT.c **** 
  79:libraries/RTT/RTT/SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  80:libraries/RTT/RTT/SEGGER_RTT.c **** 
  81:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
  82:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 3


  83:libraries/RTT/RTT/SEGGER_RTT.c **** *       Configuration, default values
  84:libraries/RTT/RTT/SEGGER_RTT.c **** *
  85:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
  86:libraries/RTT/RTT/SEGGER_RTT.c **** */
  87:libraries/RTT/RTT/SEGGER_RTT.c **** 
  88:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
  89:libraries/RTT/RTT/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_CB_ALIGN
  90:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_CB_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
  91:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
  92:libraries/RTT/RTT/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGN
  93:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE !=
  94:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
  95:libraries/RTT/RTT/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_CB_SECTION
  96:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_CB_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
  97:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
  98:libraries/RTT/RTT/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_BUFFER_SECTION
  99:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_BUFFER_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_S
 100:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 101:libraries/RTT/RTT/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGNMENT
 102:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
 103:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 104:libraries/RTT/RTT/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_ALIGNMENT
 105:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
 106:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 107:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 108:libraries/RTT/RTT/SEGGER_RTT.c **** 
 109:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
 110:libraries/RTT/RTT/SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
 111:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 112:libraries/RTT/RTT/SEGGER_RTT.c **** 
 113:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
 114:libraries/RTT/RTT/SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
 115:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 116:libraries/RTT/RTT/SEGGER_RTT.c **** 
 117:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 118:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 119:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 120:libraries/RTT/RTT/SEGGER_RTT.c **** 
 121:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 122:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 123:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 124:libraries/RTT/RTT/SEGGER_RTT.c **** 
 125:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 126:libraries/RTT/RTT/SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 127:libraries/RTT/RTT/SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 128:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 129:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 130:libraries/RTT/RTT/SEGGER_RTT.c **** 
 131:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 132:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            SEGGER_RTT_CPU_CACHE_LINE_SIZE
 133:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 134:libraries/RTT/RTT/SEGGER_RTT.c **** 
 135:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 136:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     SEGGER_RTT_CPU_CACHE_LINE_SIZE
 137:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 138:libraries/RTT/RTT/SEGGER_RTT.c **** 
 139:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
ARM GAS  /tmp/ccfEWiwI.s 			page 4


 140:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 141:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 142:libraries/RTT/RTT/SEGGER_RTT.c **** 
 143:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
 144:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 145:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 146:libraries/RTT/RTT/SEGGER_RTT.c **** 
 147:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
 148:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 149:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 150:libraries/RTT/RTT/SEGGER_RTT.c **** 
 151:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   STRLEN
 152:libraries/RTT/RTT/SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 153:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 154:libraries/RTT/RTT/SEGGER_RTT.c **** 
 155:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   STRCPY
 156:libraries/RTT/RTT/SEGGER_RTT.c ****   #define STRCPY(pDest, pSrc)                             strcpy((pDest), (pSrc))
 157:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 158:libraries/RTT/RTT/SEGGER_RTT.c **** 
 159:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY_USE_BYTELOOP
 160:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_MEMCPY_USE_BYTELOOP                  0
 161:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 162:libraries/RTT/RTT/SEGGER_RTT.c **** 
 163:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY
 164:libraries/RTT/RTT/SEGGER_RTT.c ****   #ifdef  MEMCPY
 165:libraries/RTT/RTT/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      MEMCPY((pDest), (pSrc), (NumBytes))
 166:libraries/RTT/RTT/SEGGER_RTT.c ****   #else
 167:libraries/RTT/RTT/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      memcpy((pDest), (pSrc), (NumBytes))
 168:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 169:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 170:libraries/RTT/RTT/SEGGER_RTT.c **** 
 171:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   MIN
 172:libraries/RTT/RTT/SEGGER_RTT.c ****   #define MIN(a, b)         (((a) < (b)) ? (a) : (b))
 173:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 174:libraries/RTT/RTT/SEGGER_RTT.c **** 
 175:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef   MAX
 176:libraries/RTT/RTT/SEGGER_RTT.c ****   #define MAX(a, b)         (((a) > (b)) ? (a) : (b))
 177:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 178:libraries/RTT/RTT/SEGGER_RTT.c **** //
 179:libraries/RTT/RTT/SEGGER_RTT.c **** // For some environments, NULL may not be defined until certain headers are included
 180:libraries/RTT/RTT/SEGGER_RTT.c **** //
 181:libraries/RTT/RTT/SEGGER_RTT.c **** #ifndef NULL
 182:libraries/RTT/RTT/SEGGER_RTT.c ****   #define NULL 0
 183:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 184:libraries/RTT/RTT/SEGGER_RTT.c **** 
 185:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 186:libraries/RTT/RTT/SEGGER_RTT.c **** *
 187:libraries/RTT/RTT/SEGGER_RTT.c **** *       Defines, fixed
 188:libraries/RTT/RTT/SEGGER_RTT.c **** *
 189:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
 190:libraries/RTT/RTT/SEGGER_RTT.c **** */
 191:libraries/RTT/RTT/SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 192:libraries/RTT/RTT/SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 193:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 194:libraries/RTT/RTT/SEGGER_RTT.c **** 
 195:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 196:libraries/RTT/RTT/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
ARM GAS  /tmp/ccfEWiwI.s 			page 5


 197:libraries/RTT/RTT/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 198:libraries/RTT/RTT/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 199:libraries/RTT/RTT/SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 200:libraries/RTT/RTT/SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
 201:libraries/RTT/RTT/SEGGER_RTT.c ****                                   Var
 202:libraries/RTT/RTT/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 203:libraries/RTT/RTT/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 204:libraries/RTT/RTT/SEGGER_RTT.c ****   #else
 205:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 206:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 207:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 208:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 209:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 210:libraries/RTT/RTT/SEGGER_RTT.c **** 
 211:libraries/RTT/RTT/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 212:libraries/RTT/RTT/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 213:libraries/RTT/RTT/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 214:libraries/RTT/RTT/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 215:libraries/RTT/RTT/SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 216:libraries/RTT/RTT/SEGGER_RTT.c ****                                         Var
 217:libraries/RTT/RTT/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 218:libraries/RTT/RTT/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 219:libraries/RTT/RTT/SEGGER_RTT.c ****   #else
 220:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 221:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 222:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 223:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 224:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 225:libraries/RTT/RTT/SEGGER_RTT.c **** 
 226:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 227:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 228:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 229:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 230:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 231:libraries/RTT/RTT/SEGGER_RTT.c **** 
 232:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 233:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 234:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 235:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 236:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 237:libraries/RTT/RTT/SEGGER_RTT.c **** 
 238:libraries/RTT/RTT/SEGGER_RTT.c **** 
 239:libraries/RTT/RTT/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 240:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 241:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 242:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 243:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 244:libraries/RTT/RTT/SEGGER_RTT.c **** 
 245:libraries/RTT/RTT/SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 246:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 247:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 248:libraries/RTT/RTT/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 249:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 250:libraries/RTT/RTT/SEGGER_RTT.c **** 
 251:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 252:libraries/RTT/RTT/SEGGER_RTT.c **** *
 253:libraries/RTT/RTT/SEGGER_RTT.c **** *       Static const data
ARM GAS  /tmp/ccfEWiwI.s 			page 6


 254:libraries/RTT/RTT/SEGGER_RTT.c **** *
 255:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
 256:libraries/RTT/RTT/SEGGER_RTT.c **** */
 257:libraries/RTT/RTT/SEGGER_RTT.c **** 
 258:libraries/RTT/RTT/SEGGER_RTT.c **** static unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B
 259:libraries/RTT/RTT/SEGGER_RTT.c **** 
 260:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 261:libraries/RTT/RTT/SEGGER_RTT.c **** *
 262:libraries/RTT/RTT/SEGGER_RTT.c **** *       Static data
 263:libraries/RTT/RTT/SEGGER_RTT.c **** *
 264:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
 265:libraries/RTT/RTT/SEGGER_RTT.c **** */
 266:libraries/RTT/RTT/SEGGER_RTT.c **** 
 267:libraries/RTT/RTT/SEGGER_RTT.c **** //
 268:libraries/RTT/RTT/SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 269:libraries/RTT/RTT/SEGGER_RTT.c **** //
 270:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
 271:libraries/RTT/RTT/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 272:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_CB _SEGGER_RTT                                                             __attribu
 273:libraries/RTT/RTT/SEGGER_RTT.c ****     static char   _acUpBuffer  [SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_UP)]   __attribu
 274:libraries/RTT/RTT/SEGGER_RTT.c ****     static char   _acDownBuffer[SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_DOWN)] __attribu
 275:libraries/RTT/RTT/SEGGER_RTT.c ****   #else
 276:libraries/RTT/RTT/SEGGER_RTT.c ****     #error "Don't know how to place _SEGGER_RTT, _acUpBuffer, _acDownBuffer cache-line aligned"
 277:libraries/RTT/RTT/SEGGER_RTT.c ****   #endif
 278:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 279:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 280:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]))
 281:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]
 282:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 283:libraries/RTT/RTT/SEGGER_RTT.c **** 
 284:libraries/RTT/RTT/SEGGER_RTT.c **** static unsigned char _ActiveTerminal;
 285:libraries/RTT/RTT/SEGGER_RTT.c **** 
 286:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 287:libraries/RTT/RTT/SEGGER_RTT.c **** *
 288:libraries/RTT/RTT/SEGGER_RTT.c **** *       Static functions
 289:libraries/RTT/RTT/SEGGER_RTT.c **** *
 290:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
 291:libraries/RTT/RTT/SEGGER_RTT.c **** */
 292:libraries/RTT/RTT/SEGGER_RTT.c **** 
 293:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 294:libraries/RTT/RTT/SEGGER_RTT.c **** *
 295:libraries/RTT/RTT/SEGGER_RTT.c **** *       _DoInit()
 296:libraries/RTT/RTT/SEGGER_RTT.c **** *
 297:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 298:libraries/RTT/RTT/SEGGER_RTT.c **** *    Initializes the control block an buffers.
 299:libraries/RTT/RTT/SEGGER_RTT.c **** *    May only be called via INIT() to avoid overriding settings.
 300:libraries/RTT/RTT/SEGGER_RTT.c **** *
 301:libraries/RTT/RTT/SEGGER_RTT.c **** */
 302:libraries/RTT/RTT/SEGGER_RTT.c **** #define INIT()  {                                                                                  
 303:libraries/RTT/RTT/SEGGER_RTT.c ****                   volatile SEGGER_RTT_CB* pRTTCBInit;                                              
 304:libraries/RTT/RTT/SEGGER_RTT.c ****                   pRTTCBInit = (volatile SEGGER_RTT_CB*)((char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_
 305:libraries/RTT/RTT/SEGGER_RTT.c ****                   do {                                                                             
 306:libraries/RTT/RTT/SEGGER_RTT.c ****                     if (pRTTCBInit->acID[0] == '\0') {                                             
 307:libraries/RTT/RTT/SEGGER_RTT.c ****                       _DoInit();                                                                   
 308:libraries/RTT/RTT/SEGGER_RTT.c ****                     }                                                                              
 309:libraries/RTT/RTT/SEGGER_RTT.c ****                   } while (0);                                                                     
 310:libraries/RTT/RTT/SEGGER_RTT.c ****                 }
ARM GAS  /tmp/ccfEWiwI.s 			page 7


 311:libraries/RTT/RTT/SEGGER_RTT.c **** 
 312:libraries/RTT/RTT/SEGGER_RTT.c **** static void _DoInit(void) {
  32              		.loc 1 312 27 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		@ link register save eliminated.
 313:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
  37              		.loc 1 313 3 view .LVU1
 314:libraries/RTT/RTT/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
  38              		.loc 1 314 3 view .LVU2
 315:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned i;
  39              		.loc 1 315 3 view .LVU3
 316:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 317:libraries/RTT/RTT/SEGGER_RTT.c ****   // Initialize control block
 318:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 319:libraries/RTT/RTT/SEGGER_RTT.c ****   p                     = (volatile SEGGER_RTT_CB*)((char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);
  40              		.loc 1 319 3 view .LVU4
  41              	.LVL0:
 320:libraries/RTT/RTT/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
  42              		.loc 1 320 3 view .LVU5
  43              		.loc 1 320 25 is_stmt 0 view .LVU6
  44 0000 124A     		ldr	r2, .L4
  45 0002 0323     		movs	r3, #3
  46 0004 1361     		str	r3, [r2, #16]
 321:libraries/RTT/RTT/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
  47              		.loc 1 321 3 is_stmt 1 view .LVU7
  48              		.loc 1 321 25 is_stmt 0 view .LVU8
  49 0006 5361     		str	r3, [r2, #20]
 322:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 323:libraries/RTT/RTT/SEGGER_RTT.c ****   // Initialize up buffer 0
 324:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 325:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
  50              		.loc 1 325 3 is_stmt 1 view .LVU9
  51              		.loc 1 325 27 is_stmt 0 view .LVU10
  52 0008 1149     		ldr	r1, .L4+4
  53 000a 9161     		str	r1, [r2, #24]
 326:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
  54              		.loc 1 326 3 is_stmt 1 view .LVU11
  55              		.loc 1 326 27 is_stmt 0 view .LVU12
  56 000c 114B     		ldr	r3, .L4+8
  57 000e D361     		str	r3, [r2, #28]
 327:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
  58              		.loc 1 327 3 is_stmt 1 view .LVU13
  59              		.loc 1 327 27 is_stmt 0 view .LVU14
  60 0010 4FF48063 		mov	r3, #1024
  61 0014 1362     		str	r3, [r2, #32]
 328:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
  62              		.loc 1 328 3 is_stmt 1 view .LVU15
  63              		.loc 1 328 27 is_stmt 0 view .LVU16
  64 0016 0023     		movs	r3, #0
  65 0018 9362     		str	r3, [r2, #40]
 329:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
  66              		.loc 1 329 3 is_stmt 1 view .LVU17
  67              		.loc 1 329 27 is_stmt 0 view .LVU18
  68 001a 5362     		str	r3, [r2, #36]
 330:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
ARM GAS  /tmp/ccfEWiwI.s 			page 8


  69              		.loc 1 330 3 is_stmt 1 view .LVU19
  70              		.loc 1 330 27 is_stmt 0 view .LVU20
  71 001c D362     		str	r3, [r2, #44]
 331:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 332:libraries/RTT/RTT/SEGGER_RTT.c ****   // Initialize down buffer 0
 333:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 334:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
  72              		.loc 1 334 3 is_stmt 1 view .LVU21
  73              		.loc 1 334 29 is_stmt 0 view .LVU22
  74 001e 1166     		str	r1, [r2, #96]
 335:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
  75              		.loc 1 335 3 is_stmt 1 view .LVU23
  76              		.loc 1 335 29 is_stmt 0 view .LVU24
  77 0020 0D49     		ldr	r1, .L4+12
  78 0022 5166     		str	r1, [r2, #100]
 336:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
  79              		.loc 1 336 3 is_stmt 1 view .LVU25
  80              		.loc 1 336 29 is_stmt 0 view .LVU26
  81 0024 1021     		movs	r1, #16
  82 0026 9166     		str	r1, [r2, #104]
 337:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
  83              		.loc 1 337 3 is_stmt 1 view .LVU27
  84              		.loc 1 337 29 is_stmt 0 view .LVU28
  85 0028 1367     		str	r3, [r2, #112]
 338:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
  86              		.loc 1 338 3 is_stmt 1 view .LVU29
  87              		.loc 1 338 29 is_stmt 0 view .LVU30
  88 002a D366     		str	r3, [r2, #108]
 339:libraries/RTT/RTT/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
  89              		.loc 1 339 3 is_stmt 1 view .LVU31
  90              		.loc 1 339 29 is_stmt 0 view .LVU32
  91 002c 5367     		str	r3, [r2, #116]
 340:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 341:libraries/RTT/RTT/SEGGER_RTT.c ****   // Finish initialization of the control block.
 342:libraries/RTT/RTT/SEGGER_RTT.c ****   // Copy Id string backwards to make sure that "SEGGER RTT" is not found in initializer memory (us
 343:libraries/RTT/RTT/SEGGER_RTT.c ****   // as this would cause J-Link to "find" the control block at a wrong address.
 344:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 345:libraries/RTT/RTT/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
  92              		.loc 1 345 3 is_stmt 1 view .LVU33
  93              		.syntax unified
  94              	@ 345 "libraries/RTT/RTT/SEGGER_RTT.c" 1
  95 002e BFF35F8F 		dmb
  96              	
  97              	@ 0 "" 2
  98              		.loc 1 345 13 view .LVU34
 346:libraries/RTT/RTT/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
  99              		.loc 1 346 3 view .LVU35
 100              	.LVL1:
 101              		.loc 1 346 3 is_stmt 0 view .LVU36
 102              		.thumb
 103              		.syntax unified
 104 0032 06E0     		b	.L2
 105              	.LVL2:
 106              	.L3:
 347:libraries/RTT/RTT/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 107              		.loc 1 347 5 is_stmt 1 discriminator 3 view .LVU37
 108              		.loc 1 347 50 is_stmt 0 discriminator 3 view .LVU38
ARM GAS  /tmp/ccfEWiwI.s 			page 9


 109 0034 C3F10F02 		rsb	r2, r3, #15
 110              		.loc 1 347 27 discriminator 3 view .LVU39
 111 0038 0849     		ldr	r1, .L4+16
 112 003a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 113              		.loc 1 347 16 discriminator 3 view .LVU40
 114 003c 034A     		ldr	r2, .L4
 115 003e D154     		strb	r1, [r2, r3]
 346:libraries/RTT/RTT/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 116              		.loc 1 346 42 is_stmt 1 discriminator 3 view .LVU41
 117 0040 0133     		adds	r3, r3, #1
 118              	.LVL3:
 119              	.L2:
 346:libraries/RTT/RTT/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 120              		.loc 1 346 15 discriminator 1 view .LVU42
 346:libraries/RTT/RTT/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 121              		.loc 1 346 3 is_stmt 0 discriminator 1 view .LVU43
 122 0042 0F2B     		cmp	r3, #15
 123 0044 F6D9     		bls	.L3
 348:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 349:libraries/RTT/RTT/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
 124              		.loc 1 349 3 is_stmt 1 view .LVU44
 125              		.syntax unified
 126              	@ 349 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 127 0046 BFF35F8F 		dmb
 128              	
 129              	@ 0 "" 2
 130              		.loc 1 349 13 view .LVU45
 350:libraries/RTT/RTT/SEGGER_RTT.c **** }
 131              		.loc 1 350 1 is_stmt 0 view .LVU46
 132              		.thumb
 133              		.syntax unified
 134 004a 7047     		bx	lr
 135              	.L5:
 136              		.align	2
 137              	.L4:
 138 004c 00000000 		.word	.LANCHOR0
 139 0050 00000000 		.word	.LC0
 140 0054 00000000 		.word	.LANCHOR1
 141 0058 00000000 		.word	.LANCHOR2
 142 005c 00000000 		.word	.LANCHOR3
 143              		.cfi_endproc
 144              	.LFE0:
 146              		.section	.text._GetAvailWriteSpace,"ax",%progbits
 147              		.align	1
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	_GetAvailWriteSpace:
 154              	.LVL4:
 155              	.LFB4:
 351:libraries/RTT/RTT/SEGGER_RTT.c **** 
 352:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 353:libraries/RTT/RTT/SEGGER_RTT.c **** *
 354:libraries/RTT/RTT/SEGGER_RTT.c **** *       _WriteBlocking()
 355:libraries/RTT/RTT/SEGGER_RTT.c **** *
 356:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
ARM GAS  /tmp/ccfEWiwI.s 			page 10


 357:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 358:libraries/RTT/RTT/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 359:libraries/RTT/RTT/SEGGER_RTT.c **** *    read by the host.
 360:libraries/RTT/RTT/SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 361:libraries/RTT/RTT/SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
 362:libraries/RTT/RTT/SEGGER_RTT.c **** *
 363:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 364:libraries/RTT/RTT/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 365:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 366:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 367:libraries/RTT/RTT/SEGGER_RTT.c **** *
 368:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
 369:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 370:libraries/RTT/RTT/SEGGER_RTT.c **** */
 371:libraries/RTT/RTT/SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 372:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 373:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 374:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned RdOff;
 375:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned WrOff;
 376:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char* pDst;
 377:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 378:libraries/RTT/RTT/SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 379:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 380:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesWritten = 0u;
 381:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 382:libraries/RTT/RTT/SEGGER_RTT.c ****   do {
 383:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 384:libraries/RTT/RTT/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 385:libraries/RTT/RTT/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 386:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
 387:libraries/RTT/RTT/SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 388:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 389:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 390:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 391:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 392:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 393:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 394:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 395:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 396:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytesToWrite--) {
 397:libraries/RTT/RTT/SEGGER_RTT.c ****       *pDst++ = *pBuffer++;
 398:libraries/RTT/RTT/SEGGER_RTT.c ****     };
 399:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 400:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pBuffer, NumBytesToWrite);
 401:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 402:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 403:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 404:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 405:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 406:libraries/RTT/RTT/SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 407:libraries/RTT/RTT/SEGGER_RTT.c ****       WrOff = 0u;
 408:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 409:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 410:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 411:libraries/RTT/RTT/SEGGER_RTT.c ****   } while (NumBytes);
 412:libraries/RTT/RTT/SEGGER_RTT.c ****   return NumBytesWritten;
 413:libraries/RTT/RTT/SEGGER_RTT.c **** }
ARM GAS  /tmp/ccfEWiwI.s 			page 11


 414:libraries/RTT/RTT/SEGGER_RTT.c **** 
 415:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 416:libraries/RTT/RTT/SEGGER_RTT.c **** *
 417:libraries/RTT/RTT/SEGGER_RTT.c **** *       _WriteNoCheck()
 418:libraries/RTT/RTT/SEGGER_RTT.c **** *
 419:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 420:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 421:libraries/RTT/RTT/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 422:libraries/RTT/RTT/SEGGER_RTT.c **** *    read by the host.
 423:libraries/RTT/RTT/SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 424:libraries/RTT/RTT/SEGGER_RTT.c **** *
 425:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 426:libraries/RTT/RTT/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 427:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 428:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 429:libraries/RTT/RTT/SEGGER_RTT.c **** *
 430:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
 431:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 432:libraries/RTT/RTT/SEGGER_RTT.c **** */
 433:libraries/RTT/RTT/SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 434:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 435:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned WrOff;
 436:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned Rem;
 437:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char* pDst;
 438:libraries/RTT/RTT/SEGGER_RTT.c **** 
 439:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 440:libraries/RTT/RTT/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 441:libraries/RTT/RTT/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 442:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 443:libraries/RTT/RTT/SEGGER_RTT.c ****     // All data fits before wrap around
 444:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 445:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 446:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 447:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff += NumBytes;
 448:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytes--) {
 449:libraries/RTT/RTT/SEGGER_RTT.c ****       *pDst++ = *pData++;
 450:libraries/RTT/RTT/SEGGER_RTT.c ****     };
 451:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 452:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 453:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 454:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
 455:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 456:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 457:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 458:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
 459:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 460:libraries/RTT/RTT/SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 461:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 462:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 463:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 464:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 465:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 466:libraries/RTT/RTT/SEGGER_RTT.c ****       *pDst++ = *pData++;
 467:libraries/RTT/RTT/SEGGER_RTT.c ****     };
 468:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 469:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 470:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
ARM GAS  /tmp/ccfEWiwI.s 			page 12


 471:libraries/RTT/RTT/SEGGER_RTT.c ****       *pDst++ = *pData++;
 472:libraries/RTT/RTT/SEGGER_RTT.c ****     };
 473:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 474:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = NumBytes - Rem;
 475:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 476:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 477:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 478:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 479:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 480:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 481:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 482:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 483:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 484:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 485:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 486:libraries/RTT/RTT/SEGGER_RTT.c **** }
 487:libraries/RTT/RTT/SEGGER_RTT.c **** 
 488:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 489:libraries/RTT/RTT/SEGGER_RTT.c **** *
 490:libraries/RTT/RTT/SEGGER_RTT.c **** *       _PostTerminalSwitch()
 491:libraries/RTT/RTT/SEGGER_RTT.c **** *
 492:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 493:libraries/RTT/RTT/SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 494:libraries/RTT/RTT/SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 495:libraries/RTT/RTT/SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 496:libraries/RTT/RTT/SEGGER_RTT.c **** *
 497:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 498:libraries/RTT/RTT/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 499:libraries/RTT/RTT/SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 500:libraries/RTT/RTT/SEGGER_RTT.c **** */
 501:libraries/RTT/RTT/SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 502:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned char ac[2];
 503:libraries/RTT/RTT/SEGGER_RTT.c **** 
 504:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 505:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 506:libraries/RTT/RTT/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 507:libraries/RTT/RTT/SEGGER_RTT.c **** }
 508:libraries/RTT/RTT/SEGGER_RTT.c **** 
 509:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 510:libraries/RTT/RTT/SEGGER_RTT.c **** *
 511:libraries/RTT/RTT/SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 512:libraries/RTT/RTT/SEGGER_RTT.c **** *
 513:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 514:libraries/RTT/RTT/SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 515:libraries/RTT/RTT/SEGGER_RTT.c **** *    buffer without blocking.
 516:libraries/RTT/RTT/SEGGER_RTT.c **** *
 517:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 518:libraries/RTT/RTT/SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 519:libraries/RTT/RTT/SEGGER_RTT.c **** *
 520:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
 521:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 522:libraries/RTT/RTT/SEGGER_RTT.c **** */
 523:libraries/RTT/RTT/SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
 156              		.loc 1 523 66 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccfEWiwI.s 			page 13


 160              		@ link register save eliminated.
 524:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned RdOff;
 161              		.loc 1 524 3 view .LVU48
 525:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned WrOff;
 162              		.loc 1 525 3 view .LVU49
 526:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned r;
 163              		.loc 1 526 3 view .LVU50
 527:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 528:libraries/RTT/RTT/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 529:libraries/RTT/RTT/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 530:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 531:libraries/RTT/RTT/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 164              		.loc 1 531 3 view .LVU51
 165              		.loc 1 531 9 is_stmt 0 view .LVU52
 166 0000 0369     		ldr	r3, [r0, #16]
 167              	.LVL5:
 532:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 168              		.loc 1 532 3 is_stmt 1 view .LVU53
 169              		.loc 1 532 9 is_stmt 0 view .LVU54
 170 0002 C268     		ldr	r2, [r0, #12]
 171              	.LVL6:
 533:libraries/RTT/RTT/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 172              		.loc 1 533 3 is_stmt 1 view .LVU55
 173              		.loc 1 533 6 is_stmt 0 view .LVU56
 174 0004 9342     		cmp	r3, r2
 175 0006 04D8     		bhi	.L7
 534:libraries/RTT/RTT/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 176              		.loc 1 534 5 is_stmt 1 view .LVU57
 177              		.loc 1 534 14 is_stmt 0 view .LVU58
 178 0008 8068     		ldr	r0, [r0, #8]
 179              	.LVL7:
 180              		.loc 1 534 34 view .LVU59
 181 000a 801A     		subs	r0, r0, r2
 182              		.loc 1 534 42 view .LVU60
 183 000c 0344     		add	r3, r3, r0
 184              	.LVL8:
 185              		.loc 1 534 7 view .LVU61
 186 000e 581E     		subs	r0, r3, #1
 187              	.LVL9:
 188              		.loc 1 534 7 view .LVU62
 189 0010 7047     		bx	lr
 190              	.LVL10:
 191              	.L7:
 535:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
 536:libraries/RTT/RTT/SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
 192              		.loc 1 536 5 is_stmt 1 view .LVU63
 193              		.loc 1 536 15 is_stmt 0 view .LVU64
 194 0012 9B1A     		subs	r3, r3, r2
 195              	.LVL11:
 196              		.loc 1 536 7 view .LVU65
 197 0014 581E     		subs	r0, r3, #1
 198              	.LVL12:
 537:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 538:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
 199              		.loc 1 538 3 is_stmt 1 view .LVU66
 539:libraries/RTT/RTT/SEGGER_RTT.c **** }
 200              		.loc 1 539 1 is_stmt 0 view .LVU67
ARM GAS  /tmp/ccfEWiwI.s 			page 14


 201 0016 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE4:
 205              		.section	.text._WriteNoCheck,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	_WriteNoCheck:
 213              	.LVL13:
 214              	.LFB2:
 433:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 215              		.loc 1 433 94 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 433:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 219              		.loc 1 433 94 is_stmt 0 view .LVU69
 220 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 221              	.LCFI0:
 222              		.cfi_def_cfa_offset 32
 223              		.cfi_offset 3, -32
 224              		.cfi_offset 4, -28
 225              		.cfi_offset 5, -24
 226              		.cfi_offset 6, -20
 227              		.cfi_offset 7, -16
 228              		.cfi_offset 8, -12
 229              		.cfi_offset 9, -8
 230              		.cfi_offset 14, -4
 231 0004 0446     		mov	r4, r0
 232 0006 8846     		mov	r8, r1
 233 0008 1646     		mov	r6, r2
 434:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned WrOff;
 234              		.loc 1 434 3 is_stmt 1 view .LVU70
 435:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned Rem;
 235              		.loc 1 435 3 view .LVU71
 436:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char* pDst;
 236              		.loc 1 436 3 view .LVU72
 437:libraries/RTT/RTT/SEGGER_RTT.c **** 
 237              		.loc 1 437 3 view .LVU73
 439:libraries/RTT/RTT/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 238              		.loc 1 439 3 view .LVU74
 439:libraries/RTT/RTT/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 239              		.loc 1 439 9 is_stmt 0 view .LVU75
 240 000a C568     		ldr	r5, [r0, #12]
 241              	.LVL14:
 440:libraries/RTT/RTT/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 242              		.loc 1 440 3 is_stmt 1 view .LVU76
 440:libraries/RTT/RTT/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 243              		.loc 1 440 14 is_stmt 0 view .LVU77
 244 000c 8768     		ldr	r7, [r0, #8]
 440:libraries/RTT/RTT/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 245              		.loc 1 440 7 view .LVU78
 246 000e A7EB0509 		sub	r9, r7, r5
 247              	.LVL15:
 441:libraries/RTT/RTT/SEGGER_RTT.c ****     //
ARM GAS  /tmp/ccfEWiwI.s 			page 15


 248              		.loc 1 441 3 is_stmt 1 view .LVU79
 441:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 249              		.loc 1 441 6 is_stmt 0 view .LVU80
 250 0012 9145     		cmp	r9, r2
 251 0014 09D9     		bls	.L10
 445:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 252              		.loc 1 445 5 is_stmt 1 view .LVU81
 445:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 253              		.loc 1 445 18 is_stmt 0 view .LVU82
 254 0016 4068     		ldr	r0, [r0, #4]
 255              	.LVL16:
 454:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 256              		.loc 1 454 5 is_stmt 1 view .LVU83
 257 0018 2844     		add	r0, r0, r5
 258              	.LVL17:
 454:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 259              		.loc 1 454 5 is_stmt 0 view .LVU84
 260 001a FFF7FEFF 		bl	memcpy
 261              	.LVL18:
 455:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 262              		.loc 1 455 5 is_stmt 1 view .LVU85
 263              		.syntax unified
 264              	@ 455 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 265 001e BFF35F8F 		dmb
 266              	
 267              	@ 0 "" 2
 455:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 268              		.loc 1 455 15 view .LVU86
 456:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 269              		.loc 1 456 5 view .LVU87
 456:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 270              		.loc 1 456 26 is_stmt 0 view .LVU88
 271              		.thumb
 272              		.syntax unified
 273 0022 3544     		add	r5, r5, r6
 274              	.LVL19:
 456:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 275              		.loc 1 456 18 view .LVU89
 276 0024 E560     		str	r5, [r4, #12]
 277              	.L9:
 486:libraries/RTT/RTT/SEGGER_RTT.c **** 
 278              		.loc 1 486 1 view .LVU90
 279 0026 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 280              	.LVL20:
 281              	.L10:
 476:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 282              		.loc 1 476 5 is_stmt 1 view .LVU91
 477:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 283              		.loc 1 477 5 view .LVU92
 477:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 284              		.loc 1 477 18 is_stmt 0 view .LVU93
 285 002a 4068     		ldr	r0, [r0, #4]
 286              	.LVL21:
 478:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 287              		.loc 1 478 5 is_stmt 1 view .LVU94
 288 002c 4A46     		mov	r2, r9
 289              	.LVL22:
ARM GAS  /tmp/ccfEWiwI.s 			page 16


 478:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 290              		.loc 1 478 5 is_stmt 0 view .LVU95
 291 002e 2844     		add	r0, r0, r5
 292              	.LVL23:
 478:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 293              		.loc 1 478 5 view .LVU96
 294 0030 FFF7FEFF 		bl	memcpy
 295              	.LVL24:
 479:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 296              		.loc 1 479 5 is_stmt 1 view .LVU97
 479:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 297              		.loc 1 479 20 is_stmt 0 view .LVU98
 298 0034 ED1B     		subs	r5, r5, r7
 299              	.LVL25:
 479:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 300              		.loc 1 479 20 view .LVU99
 301 0036 3544     		add	r5, r5, r6
 302              	.LVL26:
 480:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 303              		.loc 1 480 5 is_stmt 1 view .LVU100
 481:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 304              		.loc 1 481 5 view .LVU101
 305 0038 2A46     		mov	r2, r5
 306 003a 08EB0901 		add	r1, r8, r9
 307 003e 6068     		ldr	r0, [r4, #4]
 308 0040 FFF7FEFF 		bl	memcpy
 309              	.LVL27:
 482:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 310              		.loc 1 482 5 view .LVU102
 311              		.syntax unified
 312              	@ 482 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 313 0044 BFF35F8F 		dmb
 314              	
 315              	@ 0 "" 2
 482:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 316              		.loc 1 482 15 view .LVU103
 483:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 317              		.loc 1 483 5 view .LVU104
 483:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 318              		.loc 1 483 18 is_stmt 0 view .LVU105
 319              		.thumb
 320              		.syntax unified
 321 0048 E560     		str	r5, [r4, #12]
 486:libraries/RTT/RTT/SEGGER_RTT.c **** 
 322              		.loc 1 486 1 view .LVU106
 323 004a ECE7     		b	.L9
 324              		.cfi_endproc
 325              	.LFE2:
 327              		.section	.text._WriteBlocking,"ax",%progbits
 328              		.align	1
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv4-sp-d16
 334              	_WriteBlocking:
 335              	.LVL28:
 336              	.LFB1:
ARM GAS  /tmp/ccfEWiwI.s 			page 17


 371:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 337              		.loc 1 371 101 is_stmt 1 view -0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 371:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 341              		.loc 1 371 101 is_stmt 0 view .LVU108
 342 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 343              	.LCFI1:
 344              		.cfi_def_cfa_offset 32
 345              		.cfi_offset 3, -32
 346              		.cfi_offset 4, -28
 347              		.cfi_offset 5, -24
 348              		.cfi_offset 6, -20
 349              		.cfi_offset 7, -16
 350              		.cfi_offset 8, -12
 351              		.cfi_offset 9, -8
 352              		.cfi_offset 14, -4
 353 0004 0646     		mov	r6, r0
 354 0006 8846     		mov	r8, r1
 355 0008 1746     		mov	r7, r2
 372:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 356              		.loc 1 372 3 is_stmt 1 view .LVU109
 373:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned RdOff;
 357              		.loc 1 373 3 view .LVU110
 374:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned WrOff;
 358              		.loc 1 374 3 view .LVU111
 375:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char* pDst;
 359              		.loc 1 375 3 view .LVU112
 376:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 360              		.loc 1 376 3 view .LVU113
 380:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 361              		.loc 1 380 3 view .LVU114
 362              	.LVL29:
 381:libraries/RTT/RTT/SEGGER_RTT.c ****   do {
 363              		.loc 1 381 3 view .LVU115
 381:libraries/RTT/RTT/SEGGER_RTT.c ****   do {
 364              		.loc 1 381 9 is_stmt 0 view .LVU116
 365 000a C568     		ldr	r5, [r0, #12]
 366              	.LVL30:
 380:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 367              		.loc 1 380 19 view .LVU117
 368 000c 4FF00009 		mov	r9, #0
 369 0010 1AE0     		b	.L17
 370              	.LVL31:
 371              	.L22:
 385:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
 372              		.loc 1 385 7 is_stmt 1 view .LVU118
 385:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
 373              		.loc 1 385 31 is_stmt 0 view .LVU119
 374 0012 641B     		subs	r4, r4, r5
 375              	.LVL32:
 385:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
 376              		.loc 1 385 23 view .LVU120
 377 0014 621E     		subs	r2, r4, #1
 378              	.LVL33:
 379              	.L15:
ARM GAS  /tmp/ccfEWiwI.s 			page 18


 389:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 380              		.loc 1 389 5 is_stmt 1 view .LVU121
 389:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 381              		.loc 1 389 23 is_stmt 0 view .LVU122
 382 0016 B368     		ldr	r3, [r6, #8]
 383 0018 5C1B     		subs	r4, r3, r5
 389:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 384              		.loc 1 389 21 view .LVU123
 385 001a 9442     		cmp	r4, r2
 386 001c 28BF     		it	cs
 387 001e 1446     		movcs	r4, r2
 388              	.LVL34:
 390:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 389              		.loc 1 390 5 is_stmt 1 view .LVU124
 390:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 390              		.loc 1 390 21 is_stmt 0 view .LVU125
 391 0020 BC42     		cmp	r4, r7
 392 0022 28BF     		it	cs
 393 0024 3C46     		movcs	r4, r7
 394              	.LVL35:
 391:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 395              		.loc 1 391 5 is_stmt 1 view .LVU126
 391:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 396              		.loc 1 391 18 is_stmt 0 view .LVU127
 397 0026 7068     		ldr	r0, [r6, #4]
 398              	.LVL36:
 400:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 399              		.loc 1 400 5 is_stmt 1 view .LVU128
 400 0028 2246     		mov	r2, r4
 401 002a 4146     		mov	r1, r8
 402 002c 2844     		add	r0, r0, r5
 403              	.LVL37:
 400:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 404              		.loc 1 400 5 is_stmt 0 view .LVU129
 405 002e FFF7FEFF 		bl	memcpy
 406              	.LVL38:
 401:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 407              		.loc 1 401 5 is_stmt 1 view .LVU130
 401:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 408              		.loc 1 401 21 is_stmt 0 view .LVU131
 409 0032 A144     		add	r9, r9, r4
 410              	.LVL39:
 402:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 411              		.loc 1 402 5 is_stmt 1 view .LVU132
 402:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 412              		.loc 1 402 21 is_stmt 0 view .LVU133
 413 0034 A044     		add	r8, r8, r4
 414              	.LVL40:
 403:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 415              		.loc 1 403 5 is_stmt 1 view .LVU134
 403:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 416              		.loc 1 403 21 is_stmt 0 view .LVU135
 417 0036 3F1B     		subs	r7, r7, r4
 418              	.LVL41:
 404:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 419              		.loc 1 404 5 is_stmt 1 view .LVU136
 404:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
ARM GAS  /tmp/ccfEWiwI.s 			page 19


 420              		.loc 1 404 21 is_stmt 0 view .LVU137
 421 0038 2544     		add	r5, r5, r4
 422              	.LVL42:
 406:libraries/RTT/RTT/SEGGER_RTT.c ****       WrOff = 0u;
 423              		.loc 1 406 5 is_stmt 1 view .LVU138
 406:libraries/RTT/RTT/SEGGER_RTT.c ****       WrOff = 0u;
 424              		.loc 1 406 23 is_stmt 0 view .LVU139
 425 003a B368     		ldr	r3, [r6, #8]
 406:libraries/RTT/RTT/SEGGER_RTT.c ****       WrOff = 0u;
 426              		.loc 1 406 8 view .LVU140
 427 003c AB42     		cmp	r3, r5
 428 003e 0BD0     		beq	.L20
 429              	.LVL43:
 430              	.L16:
 409:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 431              		.loc 1 409 5 is_stmt 1 view .LVU141
 432              		.syntax unified
 433              	@ 409 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 434 0040 BFF35F8F 		dmb
 435              	
 436              	@ 0 "" 2
 409:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 437              		.loc 1 409 15 view .LVU142
 410:libraries/RTT/RTT/SEGGER_RTT.c ****   } while (NumBytes);
 438              		.loc 1 410 5 view .LVU143
 410:libraries/RTT/RTT/SEGGER_RTT.c ****   } while (NumBytes);
 439              		.loc 1 410 18 is_stmt 0 view .LVU144
 440              		.thumb
 441              		.syntax unified
 442 0044 F560     		str	r5, [r6, #12]
 411:libraries/RTT/RTT/SEGGER_RTT.c ****   return NumBytesWritten;
 443              		.loc 1 411 11 is_stmt 1 view .LVU145
 411:libraries/RTT/RTT/SEGGER_RTT.c ****   return NumBytesWritten;
 444              		.loc 1 411 3 is_stmt 0 view .LVU146
 445 0046 4FB1     		cbz	r7, .L21
 446              	.LVL44:
 447              	.L17:
 382:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 448              		.loc 1 382 3 is_stmt 1 view .LVU147
 383:libraries/RTT/RTT/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 449              		.loc 1 383 5 view .LVU148
 383:libraries/RTT/RTT/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 450              		.loc 1 383 11 is_stmt 0 view .LVU149
 451 0048 3469     		ldr	r4, [r6, #16]
 452              	.LVL45:
 384:libraries/RTT/RTT/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 453              		.loc 1 384 5 is_stmt 1 view .LVU150
 384:libraries/RTT/RTT/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 454              		.loc 1 384 8 is_stmt 0 view .LVU151
 455 004a A542     		cmp	r5, r4
 456 004c E1D3     		bcc	.L22
 387:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 457              		.loc 1 387 7 is_stmt 1 view .LVU152
 387:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 458              		.loc 1 387 30 is_stmt 0 view .LVU153
 459 004e B268     		ldr	r2, [r6, #8]
 387:libraries/RTT/RTT/SEGGER_RTT.c ****     }
ARM GAS  /tmp/ccfEWiwI.s 			page 20


 460              		.loc 1 387 62 view .LVU154
 461 0050 641B     		subs	r4, r4, r5
 462              	.LVL46:
 387:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 463              		.loc 1 387 45 view .LVU155
 464 0052 1444     		add	r4, r4, r2
 387:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 465              		.loc 1 387 23 view .LVU156
 466 0054 621E     		subs	r2, r4, #1
 467              	.LVL47:
 387:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 468              		.loc 1 387 23 view .LVU157
 469 0056 DEE7     		b	.L15
 470              	.LVL48:
 471              	.L20:
 407:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 472              		.loc 1 407 13 view .LVU158
 473 0058 0025     		movs	r5, #0
 474              	.LVL49:
 407:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 475              		.loc 1 407 13 view .LVU159
 476 005a F1E7     		b	.L16
 477              	.LVL50:
 478              	.L21:
 412:libraries/RTT/RTT/SEGGER_RTT.c **** }
 479              		.loc 1 412 3 is_stmt 1 view .LVU160
 413:libraries/RTT/RTT/SEGGER_RTT.c **** 
 480              		.loc 1 413 1 is_stmt 0 view .LVU161
 481 005c 4846     		mov	r0, r9
 482 005e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 413:libraries/RTT/RTT/SEGGER_RTT.c **** 
 483              		.loc 1 413 1 view .LVU162
 484              		.cfi_endproc
 485              	.LFE1:
 487              		.section	.text._PostTerminalSwitch,"ax",%progbits
 488              		.align	1
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	_PostTerminalSwitch:
 495              	.LVL51:
 496              	.LFB3:
 501:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned char ac[2];
 497              		.loc 1 501 88 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 8
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned char ac[2];
 501              		.loc 1 501 88 is_stmt 0 view .LVU164
 502 0000 00B5     		push	{lr}
 503              	.LCFI2:
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 14, -4
 506 0002 83B0     		sub	sp, sp, #12
 507              	.LCFI3:
 508              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccfEWiwI.s 			page 21


 502:libraries/RTT/RTT/SEGGER_RTT.c **** 
 509              		.loc 1 502 3 is_stmt 1 view .LVU165
 504:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 510              		.loc 1 504 3 view .LVU166
 504:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 511              		.loc 1 504 9 is_stmt 0 view .LVU167
 512 0004 FF23     		movs	r3, #255
 513 0006 8DF80430 		strb	r3, [sp, #4]
 505:libraries/RTT/RTT/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 514              		.loc 1 505 3 is_stmt 1 view .LVU168
 505:libraries/RTT/RTT/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 515              		.loc 1 505 23 is_stmt 0 view .LVU169
 516 000a 054B     		ldr	r3, .L25
 517 000c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 505:libraries/RTT/RTT/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 518              		.loc 1 505 9 view .LVU170
 519 000e 8DF80530 		strb	r3, [sp, #5]
 506:libraries/RTT/RTT/SEGGER_RTT.c **** }
 520              		.loc 1 506 3 is_stmt 1 view .LVU171
 521 0012 0222     		movs	r2, #2
 522 0014 01A9     		add	r1, sp, #4
 523              	.LVL52:
 506:libraries/RTT/RTT/SEGGER_RTT.c **** }
 524              		.loc 1 506 3 is_stmt 0 view .LVU172
 525 0016 FFF7FEFF 		bl	_WriteBlocking
 526              	.LVL53:
 507:libraries/RTT/RTT/SEGGER_RTT.c **** 
 527              		.loc 1 507 1 view .LVU173
 528 001a 03B0     		add	sp, sp, #12
 529              	.LCFI4:
 530              		.cfi_def_cfa_offset 4
 531              		@ sp needed
 532 001c 5DF804FB 		ldr	pc, [sp], #4
 533              	.L26:
 534              		.align	2
 535              	.L25:
 536 0020 00000000 		.word	.LANCHOR4
 537              		.cfi_endproc
 538              	.LFE3:
 540              		.section	.text.SEGGER_RTT_ReadUpBufferNoLock,"ax",%progbits
 541              		.align	1
 542              		.global	SEGGER_RTT_ReadUpBufferNoLock
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu fpv4-sp-d16
 548              	SEGGER_RTT_ReadUpBufferNoLock:
 549              	.LVL54:
 550              	.LFB5:
 540:libraries/RTT/RTT/SEGGER_RTT.c **** 
 541:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 542:libraries/RTT/RTT/SEGGER_RTT.c **** *
 543:libraries/RTT/RTT/SEGGER_RTT.c **** *       Public code
 544:libraries/RTT/RTT/SEGGER_RTT.c **** *
 545:libraries/RTT/RTT/SEGGER_RTT.c **** **********************************************************************
 546:libraries/RTT/RTT/SEGGER_RTT.c **** */
 547:libraries/RTT/RTT/SEGGER_RTT.c **** 
ARM GAS  /tmp/ccfEWiwI.s 			page 22


 548:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 549:libraries/RTT/RTT/SEGGER_RTT.c **** *
 550:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBufferNoLock()
 551:libraries/RTT/RTT/SEGGER_RTT.c **** *
 552:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 553:libraries/RTT/RTT/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 554:libraries/RTT/RTT/SEGGER_RTT.c **** *    which have been previously stored by the application.
 555:libraries/RTT/RTT/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 556:libraries/RTT/RTT/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
 557:libraries/RTT/RTT/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 558:libraries/RTT/RTT/SEGGER_RTT.c **** *
 559:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 560:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 561:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 562:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 563:libraries/RTT/RTT/SEGGER_RTT.c **** *
 564:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
 565:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes that have been read.
 566:libraries/RTT/RTT/SEGGER_RTT.c **** *
 567:libraries/RTT/RTT/SEGGER_RTT.c **** *  Additional information
 568:libraries/RTT/RTT/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 569:libraries/RTT/RTT/SEGGER_RTT.c **** */
 570:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBufferNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 551              		.loc 1 570 96 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		.loc 1 570 96 is_stmt 0 view .LVU175
 556 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 557              	.LCFI5:
 558              		.cfi_def_cfa_offset 32
 559              		.cfi_offset 4, -32
 560              		.cfi_offset 5, -28
 561              		.cfi_offset 6, -24
 562              		.cfi_offset 7, -20
 563              		.cfi_offset 8, -16
 564              		.cfi_offset 9, -12
 565              		.cfi_offset 10, -8
 566              		.cfi_offset 14, -4
 567 0004 0446     		mov	r4, r0
 568 0006 8846     		mov	r8, r1
 569 0008 9146     		mov	r9, r2
 571:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 570              		.loc 1 571 3 is_stmt 1 view .LVU176
 572:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 571              		.loc 1 572 3 view .LVU177
 573:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                RdOff;
 572              		.loc 1 573 3 view .LVU178
 574:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                WrOff;
 573              		.loc 1 574 3 view .LVU179
 575:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 574              		.loc 1 575 3 view .LVU180
 576:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 575              		.loc 1 576 3 view .LVU181
 577:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char*          pSrc;
 576              		.loc 1 577 3 view .LVU182
 577              	.LBB2:
ARM GAS  /tmp/ccfEWiwI.s 			page 23


 578:libraries/RTT/RTT/SEGGER_RTT.c **** 
 579:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 578              		.loc 1 579 3 view .LVU183
 579              		.loc 1 579 3 view .LVU184
 580              	.LVL55:
 581              		.loc 1 579 3 view .LVU185
 582              		.loc 1 579 3 view .LVU186
 583 000a 274B     		ldr	r3, .L38
 584 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 585 000e C3B1     		cbz	r3, .L35
 586              	.LVL56:
 587              	.L28:
 588              		.loc 1 579 3 discriminator 3 view .LVU187
 589              	.LBE2:
 590              		.loc 1 579 9 discriminator 3 view .LVU188
 580:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 591              		.loc 1 580 3 discriminator 3 view .LVU189
 581:libraries/RTT/RTT/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 592              		.loc 1 581 3 discriminator 3 view .LVU190
 582:libraries/RTT/RTT/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 593              		.loc 1 582 3 discriminator 3 view .LVU191
 594              		.loc 1 582 9 is_stmt 0 discriminator 3 view .LVU192
 595 0010 04EB4403 		add	r3, r4, r4, lsl #1
 596 0014 244A     		ldr	r2, .L38
 597 0016 02EBC303 		add	r3, r2, r3, lsl #3
 598 001a 9F6A     		ldr	r7, [r3, #40]
 599              	.LVL57:
 583:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 600              		.loc 1 583 3 is_stmt 1 discriminator 3 view .LVU193
 601              		.loc 1 583 9 is_stmt 0 discriminator 3 view .LVU194
 602 001c 5D6A     		ldr	r5, [r3, #36]
 603              	.LVL58:
 584:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRead = 0u;
 604              		.loc 1 584 3 is_stmt 1 discriminator 3 view .LVU195
 585:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 586:libraries/RTT/RTT/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 587:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 588:libraries/RTT/RTT/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 605              		.loc 1 588 3 discriminator 3 view .LVU196
 606              		.loc 1 588 6 is_stmt 0 discriminator 3 view .LVU197
 607 001e AF42     		cmp	r7, r5
 608 0020 12D8     		bhi	.L36
 584:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRead = 0u;
 609              		.loc 1 584 16 view .LVU198
 610 0022 0026     		movs	r6, #0
 611              	.LVL59:
 612              	.L29:
 589:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 590:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 591:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 592:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 593:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 594:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 595:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 596:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytesRem--) {
 597:libraries/RTT/RTT/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 598:libraries/RTT/RTT/SEGGER_RTT.c ****     };
ARM GAS  /tmp/ccfEWiwI.s 			page 24


 599:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 600:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 601:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 602:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 603:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 604:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 605:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 606:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 607:libraries/RTT/RTT/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 608:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 609:libraries/RTT/RTT/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 610:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 611:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 612:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 613:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 614:libraries/RTT/RTT/SEGGER_RTT.c ****   // Read remaining items of buffer
 615:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 616:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 613              		.loc 1 616 3 is_stmt 1 view .LVU199
 614              		.loc 1 616 15 is_stmt 0 view .LVU200
 615 0024 ED1B     		subs	r5, r5, r7
 616              	.LVL60:
 617:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 617              		.loc 1 617 3 is_stmt 1 view .LVU201
 618              		.loc 1 617 15 is_stmt 0 view .LVU202
 619 0026 4D45     		cmp	r5, r9
 620 0028 28BF     		it	cs
 621 002a 4D46     		movcs	r5, r9
 622              	.LVL61:
 618:libraries/RTT/RTT/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 623              		.loc 1 618 3 is_stmt 1 view .LVU203
 624              		.loc 1 618 6 is_stmt 0 view .LVU204
 625 002c 65BB     		cbnz	r5, .L37
 626              	.LVL62:
 627              	.L30:
 619:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 620:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 621:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 622:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 623:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 624:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytesRem--) {
 625:libraries/RTT/RTT/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 626:libraries/RTT/RTT/SEGGER_RTT.c ****     };
 627:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 628:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 629:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 630:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 631:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 632:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 633:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 634:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 635:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 636:libraries/RTT/RTT/SEGGER_RTT.c ****   // Update read offset of buffer
 637:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 638:libraries/RTT/RTT/SEGGER_RTT.c ****   if (NumBytesRead) {
 628              		.loc 1 638 3 is_stmt 1 view .LVU205
 629              		.loc 1 638 6 is_stmt 0 view .LVU206
ARM GAS  /tmp/ccfEWiwI.s 			page 25


 630 002e 2EB1     		cbz	r6, .L27
 639:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 631              		.loc 1 639 5 is_stmt 1 view .LVU207
 632              		.loc 1 639 18 is_stmt 0 view .LVU208
 633 0030 04EB4404 		add	r4, r4, r4, lsl #1
 634              	.LVL63:
 635              		.loc 1 639 18 view .LVU209
 636 0034 1C48     		ldr	r0, .L38
 637 0036 00EBC404 		add	r4, r0, r4, lsl #3
 638 003a A762     		str	r7, [r4, #40]
 640:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 641:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 642:libraries/RTT/RTT/SEGGER_RTT.c ****   return NumBytesRead;
 639              		.loc 1 642 3 is_stmt 1 view .LVU210
 640              	.L27:
 643:libraries/RTT/RTT/SEGGER_RTT.c **** }
 641              		.loc 1 643 1 is_stmt 0 view .LVU211
 642 003c 3046     		mov	r0, r6
 643 003e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 644              	.LVL64:
 645              	.L35:
 646              	.LBB3:
 579:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 647              		.loc 1 579 3 is_stmt 1 discriminator 1 view .LVU212
 648 0042 FFF7FEFF 		bl	_DoInit
 649              	.LVL65:
 579:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 650              		.loc 1 579 3 is_stmt 0 discriminator 1 view .LVU213
 651 0046 E3E7     		b	.L28
 652              	.LVL66:
 653              	.L36:
 579:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 654              		.loc 1 579 3 discriminator 1 view .LVU214
 655              	.LBE3:
 589:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 656              		.loc 1 589 5 is_stmt 1 view .LVU215
 589:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 657              		.loc 1 589 24 is_stmt 0 view .LVU216
 658 0048 1346     		mov	r3, r2
 659 004a 04EB440A 		add	r10, r4, r4, lsl #1
 660 004e 02EBCA0A 		add	r10, r2, r10, lsl #3
 661 0052 DAF82060 		ldr	r6, [r10, #32]
 589:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 662              		.loc 1 589 17 view .LVU217
 663 0056 F61B     		subs	r6, r6, r7
 664              	.LVL67:
 590:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 665              		.loc 1 590 5 is_stmt 1 view .LVU218
 590:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 666              		.loc 1 590 17 is_stmt 0 view .LVU219
 667 0058 4E45     		cmp	r6, r9
 668 005a 28BF     		it	cs
 669 005c 4E46     		movcs	r6, r9
 670              	.LVL68:
 591:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 671              		.loc 1 591 5 is_stmt 1 view .LVU220
 591:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
ARM GAS  /tmp/ccfEWiwI.s 			page 26


 672              		.loc 1 591 18 is_stmt 0 view .LVU221
 673 005e 621C     		adds	r2, r4, #1
 674 0060 02EB4202 		add	r2, r2, r2, lsl #1
 675 0064 03EBC203 		add	r3, r3, r2, lsl #3
 676 0068 5968     		ldr	r1, [r3, #4]
 677              	.LVL69:
 600:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 678              		.loc 1 600 5 is_stmt 1 view .LVU222
 679 006a 3246     		mov	r2, r6
 680 006c 3944     		add	r1, r1, r7
 681              	.LVL70:
 600:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 682              		.loc 1 600 5 is_stmt 0 view .LVU223
 683 006e 4046     		mov	r0, r8
 684 0070 FFF7FEFF 		bl	memcpy
 685              	.LVL71:
 601:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 686              		.loc 1 601 5 is_stmt 1 view .LVU224
 602:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 687              		.loc 1 602 5 view .LVU225
 602:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 688              		.loc 1 602 18 is_stmt 0 view .LVU226
 689 0074 B044     		add	r8, r8, r6
 690              	.LVL72:
 603:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 691              		.loc 1 603 5 is_stmt 1 view .LVU227
 603:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 692              		.loc 1 603 18 is_stmt 0 view .LVU228
 693 0076 A9EB0609 		sub	r9, r9, r6
 694              	.LVL73:
 604:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 695              		.loc 1 604 5 is_stmt 1 view .LVU229
 604:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 696              		.loc 1 604 18 is_stmt 0 view .LVU230
 697 007a 3744     		add	r7, r7, r6
 698              	.LVL74:
 609:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 699              		.loc 1 609 5 is_stmt 1 view .LVU231
 609:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 700              		.loc 1 609 23 is_stmt 0 view .LVU232
 701 007c DAF82030 		ldr	r3, [r10, #32]
 609:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 702              		.loc 1 609 8 view .LVU233
 703 0080 BB42     		cmp	r3, r7
 704 0082 CFD1     		bne	.L29
 610:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 705              		.loc 1 610 13 view .LVU234
 706 0084 0027     		movs	r7, #0
 707              	.LVL75:
 610:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 708              		.loc 1 610 13 view .LVU235
 709 0086 CDE7     		b	.L29
 710              	.LVL76:
 711              	.L37:
 619:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 712              		.loc 1 619 5 is_stmt 1 view .LVU236
 619:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
ARM GAS  /tmp/ccfEWiwI.s 			page 27


 713              		.loc 1 619 18 is_stmt 0 view .LVU237
 714 0088 631C     		adds	r3, r4, #1
 715 008a 03EB4303 		add	r3, r3, r3, lsl #1
 716 008e 064A     		ldr	r2, .L38
 717 0090 02EBC303 		add	r3, r2, r3, lsl #3
 718 0094 5968     		ldr	r1, [r3, #4]
 719              	.LVL77:
 628:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 720              		.loc 1 628 5 is_stmt 1 view .LVU238
 721 0096 2A46     		mov	r2, r5
 722 0098 3944     		add	r1, r1, r7
 723              	.LVL78:
 628:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 724              		.loc 1 628 5 is_stmt 0 view .LVU239
 725 009a 4046     		mov	r0, r8
 726 009c FFF7FEFF 		bl	memcpy
 727              	.LVL79:
 629:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 728              		.loc 1 629 5 is_stmt 1 view .LVU240
 629:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 729              		.loc 1 629 18 is_stmt 0 view .LVU241
 730 00a0 2E44     		add	r6, r6, r5
 731              	.LVL80:
 630:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 732              		.loc 1 630 5 is_stmt 1 view .LVU242
 631:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 733              		.loc 1 631 5 view .LVU243
 632:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 734              		.loc 1 632 5 view .LVU244
 632:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 735              		.loc 1 632 18 is_stmt 0 view .LVU245
 736 00a2 2F44     		add	r7, r7, r5
 737              	.LVL81:
 632:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 738              		.loc 1 632 18 view .LVU246
 739 00a4 C3E7     		b	.L30
 740              	.L39:
 741 00a6 00BF     		.align	2
 742              	.L38:
 743 00a8 00000000 		.word	.LANCHOR0
 744              		.cfi_endproc
 745              	.LFE5:
 747              		.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 748              		.align	1
 749              		.global	SEGGER_RTT_ReadNoLock
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu fpv4-sp-d16
 755              	SEGGER_RTT_ReadNoLock:
 756              	.LVL82:
 757              	.LFB6:
 644:libraries/RTT/RTT/SEGGER_RTT.c **** 
 645:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 646:libraries/RTT/RTT/SEGGER_RTT.c **** *
 647:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
 648:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 28


 649:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 650:libraries/RTT/RTT/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 651:libraries/RTT/RTT/SEGGER_RTT.c **** *    which have been previously stored by the host.
 652:libraries/RTT/RTT/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 653:libraries/RTT/RTT/SEGGER_RTT.c **** *
 654:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 655:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 656:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 657:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 658:libraries/RTT/RTT/SEGGER_RTT.c **** *
 659:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
 660:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes that have been read.
 661:libraries/RTT/RTT/SEGGER_RTT.c **** */
 662:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 758              		.loc 1 662 88 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		.loc 1 662 88 is_stmt 0 view .LVU248
 763 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 764              	.LCFI6:
 765              		.cfi_def_cfa_offset 32
 766              		.cfi_offset 4, -32
 767              		.cfi_offset 5, -28
 768              		.cfi_offset 6, -24
 769              		.cfi_offset 7, -20
 770              		.cfi_offset 8, -16
 771              		.cfi_offset 9, -12
 772              		.cfi_offset 10, -8
 773              		.cfi_offset 14, -4
 774 0004 0446     		mov	r4, r0
 775 0006 8846     		mov	r8, r1
 776 0008 9146     		mov	r9, r2
 663:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 777              		.loc 1 663 3 is_stmt 1 view .LVU249
 664:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 778              		.loc 1 664 3 view .LVU250
 665:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                RdOff;
 779              		.loc 1 665 3 view .LVU251
 666:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                WrOff;
 780              		.loc 1 666 3 view .LVU252
 667:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 781              		.loc 1 667 3 view .LVU253
 668:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 782              		.loc 1 668 3 view .LVU254
 669:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char*          pSrc;
 783              		.loc 1 669 3 view .LVU255
 784              	.LBB4:
 670:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 671:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 785              		.loc 1 671 3 view .LVU256
 786              		.loc 1 671 3 view .LVU257
 787              	.LVL83:
 788              		.loc 1 671 3 view .LVU258
 789              		.loc 1 671 3 view .LVU259
 790 000a 244B     		ldr	r3, .L51
 791 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccfEWiwI.s 			page 29


 792 000e C3B1     		cbz	r3, .L48
 793              	.LVL84:
 794              	.L41:
 795              		.loc 1 671 3 discriminator 3 view .LVU260
 796              	.LBE4:
 797              		.loc 1 671 9 discriminator 3 view .LVU261
 672:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 798              		.loc 1 672 3 discriminator 3 view .LVU262
 673:libraries/RTT/RTT/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 799              		.loc 1 673 3 discriminator 3 view .LVU263
 674:libraries/RTT/RTT/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 800              		.loc 1 674 3 discriminator 3 view .LVU264
 801              		.loc 1 674 9 is_stmt 0 discriminator 3 view .LVU265
 802 0010 04EB4403 		add	r3, r4, r4, lsl #1
 803 0014 214A     		ldr	r2, .L51
 804 0016 02EBC303 		add	r3, r2, r3, lsl #3
 805 001a 1F6F     		ldr	r7, [r3, #112]
 806              	.LVL85:
 675:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 807              		.loc 1 675 3 is_stmt 1 discriminator 3 view .LVU266
 808              		.loc 1 675 9 is_stmt 0 discriminator 3 view .LVU267
 809 001c DD6E     		ldr	r5, [r3, #108]
 810              	.LVL86:
 676:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRead = 0u;
 811              		.loc 1 676 3 is_stmt 1 discriminator 3 view .LVU268
 677:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 678:libraries/RTT/RTT/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 679:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 680:libraries/RTT/RTT/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 812              		.loc 1 680 3 discriminator 3 view .LVU269
 813              		.loc 1 680 6 is_stmt 0 discriminator 3 view .LVU270
 814 001e AF42     		cmp	r7, r5
 815 0020 12D8     		bhi	.L49
 676:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRead = 0u;
 816              		.loc 1 676 16 view .LVU271
 817 0022 0026     		movs	r6, #0
 818              	.LVL87:
 819              	.L42:
 681:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 682:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 683:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 684:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 685:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 686:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 687:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 688:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytesRem--) {
 689:libraries/RTT/RTT/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 690:libraries/RTT/RTT/SEGGER_RTT.c ****     };
 691:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 692:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 693:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 694:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 695:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 696:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 697:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 698:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 699:libraries/RTT/RTT/SEGGER_RTT.c ****     // Handle wrap-around of buffer
ARM GAS  /tmp/ccfEWiwI.s 			page 30


 700:libraries/RTT/RTT/SEGGER_RTT.c ****     //
 701:libraries/RTT/RTT/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 702:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 703:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 704:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 705:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 706:libraries/RTT/RTT/SEGGER_RTT.c ****   // Read remaining items of buffer
 707:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 708:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 820              		.loc 1 708 3 is_stmt 1 view .LVU272
 821              		.loc 1 708 15 is_stmt 0 view .LVU273
 822 0024 ED1B     		subs	r5, r5, r7
 823              	.LVL88:
 709:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 824              		.loc 1 709 3 is_stmt 1 view .LVU274
 825              		.loc 1 709 15 is_stmt 0 view .LVU275
 826 0026 4D45     		cmp	r5, r9
 827 0028 28BF     		it	cs
 828 002a 4D46     		movcs	r5, r9
 829              	.LVL89:
 710:libraries/RTT/RTT/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 830              		.loc 1 710 3 is_stmt 1 view .LVU276
 831              		.loc 1 710 6 is_stmt 0 view .LVU277
 832 002c 3DBB     		cbnz	r5, .L50
 833              	.LVL90:
 834              	.L43:
 711:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 712:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 713:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 714:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 715:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 716:libraries/RTT/RTT/SEGGER_RTT.c ****     while (NumBytesRem--) {
 717:libraries/RTT/RTT/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 718:libraries/RTT/RTT/SEGGER_RTT.c ****     };
 719:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 720:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 721:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 722:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 723:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 724:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 725:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 726:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 727:libraries/RTT/RTT/SEGGER_RTT.c ****   if (NumBytesRead) {
 835              		.loc 1 727 3 is_stmt 1 view .LVU278
 836              		.loc 1 727 6 is_stmt 0 view .LVU279
 837 002e 2EB1     		cbz	r6, .L40
 728:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 838              		.loc 1 728 5 is_stmt 1 view .LVU280
 839              		.loc 1 728 18 is_stmt 0 view .LVU281
 840 0030 04EB4404 		add	r4, r4, r4, lsl #1
 841              	.LVL91:
 842              		.loc 1 728 18 view .LVU282
 843 0034 1948     		ldr	r0, .L51
 844 0036 00EBC404 		add	r4, r0, r4, lsl #3
 845 003a 2767     		str	r7, [r4, #112]
 729:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 730:libraries/RTT/RTT/SEGGER_RTT.c ****   //
ARM GAS  /tmp/ccfEWiwI.s 			page 31


 731:libraries/RTT/RTT/SEGGER_RTT.c ****   return NumBytesRead;
 846              		.loc 1 731 3 is_stmt 1 view .LVU283
 847              	.L40:
 732:libraries/RTT/RTT/SEGGER_RTT.c **** }
 848              		.loc 1 732 1 is_stmt 0 view .LVU284
 849 003c 3046     		mov	r0, r6
 850 003e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 851              	.LVL92:
 852              	.L48:
 853              	.LBB5:
 671:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 854              		.loc 1 671 3 is_stmt 1 discriminator 1 view .LVU285
 855 0042 FFF7FEFF 		bl	_DoInit
 856              	.LVL93:
 671:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 857              		.loc 1 671 3 is_stmt 0 discriminator 1 view .LVU286
 858 0046 E3E7     		b	.L41
 859              	.LVL94:
 860              	.L49:
 671:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 861              		.loc 1 671 3 discriminator 1 view .LVU287
 862              	.LBE5:
 681:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 863              		.loc 1 681 5 is_stmt 1 view .LVU288
 681:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 864              		.loc 1 681 24 is_stmt 0 view .LVU289
 865 0048 04EB440A 		add	r10, r4, r4, lsl #1
 866 004c 02EBCA0A 		add	r10, r2, r10, lsl #3
 867 0050 DAF86860 		ldr	r6, [r10, #104]
 681:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 868              		.loc 1 681 17 view .LVU290
 869 0054 F61B     		subs	r6, r6, r7
 870              	.LVL95:
 682:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 871              		.loc 1 682 5 is_stmt 1 view .LVU291
 682:libraries/RTT/RTT/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 872              		.loc 1 682 17 is_stmt 0 view .LVU292
 873 0056 4E45     		cmp	r6, r9
 874 0058 28BF     		it	cs
 875 005a 4E46     		movcs	r6, r9
 876              	.LVL96:
 683:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 877              		.loc 1 683 5 is_stmt 1 view .LVU293
 683:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 878              		.loc 1 683 18 is_stmt 0 view .LVU294
 879 005c DAF86410 		ldr	r1, [r10, #100]
 880              	.LVL97:
 692:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 881              		.loc 1 692 5 is_stmt 1 view .LVU295
 882 0060 3246     		mov	r2, r6
 883 0062 3944     		add	r1, r1, r7
 884              	.LVL98:
 692:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 885              		.loc 1 692 5 is_stmt 0 view .LVU296
 886 0064 4046     		mov	r0, r8
 887 0066 FFF7FEFF 		bl	memcpy
 888              	.LVL99:
ARM GAS  /tmp/ccfEWiwI.s 			page 32


 693:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 889              		.loc 1 693 5 is_stmt 1 view .LVU297
 694:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 890              		.loc 1 694 5 view .LVU298
 694:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 891              		.loc 1 694 18 is_stmt 0 view .LVU299
 892 006a B044     		add	r8, r8, r6
 893              	.LVL100:
 695:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 894              		.loc 1 695 5 is_stmt 1 view .LVU300
 695:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 895              		.loc 1 695 18 is_stmt 0 view .LVU301
 896 006c A9EB0609 		sub	r9, r9, r6
 897              	.LVL101:
 696:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 898              		.loc 1 696 5 is_stmt 1 view .LVU302
 696:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 899              		.loc 1 696 18 is_stmt 0 view .LVU303
 900 0070 3744     		add	r7, r7, r6
 901              	.LVL102:
 701:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 902              		.loc 1 701 5 is_stmt 1 view .LVU304
 701:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 903              		.loc 1 701 23 is_stmt 0 view .LVU305
 904 0072 DAF86830 		ldr	r3, [r10, #104]
 701:libraries/RTT/RTT/SEGGER_RTT.c ****       RdOff = 0u;
 905              		.loc 1 701 8 view .LVU306
 906 0076 BB42     		cmp	r3, r7
 907 0078 D4D1     		bne	.L42
 702:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 908              		.loc 1 702 13 view .LVU307
 909 007a 0027     		movs	r7, #0
 910              	.LVL103:
 702:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 911              		.loc 1 702 13 view .LVU308
 912 007c D2E7     		b	.L42
 913              	.LVL104:
 914              	.L50:
 711:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 915              		.loc 1 711 5 is_stmt 1 view .LVU309
 711:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 916              		.loc 1 711 18 is_stmt 0 view .LVU310
 917 007e 04EB4403 		add	r3, r4, r4, lsl #1
 918 0082 064A     		ldr	r2, .L51
 919 0084 02EBC303 		add	r3, r2, r3, lsl #3
 920 0088 596E     		ldr	r1, [r3, #100]
 921              	.LVL105:
 720:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 922              		.loc 1 720 5 is_stmt 1 view .LVU311
 923 008a 2A46     		mov	r2, r5
 924 008c 3944     		add	r1, r1, r7
 925              	.LVL106:
 720:libraries/RTT/RTT/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 926              		.loc 1 720 5 is_stmt 0 view .LVU312
 927 008e 4046     		mov	r0, r8
 928 0090 FFF7FEFF 		bl	memcpy
 929              	.LVL107:
ARM GAS  /tmp/ccfEWiwI.s 			page 33


 721:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 930              		.loc 1 721 5 is_stmt 1 view .LVU313
 721:libraries/RTT/RTT/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 931              		.loc 1 721 18 is_stmt 0 view .LVU314
 932 0094 2E44     		add	r6, r6, r5
 933              	.LVL108:
 722:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 934              		.loc 1 722 5 is_stmt 1 view .LVU315
 723:libraries/RTT/RTT/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 935              		.loc 1 723 5 view .LVU316
 724:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 936              		.loc 1 724 5 view .LVU317
 724:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 937              		.loc 1 724 18 is_stmt 0 view .LVU318
 938 0096 2F44     		add	r7, r7, r5
 939              	.LVL109:
 724:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 940              		.loc 1 724 18 view .LVU319
 941 0098 C9E7     		b	.L43
 942              	.L52:
 943 009a 00BF     		.align	2
 944              	.L51:
 945 009c 00000000 		.word	.LANCHOR0
 946              		.cfi_endproc
 947              	.LFE6:
 949              		.section	.text.SEGGER_RTT_ReadUpBuffer,"ax",%progbits
 950              		.align	1
 951              		.global	SEGGER_RTT_ReadUpBuffer
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu fpv4-sp-d16
 957              	SEGGER_RTT_ReadUpBuffer:
 958              	.LVL110:
 959              	.LFB7:
 733:libraries/RTT/RTT/SEGGER_RTT.c **** 
 734:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 735:libraries/RTT/RTT/SEGGER_RTT.c **** *
 736:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBuffer
 737:libraries/RTT/RTT/SEGGER_RTT.c **** *
 738:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 739:libraries/RTT/RTT/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 740:libraries/RTT/RTT/SEGGER_RTT.c **** *    which have been previously stored by the application.
 741:libraries/RTT/RTT/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
 742:libraries/RTT/RTT/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 743:libraries/RTT/RTT/SEGGER_RTT.c **** *
 744:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 745:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 746:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 747:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 748:libraries/RTT/RTT/SEGGER_RTT.c **** *
 749:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
 750:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes that have been read.
 751:libraries/RTT/RTT/SEGGER_RTT.c **** *
 752:libraries/RTT/RTT/SEGGER_RTT.c **** *  Additional information
 753:libraries/RTT/RTT/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 754:libraries/RTT/RTT/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
ARM GAS  /tmp/ccfEWiwI.s 			page 34


 755:libraries/RTT/RTT/SEGGER_RTT.c **** *    the read operation, writing is also locked.
 756:libraries/RTT/RTT/SEGGER_RTT.c **** *    If only one consumer reads from the up buffer, 
 757:libraries/RTT/RTT/SEGGER_RTT.c **** *    call sEGGER_RTT_ReadUpBufferNoLock() instead.
 758:libraries/RTT/RTT/SEGGER_RTT.c **** */
 759:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBuffer(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 960              		.loc 1 759 92 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964              		.loc 1 759 92 is_stmt 0 view .LVU321
 965 0000 10B5     		push	{r4, lr}
 966              	.LCFI7:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 4, -8
 969              		.cfi_offset 14, -4
 970 0002 0B46     		mov	r3, r1
 760:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesRead;
 971              		.loc 1 760 3 is_stmt 1 view .LVU322
 972              	.LBB6:
 761:libraries/RTT/RTT/SEGGER_RTT.c **** 
 762:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 973              		.loc 1 762 3 view .LVU323
 974              		.loc 1 762 3 view .LVU324
 975              		.syntax unified
 976              	@ 762 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 977 0004 EFF31184 		mrs   r4, basepri  
 978 0008 4FF02001 		mov   r1, #32       
 979 000c 81F31188 		msr   basepri, r1  
 980              		
 981              	@ 0 "" 2
 982              	.LVL111:
 983              		.loc 1 762 20 view .LVU325
 763:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 764:libraries/RTT/RTT/SEGGER_RTT.c ****   // Call the non-locking read function
 765:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 766:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadUpBufferNoLock(BufferIndex, pBuffer, BufferSize);
 984              		.loc 1 766 3 view .LVU326
 985              		.loc 1 766 18 is_stmt 0 view .LVU327
 986              		.thumb
 987              		.syntax unified
 988 0010 1946     		mov	r1, r3
 989 0012 FFF7FEFF 		bl	SEGGER_RTT_ReadUpBufferNoLock
 990              	.LVL112:
 767:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 768:libraries/RTT/RTT/SEGGER_RTT.c ****   // Finish up.
 769:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 770:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 991              		.loc 1 770 3 is_stmt 1 view .LVU328
 992              		.syntax unified
 993              	@ 770 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 994 0016 84F31188 		msr   basepri, r4  
 995              		
 996              	@ 0 "" 2
 997              		.thumb
 998              		.syntax unified
 999              	.LBE6:
 1000              		.loc 1 770 22 view .LVU329
ARM GAS  /tmp/ccfEWiwI.s 			page 35


 771:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 772:libraries/RTT/RTT/SEGGER_RTT.c ****   return NumBytesRead;
 1001              		.loc 1 772 3 view .LVU330
 773:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1002              		.loc 1 773 1 is_stmt 0 view .LVU331
 1003 001a 10BD     		pop	{r4, pc}
 1004              		.loc 1 773 1 view .LVU332
 1005              		.cfi_endproc
 1006              	.LFE7:
 1008              		.section	.text.SEGGER_RTT_Read,"ax",%progbits
 1009              		.align	1
 1010              		.global	SEGGER_RTT_Read
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	SEGGER_RTT_Read:
 1017              	.LVL113:
 1018              	.LFB8:
 774:libraries/RTT/RTT/SEGGER_RTT.c **** 
 775:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 776:libraries/RTT/RTT/SEGGER_RTT.c **** *
 777:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_Read
 778:libraries/RTT/RTT/SEGGER_RTT.c **** *
 779:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 780:libraries/RTT/RTT/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 781:libraries/RTT/RTT/SEGGER_RTT.c **** *    which have been previously stored by the host.
 782:libraries/RTT/RTT/SEGGER_RTT.c **** *
 783:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 784:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 785:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 786:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 787:libraries/RTT/RTT/SEGGER_RTT.c **** *
 788:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
 789:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes that have been read.
 790:libraries/RTT/RTT/SEGGER_RTT.c **** */
 791:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 1019              		.loc 1 791 84 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		.loc 1 791 84 is_stmt 0 view .LVU334
 1024 0000 10B5     		push	{r4, lr}
 1025              	.LCFI8:
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 4, -8
 1028              		.cfi_offset 14, -4
 1029 0002 0B46     		mov	r3, r1
 792:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned NumBytesRead;
 1030              		.loc 1 792 3 is_stmt 1 view .LVU335
 1031              	.LBB7:
 793:libraries/RTT/RTT/SEGGER_RTT.c **** 
 794:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1032              		.loc 1 794 3 view .LVU336
 1033              		.loc 1 794 3 view .LVU337
 1034              		.syntax unified
 1035              	@ 794 "libraries/RTT/RTT/SEGGER_RTT.c" 1
ARM GAS  /tmp/ccfEWiwI.s 			page 36


 1036 0004 EFF31184 		mrs   r4, basepri  
 1037 0008 4FF02001 		mov   r1, #32       
 1038 000c 81F31188 		msr   basepri, r1  
 1039              		
 1040              	@ 0 "" 2
 1041              	.LVL114:
 1042              		.loc 1 794 20 view .LVU338
 795:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 796:libraries/RTT/RTT/SEGGER_RTT.c ****   // Call the non-locking read function
 797:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 798:libraries/RTT/RTT/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 1043              		.loc 1 798 3 view .LVU339
 1044              		.loc 1 798 18 is_stmt 0 view .LVU340
 1045              		.thumb
 1046              		.syntax unified
 1047 0010 1946     		mov	r1, r3
 1048 0012 FFF7FEFF 		bl	SEGGER_RTT_ReadNoLock
 1049              	.LVL115:
 799:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 800:libraries/RTT/RTT/SEGGER_RTT.c ****   // Finish up.
 801:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 802:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1050              		.loc 1 802 3 is_stmt 1 view .LVU341
 1051              		.syntax unified
 1052              	@ 802 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1053 0016 84F31188 		msr   basepri, r4  
 1054              		
 1055              	@ 0 "" 2
 1056              		.thumb
 1057              		.syntax unified
 1058              	.LBE7:
 1059              		.loc 1 802 22 view .LVU342
 803:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 804:libraries/RTT/RTT/SEGGER_RTT.c ****   return NumBytesRead;
 1060              		.loc 1 804 3 view .LVU343
 805:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1061              		.loc 1 805 1 is_stmt 0 view .LVU344
 1062 001a 10BD     		pop	{r4, pc}
 1063              		.loc 1 805 1 view .LVU345
 1064              		.cfi_endproc
 1065              	.LFE8:
 1067              		.section	.text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 1068              		.align	1
 1069              		.global	SEGGER_RTT_WriteWithOverwriteNoLock
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1073              		.fpu fpv4-sp-d16
 1075              	SEGGER_RTT_WriteWithOverwriteNoLock:
 1076              	.LVL116:
 1077              	.LFB9:
 806:libraries/RTT/RTT/SEGGER_RTT.c **** 
 807:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 808:libraries/RTT/RTT/SEGGER_RTT.c **** *
 809:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 810:libraries/RTT/RTT/SEGGER_RTT.c **** *
 811:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
ARM GAS  /tmp/ccfEWiwI.s 			page 37


 812:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 813:libraries/RTT/RTT/SEGGER_RTT.c **** *    control block.
 814:libraries/RTT/RTT/SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application 
 815:libraries/RTT/RTT/SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 816:libraries/RTT/RTT/SEGGER_RTT.c **** *
 817:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 818:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 819:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 820:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 821:libraries/RTT/RTT/SEGGER_RTT.c **** *
 822:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
 823:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 824:libraries/RTT/RTT/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 825:libraries/RTT/RTT/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 826:libraries/RTT/RTT/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 827:libraries/RTT/RTT/SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link 
 828:libraries/RTT/RTT/SEGGER_RTT.c **** *        connection reads RTT data.
 829:libraries/RTT/RTT/SEGGER_RTT.c **** */
 830:libraries/RTT/RTT/SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 1078              		.loc 1 830 104 is_stmt 1 view -0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082              		.loc 1 830 104 is_stmt 0 view .LVU347
 1083 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1084              	.LCFI9:
 1085              		.cfi_def_cfa_offset 32
 1086              		.cfi_offset 3, -32
 1087              		.cfi_offset 4, -28
 1088              		.cfi_offset 5, -24
 1089              		.cfi_offset 6, -20
 1090              		.cfi_offset 7, -16
 1091              		.cfi_offset 8, -12
 1092              		.cfi_offset 9, -8
 1093              		.cfi_offset 14, -4
 1094 0004 0646     		mov	r6, r0
 1095 0006 8846     		mov	r8, r1
 1096 0008 1746     		mov	r7, r2
 831:libraries/RTT/RTT/SEGGER_RTT.c ****   const char*           pData;
 1097              		.loc 1 831 3 is_stmt 1 view .LVU348
 832:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1098              		.loc 1 832 3 view .LVU349
 833:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Avail;
 1099              		.loc 1 833 3 view .LVU350
 834:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char*        pDst;
 1100              		.loc 1 834 3 view .LVU351
 835:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 836:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 837:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 838:libraries/RTT/RTT/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1101              		.loc 1 838 3 view .LVU352
 1102              	.LVL117:
 839:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1103              		.loc 1 839 3 view .LVU353
 840:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 841:libraries/RTT/RTT/SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 842:libraries/RTT/RTT/SEGGER_RTT.c ****   //
ARM GAS  /tmp/ccfEWiwI.s 			page 38


 843:libraries/RTT/RTT/SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 1104              		.loc 1 843 3 view .LVU354
 1105              		.loc 1 843 12 is_stmt 0 view .LVU355
 1106 000a 00EB4002 		add	r2, r0, r0, lsl #1
 1107              	.LVL118:
 1108              		.loc 1 843 12 view .LVU356
 1109 000e 414B     		ldr	r3, .L70
 1110 0010 03EBC203 		add	r3, r3, r2, lsl #3
 1111 0014 596A     		ldr	r1, [r3, #36]
 1112              	.LVL119:
 1113              		.loc 1 843 28 view .LVU357
 1114 0016 9B6A     		ldr	r3, [r3, #40]
 1115              		.loc 1 843 6 view .LVU358
 1116 0018 9942     		cmp	r1, r3
 1117 001a 0FD0     		beq	.L68
 844:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 845:libraries/RTT/RTT/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 1118              		.loc 1 845 10 is_stmt 1 view .LVU359
 1119              		.loc 1 845 35 is_stmt 0 view .LVU360
 1120 001c 00EB4003 		add	r3, r0, r0, lsl #1
 1121 0020 3C4A     		ldr	r2, .L70
 1122 0022 02EBC303 		add	r3, r2, r3, lsl #3
 1123 0026 9B6A     		ldr	r3, [r3, #40]
 1124              		.loc 1 845 13 view .LVU361
 1125 0028 9942     		cmp	r1, r3
 1126 002a 19D2     		bcs	.L60
 846:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 1127              		.loc 1 846 5 is_stmt 1 view .LVU362
 1128              		.loc 1 846 18 is_stmt 0 view .LVU363
 1129 002c 00EB4003 		add	r3, r0, r0, lsl #1
 1130 0030 02EBC303 		add	r3, r2, r3, lsl #3
 1131 0034 9B6A     		ldr	r3, [r3, #40]
 1132              		.loc 1 846 26 view .LVU364
 1133 0036 5B1A     		subs	r3, r3, r1
 1134              		.loc 1 846 11 view .LVU365
 1135 0038 013B     		subs	r3, r3, #1
 1136              	.LVL120:
 1137              		.loc 1 846 11 view .LVU366
 1138 003a 05E0     		b	.L59
 1139              	.LVL121:
 1140              	.L68:
 844:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 1141              		.loc 1 844 5 is_stmt 1 view .LVU367
 844:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 1142              		.loc 1 844 18 is_stmt 0 view .LVU368
 1143 003c 1346     		mov	r3, r2
 1144 003e 354A     		ldr	r2, .L70
 1145 0040 02EBC303 		add	r3, r2, r3, lsl #3
 1146 0044 1B6A     		ldr	r3, [r3, #32]
 844:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 1147              		.loc 1 844 11 view .LVU369
 1148 0046 013B     		subs	r3, r3, #1
 1149              	.LVL122:
 1150              	.L59:
 847:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
 848:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 849:libraries/RTT/RTT/SEGGER_RTT.c ****   }
ARM GAS  /tmp/ccfEWiwI.s 			page 39


 850:libraries/RTT/RTT/SEGGER_RTT.c ****   if (NumBytes > Avail) {
 1151              		.loc 1 850 3 is_stmt 1 view .LVU370
 1152              		.loc 1 850 6 is_stmt 0 view .LVU371
 1153 0048 BB42     		cmp	r3, r7
 1154 004a 25D2     		bcs	.L61
 851:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 1155              		.loc 1 851 5 is_stmt 1 view .LVU372
 1156              		.loc 1 851 18 is_stmt 0 view .LVU373
 1157 004c 06EB4602 		add	r2, r6, r6, lsl #1
 1158 0050 3048     		ldr	r0, .L70
 1159              	.LVL123:
 1160              		.loc 1 851 18 view .LVU374
 1161 0052 00EBC202 		add	r2, r0, r2, lsl #3
 1162 0056 906A     		ldr	r0, [r2, #40]
 1163              		.loc 1 851 31 view .LVU375
 1164 0058 FB1A     		subs	r3, r7, r3
 1165              	.LVL124:
 1166              		.loc 1 851 18 view .LVU376
 1167 005a 0344     		add	r3, r3, r0
 1168 005c 9362     		str	r3, [r2, #40]
 852:libraries/RTT/RTT/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1169              		.loc 1 852 5 is_stmt 1 view .LVU377
 1170              		.loc 1 852 11 is_stmt 0 view .LVU378
 1171 005e 12E0     		b	.L62
 1172              	.LVL125:
 1173              	.L60:
 848:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1174              		.loc 1 848 5 is_stmt 1 view .LVU379
 848:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1175              		.loc 1 848 18 is_stmt 0 view .LVU380
 1176 0060 00EB4002 		add	r2, r0, r0, lsl #1
 1177 0064 2B4B     		ldr	r3, .L70
 1178 0066 03EBC202 		add	r2, r3, r2, lsl #3
 1179 006a 936A     		ldr	r3, [r2, #40]
 848:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1180              		.loc 1 848 26 view .LVU381
 1181 006c 5B1A     		subs	r3, r3, r1
 848:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1182              		.loc 1 848 53 view .LVU382
 1183 006e 126A     		ldr	r2, [r2, #32]
 848:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1184              		.loc 1 848 46 view .LVU383
 1185 0070 1344     		add	r3, r3, r2
 848:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1186              		.loc 1 848 11 view .LVU384
 1187 0072 013B     		subs	r3, r3, #1
 1188              	.LVL126:
 848:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1189              		.loc 1 848 11 view .LVU385
 1190 0074 E8E7     		b	.L59
 1191              	.LVL127:
 1192              	.L63:
 853:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 1193              		.loc 1 853 7 is_stmt 1 view .LVU386
 1194              		.loc 1 853 20 is_stmt 0 view .LVU387
 1195 0076 06EB4603 		add	r3, r6, r6, lsl #1
 1196 007a 264A     		ldr	r2, .L70
ARM GAS  /tmp/ccfEWiwI.s 			page 40


 1197 007c 02EBC303 		add	r3, r2, r3, lsl #3
 1198 0080 9A6A     		ldr	r2, [r3, #40]
 1199 0082 121A     		subs	r2, r2, r0
 1200 0084 9A62     		str	r2, [r3, #40]
 1201              	.L62:
 852:libraries/RTT/RTT/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1202              		.loc 1 852 11 is_stmt 1 view .LVU388
 852:libraries/RTT/RTT/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1203              		.loc 1 852 17 is_stmt 0 view .LVU389
 1204 0086 06EB4603 		add	r3, r6, r6, lsl #1
 1205 008a 224A     		ldr	r2, .L70
 1206 008c 02EBC303 		add	r3, r2, r3, lsl #3
 1207 0090 9A6A     		ldr	r2, [r3, #40]
 852:libraries/RTT/RTT/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1208              		.loc 1 852 33 view .LVU390
 1209 0092 186A     		ldr	r0, [r3, #32]
 852:libraries/RTT/RTT/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1210              		.loc 1 852 11 view .LVU391
 1211 0094 8242     		cmp	r2, r0
 1212 0096 EED2     		bcs	.L63
 1213              	.L61:
 854:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 855:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 856:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 857:libraries/RTT/RTT/SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
 858:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 859:libraries/RTT/RTT/SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 1214              		.loc 1 859 3 is_stmt 1 view .LVU392
 1215              		.loc 1 859 16 is_stmt 0 view .LVU393
 1216 0098 06EB4603 		add	r3, r6, r6, lsl #1
 1217 009c 1D4A     		ldr	r2, .L70
 1218 009e 02EBC303 		add	r3, r2, r3, lsl #3
 1219 00a2 1C6A     		ldr	r4, [r3, #32]
 1220              		.loc 1 859 9 view .LVU394
 1221 00a4 641A     		subs	r4, r4, r1
 1222              	.LVL128:
 1223              	.L66:
 860:libraries/RTT/RTT/SEGGER_RTT.c ****   do {
 1224              		.loc 1 860 3 is_stmt 1 view .LVU395
 861:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 1225              		.loc 1 861 5 view .LVU396
 1226              		.loc 1 861 8 is_stmt 0 view .LVU397
 1227 00a6 A742     		cmp	r7, r4
 1228 00a8 1BD3     		bcc	.L69
 862:libraries/RTT/RTT/SEGGER_RTT.c ****       //
 863:libraries/RTT/RTT/SEGGER_RTT.c ****       // Last round
 864:libraries/RTT/RTT/SEGGER_RTT.c ****       //
 865:libraries/RTT/RTT/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 866:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 867:libraries/RTT/RTT/SEGGER_RTT.c ****       Avail = NumBytes;
 868:libraries/RTT/RTT/SEGGER_RTT.c ****       while (NumBytes--) {
 869:libraries/RTT/RTT/SEGGER_RTT.c ****         *pDst++ = *pData++;
 870:libraries/RTT/RTT/SEGGER_RTT.c ****       };
 871:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 872:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff += Avail;
 873:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 874:libraries/RTT/RTT/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
ARM GAS  /tmp/ccfEWiwI.s 			page 41


 875:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 876:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 877:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 878:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
 879:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
 880:libraries/RTT/RTT/SEGGER_RTT.c ****       //
 881:libraries/RTT/RTT/SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
 882:libraries/RTT/RTT/SEGGER_RTT.c ****       //
 883:libraries/RTT/RTT/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 1229              		.loc 1 883 7 is_stmt 1 view .LVU398
 1230              		.loc 1 883 20 is_stmt 0 view .LVU399
 1231 00aa 1A4D     		ldr	r5, .L70
 1232 00ac 731C     		adds	r3, r6, #1
 1233 00ae 03EB4303 		add	r3, r3, r3, lsl #1
 1234 00b2 05EBC303 		add	r3, r5, r3, lsl #3
 1235 00b6 5868     		ldr	r0, [r3, #4]
 1236              		.loc 1 883 37 view .LVU400
 1237 00b8 06EB4603 		add	r3, r6, r6, lsl #1
 1238 00bc 05EBC305 		add	r5, r5, r3, lsl #3
 1239 00c0 6B6A     		ldr	r3, [r5, #36]
 1240              	.LVL129:
 884:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 885:libraries/RTT/RTT/SEGGER_RTT.c ****       NumBytes -= Avail;
 886:libraries/RTT/RTT/SEGGER_RTT.c ****       while (Avail--) {
 887:libraries/RTT/RTT/SEGGER_RTT.c ****         *pDst++ = *pData++;
 888:libraries/RTT/RTT/SEGGER_RTT.c ****       };
 889:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 890:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff = 0;
 891:libraries/RTT/RTT/SEGGER_RTT.c **** #else
 892:libraries/RTT/RTT/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, Avail);
 1241              		.loc 1 892 7 is_stmt 1 view .LVU401
 1242 00c2 2246     		mov	r2, r4
 1243 00c4 4146     		mov	r1, r8
 1244 00c6 1844     		add	r0, r0, r3
 1245              	.LVL130:
 1246              		.loc 1 892 7 is_stmt 0 view .LVU402
 1247 00c8 FFF7FEFF 		bl	memcpy
 1248              	.LVL131:
 893:libraries/RTT/RTT/SEGGER_RTT.c ****       pData += Avail;
 1249              		.loc 1 893 7 is_stmt 1 view .LVU403
 1250              		.loc 1 893 13 is_stmt 0 view .LVU404
 1251 00cc A044     		add	r8, r8, r4
 1252              	.LVL132:
 894:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 1253              		.loc 1 894 7 is_stmt 1 view .LVU405
 1254              		.syntax unified
 1255              	@ 894 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1256 00ce BFF35F8F 		dmb
 1257              	
 1258              	@ 0 "" 2
 1259              		.loc 1 894 17 view .LVU406
 895:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff = 0;
 1260              		.loc 1 895 7 view .LVU407
 1261              		.loc 1 895 20 is_stmt 0 view .LVU408
 1262              		.thumb
 1263              		.syntax unified
 1264 00d2 0023     		movs	r3, #0
ARM GAS  /tmp/ccfEWiwI.s 			page 42


 1265 00d4 6B62     		str	r3, [r5, #36]
 896:libraries/RTT/RTT/SEGGER_RTT.c ****       NumBytes -= Avail;
 1266              		.loc 1 896 7 is_stmt 1 view .LVU409
 1267              		.loc 1 896 16 is_stmt 0 view .LVU410
 1268 00d6 3F1B     		subs	r7, r7, r4
 1269              	.LVL133:
 897:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 898:libraries/RTT/RTT/SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 1270              		.loc 1 898 7 is_stmt 1 view .LVU411
 1271              		.loc 1 898 21 is_stmt 0 view .LVU412
 1272 00d8 2C6A     		ldr	r4, [r5, #32]
 1273              	.LVL134:
 1274              		.loc 1 898 13 view .LVU413
 1275 00da 013C     		subs	r4, r4, #1
 1276              	.LVL135:
 899:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 900:libraries/RTT/RTT/SEGGER_RTT.c ****   } while (NumBytes);
 1277              		.loc 1 900 11 is_stmt 1 view .LVU414
 1278              		.loc 1 900 3 is_stmt 0 view .LVU415
 1279 00dc 002F     		cmp	r7, #0
 1280 00de E2D1     		bne	.L66
 1281 00e0 15E0     		b	.L57
 1282              	.L69:
 865:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1283              		.loc 1 865 7 is_stmt 1 view .LVU416
 865:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1284              		.loc 1 865 20 is_stmt 0 view .LVU417
 1285 00e2 0C4C     		ldr	r4, .L70
 1286              	.LVL136:
 865:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1287              		.loc 1 865 20 view .LVU418
 1288 00e4 731C     		adds	r3, r6, #1
 1289 00e6 03EB4303 		add	r3, r3, r3, lsl #1
 1290 00ea 04EBC303 		add	r3, r4, r3, lsl #3
 1291 00ee 5868     		ldr	r0, [r3, #4]
 865:libraries/RTT/RTT/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1292              		.loc 1 865 37 view .LVU419
 1293 00f0 06EB4605 		add	r5, r6, r6, lsl #1
 1294 00f4 04EBC505 		add	r5, r4, r5, lsl #3
 1295 00f8 6B6A     		ldr	r3, [r5, #36]
 1296              	.LVL137:
 874:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 1297              		.loc 1 874 7 is_stmt 1 view .LVU420
 1298 00fa 3A46     		mov	r2, r7
 1299 00fc 4146     		mov	r1, r8
 1300 00fe 1844     		add	r0, r0, r3
 1301              	.LVL138:
 874:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 1302              		.loc 1 874 7 is_stmt 0 view .LVU421
 1303 0100 FFF7FEFF 		bl	memcpy
 1304              	.LVL139:
 875:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 1305              		.loc 1 875 7 is_stmt 1 view .LVU422
 1306              		.syntax unified
 1307              	@ 875 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1308 0104 BFF35F8F 		dmb
 1309              	
ARM GAS  /tmp/ccfEWiwI.s 			page 43


 1310              	@ 0 "" 2
 875:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 1311              		.loc 1 875 17 view .LVU423
 876:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 1312              		.loc 1 876 7 view .LVU424
 876:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 1313              		.loc 1 876 20 is_stmt 0 view .LVU425
 1314              		.thumb
 1315              		.syntax unified
 1316 0108 6B6A     		ldr	r3, [r5, #36]
 1317 010a 1F44     		add	r7, r7, r3
 1318              	.LVL140:
 876:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 1319              		.loc 1 876 20 view .LVU426
 1320 010c 6F62     		str	r7, [r5, #36]
 878:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
 1321              		.loc 1 878 7 is_stmt 1 view .LVU427
 1322              	.L57:
 901:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1323              		.loc 1 901 1 is_stmt 0 view .LVU428
 1324 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1325              	.LVL141:
 1326              	.L71:
 1327              		.loc 1 901 1 view .LVU429
 1328 0112 00BF     		.align	2
 1329              	.L70:
 1330 0114 00000000 		.word	.LANCHOR0
 1331              		.cfi_endproc
 1332              	.LFE9:
 1334              		.section	.text.SEGGER_RTT_WriteDownBufferNoLock,"ax",%progbits
 1335              		.align	1
 1336              		.global	SEGGER_RTT_WriteDownBufferNoLock
 1337              		.syntax unified
 1338              		.thumb
 1339              		.thumb_func
 1340              		.fpu fpv4-sp-d16
 1342              	SEGGER_RTT_WriteDownBufferNoLock:
 1343              	.LVL142:
 1344              	.LFB10:
 902:libraries/RTT/RTT/SEGGER_RTT.c **** 
 903:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 904:libraries/RTT/RTT/SEGGER_RTT.c **** *
 905:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 906:libraries/RTT/RTT/SEGGER_RTT.c **** *
 907:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 908:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 909:libraries/RTT/RTT/SEGGER_RTT.c **** *    control block which is then read by the host.
 910:libraries/RTT/RTT/SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 911:libraries/RTT/RTT/SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 912:libraries/RTT/RTT/SEGGER_RTT.c **** *
 913:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
 914:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 915:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 916:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 917:libraries/RTT/RTT/SEGGER_RTT.c **** *                 MUST be > 0!!!
 918:libraries/RTT/RTT/SEGGER_RTT.c **** *                 This is done for performance reasons, so no initial check has do be done.
 919:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 44


 920:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
 921:libraries/RTT/RTT/SEGGER_RTT.c **** *    1: Data has been copied
 922:libraries/RTT/RTT/SEGGER_RTT.c **** *    0: No space, data has not been copied
 923:libraries/RTT/RTT/SEGGER_RTT.c **** *
 924:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
 925:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 926:libraries/RTT/RTT/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 927:libraries/RTT/RTT/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 928:libraries/RTT/RTT/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 929:libraries/RTT/RTT/SEGGER_RTT.c **** */
 930:libraries/RTT/RTT/SEGGER_RTT.c **** #if (RTT_USE_ASM == 0)
 931:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 932:libraries/RTT/RTT/SEGGER_RTT.c ****   const char*           pData;
 933:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 934:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Avail;
 935:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              RdOff;
 936:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              WrOff;
 937:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Rem;
 938:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char*        pDst;
 939:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 940:libraries/RTT/RTT/SEGGER_RTT.c ****   // Cases:
 941:libraries/RTT/RTT/SEGGER_RTT.c ****   //   1) RdOff <= WrOff => Space until wrap-around is sufficient
 942:libraries/RTT/RTT/SEGGER_RTT.c ****   //   2) RdOff <= WrOff => Space after wrap-around needed (copy in 2 chunks)
 943:libraries/RTT/RTT/SEGGER_RTT.c ****   //   3) RdOff <  WrOff => No space in buf
 944:libraries/RTT/RTT/SEGGER_RTT.c ****   //   4) RdOff >  WrOff => Space is sufficient
 945:libraries/RTT/RTT/SEGGER_RTT.c ****   //   5) RdOff >  WrOff => No space in buf
 946:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 947:libraries/RTT/RTT/SEGGER_RTT.c ****   // 1) is the most common case for large buffers and assuming that J-Link reads the data fast enou
 948:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 949:libraries/RTT/RTT/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 950:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 951:libraries/RTT/RTT/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 952:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 953:libraries/RTT/RTT/SEGGER_RTT.c ****   if (RdOff <= WrOff) {                                 // Case 1), 2) or 3)
 954:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - WrOff - 1u;           // Space until wrap-around (assume 1 byte n
 955:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 1)?
 956:libraries/RTT/RTT/SEGGER_RTT.c **** CopyStraight:
 957:libraries/RTT/RTT/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 958:libraries/RTT/RTT/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, NumBytes);
 959:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 960:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 961:libraries/RTT/RTT/SEGGER_RTT.c ****       return 1;
 962:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 963:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail += RdOff;                                     // Space incl. wrap-around
 964:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 2? => If not, we have case 3) (does
 965:libraries/RTT/RTT/SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;                // Space until end of buffer
 966:libraries/RTT/RTT/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 967:libraries/RTT/RTT/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, Rem);                  // Copy 1st chunk
 968:libraries/RTT/RTT/SEGGER_RTT.c ****       NumBytes -= Rem;
 969:libraries/RTT/RTT/SEGGER_RTT.c ****       //
 970:libraries/RTT/RTT/SEGGER_RTT.c ****       // Special case: First check that assumed RdOff == 0 calculated that last element before wrap
 971:libraries/RTT/RTT/SEGGER_RTT.c ****       // But 2nd check (considering space until wrap-around and until RdOff) revealed that RdOff is
 972:libraries/RTT/RTT/SEGGER_RTT.c ****       // In this case, we may use a copy straight until buffer end anyway without needing to copy 2
 973:libraries/RTT/RTT/SEGGER_RTT.c ****       // Therefore, check if 2nd memcpy is necessary at all
 974:libraries/RTT/RTT/SEGGER_RTT.c ****       //
 975:libraries/RTT/RTT/SEGGER_RTT.c ****       if (NumBytes) {
 976:libraries/RTT/RTT/SEGGER_RTT.c ****         pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
ARM GAS  /tmp/ccfEWiwI.s 			page 45


 977:libraries/RTT/RTT/SEGGER_RTT.c ****         memcpy((void*)pDst, pData + Rem, NumBytes);
 978:libraries/RTT/RTT/SEGGER_RTT.c ****       }
 979:libraries/RTT/RTT/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 980:libraries/RTT/RTT/SEGGER_RTT.c ****       pRing->WrOff = NumBytes;
 981:libraries/RTT/RTT/SEGGER_RTT.c ****       return 1;
 982:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 983:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {                                             // Potential case 4)
 984:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 985:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                           // Case 4)? => If not, we have case 5) (does
 986:libraries/RTT/RTT/SEGGER_RTT.c ****       goto CopyStraight;
 987:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 988:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 989:libraries/RTT/RTT/SEGGER_RTT.c ****   return 0;     // No space in buffer
 990:libraries/RTT/RTT/SEGGER_RTT.c **** }
 991:libraries/RTT/RTT/SEGGER_RTT.c **** #endif
 992:libraries/RTT/RTT/SEGGER_RTT.c **** 
 993:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
 994:libraries/RTT/RTT/SEGGER_RTT.c **** *
 995:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBufferNoLock
 996:libraries/RTT/RTT/SEGGER_RTT.c **** *
 997:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
 998:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 999:libraries/RTT/RTT/SEGGER_RTT.c **** *    control block inside a <Down> buffer.
1000:libraries/RTT/RTT/SEGGER_RTT.c **** *    SEGGER_RTT_WriteDownBufferNoLock does not lock the application.
1001:libraries/RTT/RTT/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
1002:libraries/RTT/RTT/SEGGER_RTT.c **** *    RTT data from other channels, such as TCP/IP or UART.
1003:libraries/RTT/RTT/SEGGER_RTT.c **** *
1004:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1005:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Down"-buffer to be used.
1006:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1007:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1008:libraries/RTT/RTT/SEGGER_RTT.c **** *
1009:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1010:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1011:libraries/RTT/RTT/SEGGER_RTT.c **** *
1012:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1013:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1014:libraries/RTT/RTT/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1015:libraries/RTT/RTT/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1016:libraries/RTT/RTT/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1017:libraries/RTT/RTT/SEGGER_RTT.c **** *
1018:libraries/RTT/RTT/SEGGER_RTT.c **** *  Additional information
1019:libraries/RTT/RTT/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1020:libraries/RTT/RTT/SEGGER_RTT.c **** */
1021:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBufferNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBy
 1345              		.loc 1 1021 105 is_stmt 1 view -0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              		.loc 1 1021 105 is_stmt 0 view .LVU431
 1350 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1351              	.LCFI10:
 1352              		.cfi_def_cfa_offset 24
 1353              		.cfi_offset 3, -24
 1354              		.cfi_offset 4, -20
 1355              		.cfi_offset 5, -16
 1356              		.cfi_offset 6, -12
ARM GAS  /tmp/ccfEWiwI.s 			page 46


 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 0E46     		mov	r6, r1
 1360 0004 1546     		mov	r5, r2
1022:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                Status;
 1361              		.loc 1 1022 3 is_stmt 1 view .LVU432
1023:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                Avail;
 1362              		.loc 1 1023 3 view .LVU433
1024:libraries/RTT/RTT/SEGGER_RTT.c ****   const char*             pData;
 1363              		.loc 1 1024 3 view .LVU434
1025:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 1364              		.loc 1 1025 3 view .LVU435
1026:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1027:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get "to-target" ring buffer.
1028:libraries/RTT/RTT/SEGGER_RTT.c ****   // It is save to cast that to a "to-host" buffer. Up and Down buffer differ in volatility of offs
1029:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1030:libraries/RTT/RTT/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1365              		.loc 1 1030 3 view .LVU436
 1366              	.LVL143:
1031:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OFF)
 1367              		.loc 1 1031 3 view .LVU437
 1368              		.loc 1 1031 9 is_stmt 0 view .LVU438
 1369 0006 00EB4000 		add	r0, r0, r0, lsl #1
 1370              	.LVL144:
 1371              		.loc 1 1031 9 view .LVU439
 1372 000a C000     		lsls	r0, r0, #3
 1373 000c 6030     		adds	r0, r0, #96
 1374 000e 144F     		ldr	r7, .L79
 1375 0010 0744     		add	r7, r7, r0
 1376              	.LVL145:
1032:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1033:libraries/RTT/RTT/SEGGER_RTT.c ****   // How we output depends upon the mode...
1034:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1035:libraries/RTT/RTT/SEGGER_RTT.c ****   switch (pRing->Flags) {
 1377              		.loc 1 1035 3 is_stmt 1 view .LVU440
 1378              		.loc 1 1035 16 is_stmt 0 view .LVU441
 1379 0012 7C69     		ldr	r4, [r7, #20]
 1380              		.loc 1 1035 3 view .LVU442
 1381 0014 012C     		cmp	r4, #1
 1382 0016 11D0     		beq	.L73
 1383 0018 022C     		cmp	r4, #2
 1384 001a 1CD0     		beq	.L74
 1385 001c 14B1     		cbz	r4, .L78
 1386 001e 0024     		movs	r4, #0
 1387              	.LVL146:
1036:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1037:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1038:libraries/RTT/RTT/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1039:libraries/RTT/RTT/SEGGER_RTT.c ****     // of this output, don't bother.
1040:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1041:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1042:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1043:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = 0u;
1044:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
1045:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = NumBytes;
1046:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1047:libraries/RTT/RTT/SEGGER_RTT.c ****     }
ARM GAS  /tmp/ccfEWiwI.s 			page 47


1048:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1049:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1050:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1051:libraries/RTT/RTT/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
1052:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1053:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1054:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1055:libraries/RTT/RTT/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1056:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1057:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1058:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1059:libraries/RTT/RTT/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1060:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1061:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
1062:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1063:libraries/RTT/RTT/SEGGER_RTT.c ****   default:
1064:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 0u;
1065:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1066:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1067:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1068:libraries/RTT/RTT/SEGGER_RTT.c ****   // Finish up.
1069:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1070:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
 1388              		.loc 1 1070 3 is_stmt 1 view .LVU443
 1389              	.L72:
1071:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1390              		.loc 1 1071 1 is_stmt 0 view .LVU444
 1391 0020 2046     		mov	r0, r4
 1392 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1393              	.LVL147:
 1394              	.L78:
1041:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1395              		.loc 1 1041 5 is_stmt 1 view .LVU445
1041:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1396              		.loc 1 1041 13 is_stmt 0 view .LVU446
 1397 0024 3846     		mov	r0, r7
 1398 0026 FFF7FEFF 		bl	_GetAvailWriteSpace
 1399              	.LVL148:
1042:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = 0u;
 1400              		.loc 1 1042 5 is_stmt 1 view .LVU447
1042:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = 0u;
 1401              		.loc 1 1042 8 is_stmt 0 view .LVU448
 1402 002a 8542     		cmp	r5, r0
 1403 002c F8D8     		bhi	.L72
1045:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1404              		.loc 1 1045 7 is_stmt 1 view .LVU449
 1405              	.LVL149:
1046:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 1406              		.loc 1 1046 7 view .LVU450
 1407 002e 2A46     		mov	r2, r5
 1408 0030 3146     		mov	r1, r6
 1409 0032 3846     		mov	r0, r7
 1410              	.LVL150:
1046:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 1411              		.loc 1 1046 7 is_stmt 0 view .LVU451
 1412 0034 FFF7FEFF 		bl	_WriteNoCheck
 1413              	.LVL151:
ARM GAS  /tmp/ccfEWiwI.s 			page 48


1045:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1414              		.loc 1 1045 14 view .LVU452
 1415 0038 2C46     		mov	r4, r5
 1416 003a F1E7     		b	.L72
 1417              	.LVL152:
 1418              	.L73:
1053:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1419              		.loc 1 1053 5 is_stmt 1 view .LVU453
1053:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1420              		.loc 1 1053 13 is_stmt 0 view .LVU454
 1421 003c 3846     		mov	r0, r7
 1422 003e FFF7FEFF 		bl	_GetAvailWriteSpace
 1423              	.LVL153:
1054:libraries/RTT/RTT/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1424              		.loc 1 1054 5 is_stmt 1 view .LVU455
1054:libraries/RTT/RTT/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1425              		.loc 1 1054 12 is_stmt 0 view .LVU456
 1426 0042 2C46     		mov	r4, r5
 1427 0044 8542     		cmp	r5, r0
 1428 0046 28BF     		it	cs
 1429 0048 0446     		movcs	r4, r0
 1430              	.LVL154:
1055:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1431              		.loc 1 1055 5 is_stmt 1 view .LVU457
 1432 004a 2246     		mov	r2, r4
 1433 004c 3146     		mov	r1, r6
 1434 004e 3846     		mov	r0, r7
 1435              	.LVL155:
1055:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1436              		.loc 1 1055 5 is_stmt 0 view .LVU458
 1437 0050 FFF7FEFF 		bl	_WriteNoCheck
 1438              	.LVL156:
1056:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 1439              		.loc 1 1056 5 is_stmt 1 view .LVU459
 1440 0054 E4E7     		b	.L72
 1441              	.LVL157:
 1442              	.L74:
1061:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1443              		.loc 1 1061 5 view .LVU460
1061:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1444              		.loc 1 1061 14 is_stmt 0 view .LVU461
 1445 0056 3846     		mov	r0, r7
 1446 0058 FFF7FEFF 		bl	_WriteBlocking
 1447              	.LVL158:
1061:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1448              		.loc 1 1061 14 view .LVU462
 1449 005c 0446     		mov	r4, r0
 1450              	.LVL159:
1062:libraries/RTT/RTT/SEGGER_RTT.c ****   default:
 1451              		.loc 1 1062 5 is_stmt 1 view .LVU463
 1452 005e DFE7     		b	.L72
 1453              	.L80:
 1454              		.align	2
 1455              	.L79:
 1456 0060 00000000 		.word	.LANCHOR0
 1457              		.cfi_endproc
 1458              	.LFE10:
ARM GAS  /tmp/ccfEWiwI.s 			page 49


 1460              		.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 1461              		.align	1
 1462              		.global	SEGGER_RTT_WriteNoLock
 1463              		.syntax unified
 1464              		.thumb
 1465              		.thumb_func
 1466              		.fpu fpv4-sp-d16
 1468              	SEGGER_RTT_WriteNoLock:
 1469              	.LVL160:
 1470              	.LFB11:
1072:libraries/RTT/RTT/SEGGER_RTT.c **** 
1073:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1074:libraries/RTT/RTT/SEGGER_RTT.c **** *
1075:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
1076:libraries/RTT/RTT/SEGGER_RTT.c **** *
1077:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1078:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1079:libraries/RTT/RTT/SEGGER_RTT.c **** *    control block which is then read by the host.
1080:libraries/RTT/RTT/SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
1081:libraries/RTT/RTT/SEGGER_RTT.c **** *
1082:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1083:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1084:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1085:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1086:libraries/RTT/RTT/SEGGER_RTT.c **** *
1087:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1088:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1089:libraries/RTT/RTT/SEGGER_RTT.c **** *
1090:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1091:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1092:libraries/RTT/RTT/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1093:libraries/RTT/RTT/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1094:libraries/RTT/RTT/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1095:libraries/RTT/RTT/SEGGER_RTT.c **** */
1096:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1471              		.loc 1 1096 95 view -0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		.loc 1 1096 95 is_stmt 0 view .LVU465
 1476 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1477              	.LCFI11:
 1478              		.cfi_def_cfa_offset 24
 1479              		.cfi_offset 3, -24
 1480              		.cfi_offset 4, -20
 1481              		.cfi_offset 5, -16
 1482              		.cfi_offset 6, -12
 1483              		.cfi_offset 7, -8
 1484              		.cfi_offset 14, -4
 1485 0002 0F46     		mov	r7, r1
 1486 0004 1646     		mov	r6, r2
1097:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Status;
 1487              		.loc 1 1097 3 is_stmt 1 view .LVU466
1098:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Avail;
 1488              		.loc 1 1098 3 view .LVU467
1099:libraries/RTT/RTT/SEGGER_RTT.c ****   const char*           pData;
 1489              		.loc 1 1099 3 view .LVU468
ARM GAS  /tmp/ccfEWiwI.s 			page 50


1100:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1490              		.loc 1 1100 3 view .LVU469
1101:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1102:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1103:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1104:libraries/RTT/RTT/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1491              		.loc 1 1104 3 view .LVU470
 1492              	.LVL161:
1105:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1493              		.loc 1 1105 3 view .LVU471
 1494              		.loc 1 1105 9 is_stmt 0 view .LVU472
 1495 0006 184B     		ldr	r3, .L88
 1496 0008 451C     		adds	r5, r0, #1
 1497 000a 05EB4505 		add	r5, r5, r5, lsl #1
 1498 000e 03EBC505 		add	r5, r3, r5, lsl #3
 1499              	.LVL162:
1106:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1107:libraries/RTT/RTT/SEGGER_RTT.c ****   // How we output depends upon the mode...
1108:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1109:libraries/RTT/RTT/SEGGER_RTT.c ****   switch (pRing->Flags) {
 1500              		.loc 1 1109 3 is_stmt 1 view .LVU473
 1501              		.loc 1 1109 16 is_stmt 0 view .LVU474
 1502 0012 00EB4000 		add	r0, r0, r0, lsl #1
 1503              	.LVL163:
 1504              		.loc 1 1109 16 view .LVU475
 1505 0016 03EBC000 		add	r0, r3, r0, lsl #3
 1506 001a C46A     		ldr	r4, [r0, #44]
 1507              		.loc 1 1109 3 view .LVU476
 1508 001c 012C     		cmp	r4, #1
 1509 001e 11D0     		beq	.L82
 1510 0020 022C     		cmp	r4, #2
 1511 0022 1CD0     		beq	.L83
 1512 0024 14B1     		cbz	r4, .L87
 1513 0026 0024     		movs	r4, #0
 1514              	.LVL164:
1110:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1111:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1112:libraries/RTT/RTT/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1113:libraries/RTT/RTT/SEGGER_RTT.c ****     // of this output, don't bother.
1114:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1115:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1116:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1117:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = 0u;
1118:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {
1119:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = NumBytes;
1120:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1121:libraries/RTT/RTT/SEGGER_RTT.c ****     }
1122:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1123:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1124:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1125:libraries/RTT/RTT/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
1126:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1127:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1128:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1129:libraries/RTT/RTT/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1130:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1131:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
ARM GAS  /tmp/ccfEWiwI.s 			page 51


1132:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1133:libraries/RTT/RTT/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1134:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1135:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
1136:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1137:libraries/RTT/RTT/SEGGER_RTT.c ****   default:
1138:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 0u;
1139:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
1140:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1141:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1142:libraries/RTT/RTT/SEGGER_RTT.c ****   // Finish up.
1143:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1144:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
 1515              		.loc 1 1144 3 is_stmt 1 view .LVU477
 1516              	.L81:
1145:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1517              		.loc 1 1145 1 is_stmt 0 view .LVU478
 1518 0028 2046     		mov	r0, r4
 1519 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1520              	.LVL165:
 1521              	.L87:
1115:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1522              		.loc 1 1115 5 is_stmt 1 view .LVU479
1115:libraries/RTT/RTT/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1523              		.loc 1 1115 13 is_stmt 0 view .LVU480
 1524 002c 2846     		mov	r0, r5
 1525 002e FFF7FEFF 		bl	_GetAvailWriteSpace
 1526              	.LVL166:
1116:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = 0u;
 1527              		.loc 1 1116 5 is_stmt 1 view .LVU481
1116:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = 0u;
 1528              		.loc 1 1116 8 is_stmt 0 view .LVU482
 1529 0032 8642     		cmp	r6, r0
 1530 0034 F8D8     		bhi	.L81
1119:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1531              		.loc 1 1119 7 is_stmt 1 view .LVU483
 1532              	.LVL167:
1120:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 1533              		.loc 1 1120 7 view .LVU484
 1534 0036 3246     		mov	r2, r6
 1535 0038 3946     		mov	r1, r7
 1536 003a 2846     		mov	r0, r5
 1537              	.LVL168:
1120:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 1538              		.loc 1 1120 7 is_stmt 0 view .LVU485
 1539 003c FFF7FEFF 		bl	_WriteNoCheck
 1540              	.LVL169:
1119:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1541              		.loc 1 1119 14 view .LVU486
 1542 0040 3446     		mov	r4, r6
 1543 0042 F1E7     		b	.L81
 1544              	.LVL170:
 1545              	.L82:
1127:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1546              		.loc 1 1127 5 is_stmt 1 view .LVU487
1127:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1547              		.loc 1 1127 13 is_stmt 0 view .LVU488
ARM GAS  /tmp/ccfEWiwI.s 			page 52


 1548 0044 2846     		mov	r0, r5
 1549 0046 FFF7FEFF 		bl	_GetAvailWriteSpace
 1550              	.LVL171:
1128:libraries/RTT/RTT/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1551              		.loc 1 1128 5 is_stmt 1 view .LVU489
1128:libraries/RTT/RTT/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1552              		.loc 1 1128 12 is_stmt 0 view .LVU490
 1553 004a 3446     		mov	r4, r6
 1554 004c 8642     		cmp	r6, r0
 1555 004e 28BF     		it	cs
 1556 0050 0446     		movcs	r4, r0
 1557              	.LVL172:
1129:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1558              		.loc 1 1129 5 is_stmt 1 view .LVU491
 1559 0052 2246     		mov	r2, r4
 1560 0054 3946     		mov	r1, r7
 1561 0056 2846     		mov	r0, r5
 1562              	.LVL173:
1129:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1563              		.loc 1 1129 5 is_stmt 0 view .LVU492
 1564 0058 FFF7FEFF 		bl	_WriteNoCheck
 1565              	.LVL174:
1130:libraries/RTT/RTT/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 1566              		.loc 1 1130 5 is_stmt 1 view .LVU493
 1567 005c E4E7     		b	.L81
 1568              	.LVL175:
 1569              	.L83:
1135:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1570              		.loc 1 1135 5 view .LVU494
1135:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1571              		.loc 1 1135 14 is_stmt 0 view .LVU495
 1572 005e 2846     		mov	r0, r5
 1573 0060 FFF7FEFF 		bl	_WriteBlocking
 1574              	.LVL176:
1135:libraries/RTT/RTT/SEGGER_RTT.c ****     break;
 1575              		.loc 1 1135 14 view .LVU496
 1576 0064 0446     		mov	r4, r0
 1577              	.LVL177:
1136:libraries/RTT/RTT/SEGGER_RTT.c ****   default:
 1578              		.loc 1 1136 5 is_stmt 1 view .LVU497
 1579 0066 DFE7     		b	.L81
 1580              	.L89:
 1581              		.align	2
 1582              	.L88:
 1583 0068 00000000 		.word	.LANCHOR0
 1584              		.cfi_endproc
 1585              	.LFE11:
 1587              		.section	.text.SEGGER_RTT_WriteDownBuffer,"ax",%progbits
 1588              		.align	1
 1589              		.global	SEGGER_RTT_WriteDownBuffer
 1590              		.syntax unified
 1591              		.thumb
 1592              		.thumb_func
 1593              		.fpu fpv4-sp-d16
 1595              	SEGGER_RTT_WriteDownBuffer:
 1596              	.LVL178:
 1597              	.LFB12:
ARM GAS  /tmp/ccfEWiwI.s 			page 53


1146:libraries/RTT/RTT/SEGGER_RTT.c **** 
1147:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1148:libraries/RTT/RTT/SEGGER_RTT.c **** *
1149:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBuffer
1150:libraries/RTT/RTT/SEGGER_RTT.c **** *
1151:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1152:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT control block in a <Down> buffer.
1153:libraries/RTT/RTT/SEGGER_RTT.c **** *
1154:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1155:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1156:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1157:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1158:libraries/RTT/RTT/SEGGER_RTT.c **** *
1159:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1160:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1161:libraries/RTT/RTT/SEGGER_RTT.c **** *
1162:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1163:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1164:libraries/RTT/RTT/SEGGER_RTT.c **** *
1165:libraries/RTT/RTT/SEGGER_RTT.c **** *  Additional information
1166:libraries/RTT/RTT/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1167:libraries/RTT/RTT/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
1168:libraries/RTT/RTT/SEGGER_RTT.c **** *    the write operation, writing from the application is also locked.
1169:libraries/RTT/RTT/SEGGER_RTT.c **** *    If only one consumer writes to the down buffer, 
1170:libraries/RTT/RTT/SEGGER_RTT.c **** *    call SEGGER_RTT_WriteDownBufferNoLock() instead.
1171:libraries/RTT/RTT/SEGGER_RTT.c **** */
1172:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBuffer(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1598              		.loc 1 1172 99 view -0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602              		.loc 1 1172 99 is_stmt 0 view .LVU499
 1603 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1604              	.LCFI12:
 1605              		.cfi_def_cfa_offset 24
 1606              		.cfi_offset 3, -24
 1607              		.cfi_offset 4, -20
 1608              		.cfi_offset 5, -16
 1609              		.cfi_offset 6, -12
 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
 1612 0002 0446     		mov	r4, r0
 1613 0004 0D46     		mov	r5, r1
 1614 0006 1646     		mov	r6, r2
1173:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned Status;
 1615              		.loc 1 1173 3 is_stmt 1 view .LVU500
 1616              	.LBB8:
1174:libraries/RTT/RTT/SEGGER_RTT.c **** 
1175:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 1617              		.loc 1 1175 3 view .LVU501
 1618              		.loc 1 1175 3 view .LVU502
 1619              	.LVL179:
 1620              		.loc 1 1175 3 view .LVU503
 1621              		.loc 1 1175 3 view .LVU504
 1622 0008 094B     		ldr	r3, .L94
 1623 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1624 000c 6BB1     		cbz	r3, .L93
ARM GAS  /tmp/ccfEWiwI.s 			page 54


 1625              	.LVL180:
 1626              	.L91:
 1627              		.loc 1 1175 3 discriminator 3 view .LVU505
 1628              	.LBE8:
 1629              		.loc 1 1175 9 discriminator 3 view .LVU506
 1630              	.LBB9:
1176:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1631              		.loc 1 1176 3 discriminator 3 view .LVU507
 1632              		.loc 1 1176 3 discriminator 3 view .LVU508
 1633              		.syntax unified
 1634              	@ 1176 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1635 000e EFF31187 		mrs   r7, basepri  
 1636 0012 4FF02001 		mov   r1, #32       
 1637 0016 81F31188 		msr   basepri, r1  
 1638              		
 1639              	@ 0 "" 2
 1640              	.LVL181:
 1641              		.loc 1 1176 20 discriminator 3 view .LVU509
1177:libraries/RTT/RTT/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteDownBufferNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locki
 1642              		.loc 1 1177 3 discriminator 3 view .LVU510
 1643              		.loc 1 1177 12 is_stmt 0 discriminator 3 view .LVU511
 1644              		.thumb
 1645              		.syntax unified
 1646 001a 3246     		mov	r2, r6
 1647 001c 2946     		mov	r1, r5
 1648 001e 2046     		mov	r0, r4
 1649 0020 FFF7FEFF 		bl	SEGGER_RTT_WriteDownBufferNoLock
 1650              	.LVL182:
1178:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1651              		.loc 1 1178 3 is_stmt 1 discriminator 3 view .LVU512
 1652              		.syntax unified
 1653              	@ 1178 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1654 0024 87F31188 		msr   basepri, r7  
 1655              		
 1656              	@ 0 "" 2
 1657              		.thumb
 1658              		.syntax unified
 1659              	.LBE9:
 1660              		.loc 1 1178 22 discriminator 3 view .LVU513
1179:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
 1661              		.loc 1 1179 3 discriminator 3 view .LVU514
1180:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1662              		.loc 1 1180 1 is_stmt 0 discriminator 3 view .LVU515
 1663 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1664              	.LVL183:
 1665              	.L93:
 1666              	.LBB10:
1175:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1667              		.loc 1 1175 3 is_stmt 1 discriminator 1 view .LVU516
 1668 002a FFF7FEFF 		bl	_DoInit
 1669              	.LVL184:
1175:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1670              		.loc 1 1175 3 is_stmt 0 discriminator 1 view .LVU517
 1671 002e EEE7     		b	.L91
 1672              	.L95:
 1673              		.align	2
 1674              	.L94:
ARM GAS  /tmp/ccfEWiwI.s 			page 55


 1675 0030 00000000 		.word	.LANCHOR0
 1676              	.LBE10:
 1677              		.cfi_endproc
 1678              	.LFE12:
 1680              		.section	.text.SEGGER_RTT_Write,"ax",%progbits
 1681              		.align	1
 1682              		.global	SEGGER_RTT_Write
 1683              		.syntax unified
 1684              		.thumb
 1685              		.thumb_func
 1686              		.fpu fpv4-sp-d16
 1688              	SEGGER_RTT_Write:
 1689              	.LVL185:
 1690              	.LFB13:
1181:libraries/RTT/RTT/SEGGER_RTT.c **** 
1182:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1183:libraries/RTT/RTT/SEGGER_RTT.c **** *
1184:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_Write
1185:libraries/RTT/RTT/SEGGER_RTT.c **** *
1186:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1187:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1188:libraries/RTT/RTT/SEGGER_RTT.c **** *    control block which is then read by the host.
1189:libraries/RTT/RTT/SEGGER_RTT.c **** *
1190:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1191:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1192:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1193:libraries/RTT/RTT/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1194:libraries/RTT/RTT/SEGGER_RTT.c **** *
1195:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1196:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1197:libraries/RTT/RTT/SEGGER_RTT.c **** *
1198:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1199:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1200:libraries/RTT/RTT/SEGGER_RTT.c **** */
1201:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1691              		.loc 1 1201 89 is_stmt 1 view -0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              		.loc 1 1201 89 is_stmt 0 view .LVU519
 1696 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1697              	.LCFI13:
 1698              		.cfi_def_cfa_offset 24
 1699              		.cfi_offset 3, -24
 1700              		.cfi_offset 4, -20
 1701              		.cfi_offset 5, -16
 1702              		.cfi_offset 6, -12
 1703              		.cfi_offset 7, -8
 1704              		.cfi_offset 14, -4
 1705 0002 0446     		mov	r4, r0
 1706 0004 0D46     		mov	r5, r1
 1707 0006 1646     		mov	r6, r2
1202:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned Status;
 1708              		.loc 1 1202 3 is_stmt 1 view .LVU520
 1709              	.LBB11:
1203:libraries/RTT/RTT/SEGGER_RTT.c **** 
1204:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
ARM GAS  /tmp/ccfEWiwI.s 			page 56


 1710              		.loc 1 1204 3 view .LVU521
 1711              		.loc 1 1204 3 view .LVU522
 1712              	.LVL186:
 1713              		.loc 1 1204 3 view .LVU523
 1714              		.loc 1 1204 3 view .LVU524
 1715 0008 094B     		ldr	r3, .L100
 1716 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1717 000c 6BB1     		cbz	r3, .L99
 1718              	.LVL187:
 1719              	.L97:
 1720              		.loc 1 1204 3 discriminator 3 view .LVU525
 1721              	.LBE11:
 1722              		.loc 1 1204 9 discriminator 3 view .LVU526
 1723              	.LBB12:
1205:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1724              		.loc 1 1205 3 discriminator 3 view .LVU527
 1725              		.loc 1 1205 3 discriminator 3 view .LVU528
 1726              		.syntax unified
 1727              	@ 1205 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1728 000e EFF31187 		mrs   r7, basepri  
 1729 0012 4FF02001 		mov   r1, #32       
 1730 0016 81F31188 		msr   basepri, r1  
 1731              		
 1732              	@ 0 "" 2
 1733              	.LVL188:
 1734              		.loc 1 1205 20 discriminator 3 view .LVU529
1206:libraries/RTT/RTT/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 1735              		.loc 1 1206 3 discriminator 3 view .LVU530
 1736              		.loc 1 1206 12 is_stmt 0 discriminator 3 view .LVU531
 1737              		.thumb
 1738              		.syntax unified
 1739 001a 3246     		mov	r2, r6
 1740 001c 2946     		mov	r1, r5
 1741 001e 2046     		mov	r0, r4
 1742 0020 FFF7FEFF 		bl	SEGGER_RTT_WriteNoLock
 1743              	.LVL189:
1207:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1744              		.loc 1 1207 3 is_stmt 1 discriminator 3 view .LVU532
 1745              		.syntax unified
 1746              	@ 1207 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1747 0024 87F31188 		msr   basepri, r7  
 1748              		
 1749              	@ 0 "" 2
 1750              		.thumb
 1751              		.syntax unified
 1752              	.LBE12:
 1753              		.loc 1 1207 22 discriminator 3 view .LVU533
1208:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
 1754              		.loc 1 1208 3 discriminator 3 view .LVU534
1209:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1755              		.loc 1 1209 1 is_stmt 0 discriminator 3 view .LVU535
 1756 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1757              	.LVL190:
 1758              	.L99:
 1759              	.LBB13:
1204:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1760              		.loc 1 1204 3 is_stmt 1 discriminator 1 view .LVU536
ARM GAS  /tmp/ccfEWiwI.s 			page 57


 1761 002a FFF7FEFF 		bl	_DoInit
 1762              	.LVL191:
1204:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1763              		.loc 1 1204 3 is_stmt 0 discriminator 1 view .LVU537
 1764 002e EEE7     		b	.L97
 1765              	.L101:
 1766              		.align	2
 1767              	.L100:
 1768 0030 00000000 		.word	.LANCHOR0
 1769              	.LBE13:
 1770              		.cfi_endproc
 1771              	.LFE13:
 1773              		.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
 1774              		.align	1
 1775              		.global	SEGGER_RTT_WriteString
 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1779              		.fpu fpv4-sp-d16
 1781              	SEGGER_RTT_WriteString:
 1782              	.LVL192:
 1783              	.LFB14:
1210:libraries/RTT/RTT/SEGGER_RTT.c **** 
1211:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1212:libraries/RTT/RTT/SEGGER_RTT.c **** *
1213:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
1214:libraries/RTT/RTT/SEGGER_RTT.c **** *
1215:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1216:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
1217:libraries/RTT/RTT/SEGGER_RTT.c **** *    This data is read by the host.
1218:libraries/RTT/RTT/SEGGER_RTT.c **** *
1219:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1220:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1221:libraries/RTT/RTT/SEGGER_RTT.c **** *    s            Pointer to string.
1222:libraries/RTT/RTT/SEGGER_RTT.c **** *
1223:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1224:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1225:libraries/RTT/RTT/SEGGER_RTT.c **** *
1226:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1227:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1228:libraries/RTT/RTT/SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
1229:libraries/RTT/RTT/SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
1230:libraries/RTT/RTT/SEGGER_RTT.c **** */
1231:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 1784              		.loc 1 1231 70 is_stmt 1 view -0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 0
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788              		.loc 1 1231 70 is_stmt 0 view .LVU539
 1789 0000 38B5     		push	{r3, r4, r5, lr}
 1790              	.LCFI14:
 1791              		.cfi_def_cfa_offset 16
 1792              		.cfi_offset 3, -16
 1793              		.cfi_offset 4, -12
 1794              		.cfi_offset 5, -8
 1795              		.cfi_offset 14, -4
 1796 0002 0546     		mov	r5, r0
ARM GAS  /tmp/ccfEWiwI.s 			page 58


 1797 0004 0C46     		mov	r4, r1
1232:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned Len;
 1798              		.loc 1 1232 3 is_stmt 1 view .LVU540
1233:libraries/RTT/RTT/SEGGER_RTT.c **** 
1234:libraries/RTT/RTT/SEGGER_RTT.c ****   Len = STRLEN(s);
 1799              		.loc 1 1234 3 view .LVU541
 1800              		.loc 1 1234 9 is_stmt 0 view .LVU542
 1801 0006 0846     		mov	r0, r1
 1802              	.LVL193:
 1803              		.loc 1 1234 9 view .LVU543
 1804 0008 FFF7FEFF 		bl	strlen
 1805              	.LVL194:
 1806              		.loc 1 1234 9 view .LVU544
 1807 000c 0246     		mov	r2, r0
 1808              	.LVL195:
1235:libraries/RTT/RTT/SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 1809              		.loc 1 1235 3 is_stmt 1 view .LVU545
 1810              		.loc 1 1235 10 is_stmt 0 view .LVU546
 1811 000e 2146     		mov	r1, r4
 1812 0010 2846     		mov	r0, r5
 1813              	.LVL196:
 1814              		.loc 1 1235 10 view .LVU547
 1815 0012 FFF7FEFF 		bl	SEGGER_RTT_Write
 1816              	.LVL197:
1236:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1817              		.loc 1 1236 1 view .LVU548
 1818 0016 38BD     		pop	{r3, r4, r5, pc}
 1819              		.loc 1 1236 1 view .LVU549
 1820              		.cfi_endproc
 1821              	.LFE14:
 1823              		.section	.text.SEGGER_RTT_PutCharSkipNoLock,"ax",%progbits
 1824              		.align	1
 1825              		.global	SEGGER_RTT_PutCharSkipNoLock
 1826              		.syntax unified
 1827              		.thumb
 1828              		.thumb_func
 1829              		.fpu fpv4-sp-d16
 1831              	SEGGER_RTT_PutCharSkipNoLock:
 1832              	.LVL198:
 1833              	.LFB15:
1237:libraries/RTT/RTT/SEGGER_RTT.c **** 
1238:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1239:libraries/RTT/RTT/SEGGER_RTT.c **** *
1240:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkipNoLock
1241:libraries/RTT/RTT/SEGGER_RTT.c **** *
1242:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1243:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1244:libraries/RTT/RTT/SEGGER_RTT.c **** *    SEGGER_RTT_PutCharSkipNoLock does not lock the application and
1245:libraries/RTT/RTT/SEGGER_RTT.c **** *    skips the byte, if it does not fit into the buffer.
1246:libraries/RTT/RTT/SEGGER_RTT.c **** *
1247:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1248:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1249:libraries/RTT/RTT/SEGGER_RTT.c **** *    c            Byte to be stored.
1250:libraries/RTT/RTT/SEGGER_RTT.c **** *
1251:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1252:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1253:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 59


1254:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1255:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1256:libraries/RTT/RTT/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1257:libraries/RTT/RTT/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1258:libraries/RTT/RTT/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1259:libraries/RTT/RTT/SEGGER_RTT.c **** */
1260:libraries/RTT/RTT/SEGGER_RTT.c **** 
1261:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkipNoLock(unsigned BufferIndex, char c) {
 1834              		.loc 1 1261 69 is_stmt 1 view -0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 1838              		@ link register save eliminated.
 1839              		.loc 1 1261 69 is_stmt 0 view .LVU551
 1840 0000 30B4     		push	{r4, r5}
 1841              	.LCFI15:
 1842              		.cfi_def_cfa_offset 8
 1843              		.cfi_offset 4, -8
 1844              		.cfi_offset 5, -4
1262:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1845              		.loc 1 1262 3 is_stmt 1 view .LVU552
1263:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              WrOff;
 1846              		.loc 1 1263 3 view .LVU553
1264:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Status;
 1847              		.loc 1 1264 3 view .LVU554
1265:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char*        pDst;
 1848              		.loc 1 1265 3 view .LVU555
1266:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1267:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1268:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1269:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1849              		.loc 1 1269 3 view .LVU556
 1850              	.LVL199:
1270:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1271:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1272:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1273:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1851              		.loc 1 1273 3 view .LVU557
 1852              		.loc 1 1273 16 is_stmt 0 view .LVU558
 1853 0002 00EB4002 		add	r2, r0, r0, lsl #1
 1854 0006 124B     		ldr	r3, .L111
 1855 0008 03EBC203 		add	r3, r3, r2, lsl #3
 1856 000c 5D6A     		ldr	r5, [r3, #36]
 1857              		.loc 1 1273 9 view .LVU559
 1858 000e 6A1C     		adds	r2, r5, #1
 1859              	.LVL200:
1274:libraries/RTT/RTT/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 1860              		.loc 1 1274 3 is_stmt 1 view .LVU560
 1861              		.loc 1 1274 21 is_stmt 0 view .LVU561
 1862 0010 1B6A     		ldr	r3, [r3, #32]
 1863              		.loc 1 1274 6 view .LVU562
 1864 0012 9342     		cmp	r3, r2
 1865 0014 18D0     		beq	.L110
 1866              	.LVL201:
 1867              	.L105:
1275:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff = 0;
1276:libraries/RTT/RTT/SEGGER_RTT.c ****   }
ARM GAS  /tmp/ccfEWiwI.s 			page 60


1277:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1278:libraries/RTT/RTT/SEGGER_RTT.c ****   // Output byte if free space is available
1279:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1280:libraries/RTT/RTT/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 1868              		.loc 1 1280 3 is_stmt 1 view .LVU563
 1869              		.loc 1 1280 21 is_stmt 0 view .LVU564
 1870 0016 00EB4003 		add	r3, r0, r0, lsl #1
 1871 001a 0D4C     		ldr	r4, .L111
 1872 001c 04EBC303 		add	r3, r4, r3, lsl #3
 1873 0020 9B6A     		ldr	r3, [r3, #40]
 1874              		.loc 1 1280 6 view .LVU565
 1875 0022 9342     		cmp	r3, r2
 1876 0024 12D0     		beq	.L108
1281:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 1877              		.loc 1 1281 5 is_stmt 1 view .LVU566
 1878              		.loc 1 1281 18 is_stmt 0 view .LVU567
 1879 0026 431C     		adds	r3, r0, #1
 1880 0028 03EB4303 		add	r3, r3, r3, lsl #1
 1881 002c 04EBC303 		add	r3, r4, r3, lsl #3
 1882 0030 5B68     		ldr	r3, [r3, #4]
 1883              	.LVL202:
1282:libraries/RTT/RTT/SEGGER_RTT.c ****     *pDst = c;
 1884              		.loc 1 1282 5 is_stmt 1 view .LVU568
 1885              		.loc 1 1282 11 is_stmt 0 view .LVU569
 1886 0032 5955     		strb	r1, [r3, r5]
1283:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 1887              		.loc 1 1283 5 is_stmt 1 view .LVU570
 1888              		.syntax unified
 1889              	@ 1283 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1890 0034 BFF35F8F 		dmb
 1891              	
 1892              	@ 0 "" 2
 1893              		.loc 1 1283 15 view .LVU571
1284:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 1894              		.loc 1 1284 5 view .LVU572
 1895              		.loc 1 1284 18 is_stmt 0 view .LVU573
 1896              		.thumb
 1897              		.syntax unified
 1898 0038 00EB4000 		add	r0, r0, r0, lsl #1
 1899              	.LVL203:
 1900              		.loc 1 1284 18 view .LVU574
 1901 003c 04EBC000 		add	r0, r4, r0, lsl #3
 1902 0040 4262     		str	r2, [r0, #36]
1285:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 1;
 1903              		.loc 1 1285 5 is_stmt 1 view .LVU575
 1904              	.LVL204:
 1905              		.loc 1 1285 12 is_stmt 0 view .LVU576
 1906 0042 0120     		movs	r0, #1
 1907              	.LVL205:
 1908              	.L104:
1286:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1287:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 0;
1288:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1289:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1290:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
1291:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1909              		.loc 1 1291 1 view .LVU577
ARM GAS  /tmp/ccfEWiwI.s 			page 61


 1910 0044 30BC     		pop	{r4, r5}
 1911              	.LCFI16:
 1912              		.cfi_remember_state
 1913              		.cfi_restore 5
 1914              		.cfi_restore 4
 1915              		.cfi_def_cfa_offset 0
 1916 0046 7047     		bx	lr
 1917              	.LVL206:
 1918              	.L110:
 1919              	.LCFI17:
 1920              		.cfi_restore_state
1275:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1921              		.loc 1 1275 11 view .LVU578
 1922 0048 0022     		movs	r2, #0
 1923              	.LVL207:
1275:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1924              		.loc 1 1275 11 view .LVU579
 1925 004a E4E7     		b	.L105
 1926              	.LVL208:
 1927              	.L108:
1287:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 1928              		.loc 1 1287 12 view .LVU580
 1929 004c 0020     		movs	r0, #0
 1930              	.LVL209:
1290:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1931              		.loc 1 1290 3 is_stmt 1 view .LVU581
1290:libraries/RTT/RTT/SEGGER_RTT.c **** }
 1932              		.loc 1 1290 10 is_stmt 0 view .LVU582
 1933 004e F9E7     		b	.L104
 1934              	.L112:
 1935              		.align	2
 1936              	.L111:
 1937 0050 00000000 		.word	.LANCHOR0
 1938              		.cfi_endproc
 1939              	.LFE15:
 1941              		.section	.text.SEGGER_RTT_PutCharSkip,"ax",%progbits
 1942              		.align	1
 1943              		.global	SEGGER_RTT_PutCharSkip
 1944              		.syntax unified
 1945              		.thumb
 1946              		.thumb_func
 1947              		.fpu fpv4-sp-d16
 1949              	SEGGER_RTT_PutCharSkip:
 1950              	.LVL210:
 1951              	.LFB16:
1292:libraries/RTT/RTT/SEGGER_RTT.c **** 
1293:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1294:libraries/RTT/RTT/SEGGER_RTT.c **** *
1295:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkip
1296:libraries/RTT/RTT/SEGGER_RTT.c **** *
1297:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1298:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1299:libraries/RTT/RTT/SEGGER_RTT.c **** *
1300:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1301:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1302:libraries/RTT/RTT/SEGGER_RTT.c **** *    c            Byte to be stored.
1303:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 62


1304:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1305:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1306:libraries/RTT/RTT/SEGGER_RTT.c **** *
1307:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1308:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1309:libraries/RTT/RTT/SEGGER_RTT.c **** */
1310:libraries/RTT/RTT/SEGGER_RTT.c **** 
1311:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkip(unsigned BufferIndex, char c) {
 1952              		.loc 1 1311 63 is_stmt 1 view -0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 0
 1955              		@ frame_needed = 0, uses_anonymous_args = 0
 1956              		.loc 1 1311 63 is_stmt 0 view .LVU584
 1957 0000 38B5     		push	{r3, r4, r5, lr}
 1958              	.LCFI18:
 1959              		.cfi_def_cfa_offset 16
 1960              		.cfi_offset 3, -16
 1961              		.cfi_offset 4, -12
 1962              		.cfi_offset 5, -8
 1963              		.cfi_offset 14, -4
 1964 0002 0446     		mov	r4, r0
 1965 0004 0D46     		mov	r5, r1
1312:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1966              		.loc 1 1312 3 is_stmt 1 view .LVU585
1313:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              WrOff;
 1967              		.loc 1 1313 3 view .LVU586
1314:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Status;
 1968              		.loc 1 1314 3 view .LVU587
1315:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char*        pDst;
 1969              		.loc 1 1315 3 view .LVU588
 1970              	.LBB14:
1316:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1317:libraries/RTT/RTT/SEGGER_RTT.c ****   // Prepare
1318:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1319:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 1971              		.loc 1 1319 3 view .LVU589
 1972              		.loc 1 1319 3 view .LVU590
 1973              	.LVL211:
 1974              		.loc 1 1319 3 view .LVU591
 1975              		.loc 1 1319 3 view .LVU592
 1976 0006 1A4B     		ldr	r3, .L122
 1977 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 000a 4BB3     		cbz	r3, .L120
 1979              	.LVL212:
 1980              	.L114:
 1981              		.loc 1 1319 3 discriminator 3 view .LVU593
 1982              	.LBE14:
 1983              		.loc 1 1319 9 discriminator 3 view .LVU594
 1984              	.LBB15:
1320:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1985              		.loc 1 1320 3 discriminator 3 view .LVU595
 1986              		.loc 1 1320 3 discriminator 3 view .LVU596
 1987              		.syntax unified
 1988              	@ 1320 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 1989 000c EFF3118C 		mrs   ip, basepri  
 1990 0010 4FF02001 		mov   r1, #32       
 1991 0014 81F31188 		msr   basepri, r1  
ARM GAS  /tmp/ccfEWiwI.s 			page 63


 1992              		
 1993              	@ 0 "" 2
 1994              	.LVL213:
 1995              		.loc 1 1320 20 discriminator 3 view .LVU597
1321:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1322:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1323:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1324:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1996              		.loc 1 1324 3 discriminator 3 view .LVU598
1325:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1326:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1327:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1328:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1997              		.loc 1 1328 3 discriminator 3 view .LVU599
 1998              		.loc 1 1328 16 is_stmt 0 discriminator 3 view .LVU600
 1999              		.thumb
 2000              		.syntax unified
 2001 0018 04EB4403 		add	r3, r4, r4, lsl #1
 2002 001c 144A     		ldr	r2, .L122
 2003 001e 02EBC303 		add	r3, r2, r3, lsl #3
 2004 0022 586A     		ldr	r0, [r3, #36]
 2005              		.loc 1 1328 9 discriminator 3 view .LVU601
 2006 0024 421C     		adds	r2, r0, #1
 2007              	.LVL214:
1329:libraries/RTT/RTT/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 2008              		.loc 1 1329 3 is_stmt 1 discriminator 3 view .LVU602
 2009              		.loc 1 1329 21 is_stmt 0 discriminator 3 view .LVU603
 2010 0026 1B6A     		ldr	r3, [r3, #32]
 2011              		.loc 1 1329 6 discriminator 3 view .LVU604
 2012 0028 9342     		cmp	r3, r2
 2013 002a 1CD0     		beq	.L121
 2014              	.LVL215:
 2015              	.L115:
1330:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff = 0;
1331:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1332:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1333:libraries/RTT/RTT/SEGGER_RTT.c ****   // Output byte if free space is available
1334:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1335:libraries/RTT/RTT/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 2016              		.loc 1 1335 3 is_stmt 1 view .LVU605
 2017              		.loc 1 1335 21 is_stmt 0 view .LVU606
 2018 002c 04EB4403 		add	r3, r4, r4, lsl #1
 2019 0030 0F49     		ldr	r1, .L122
 2020 0032 01EBC303 		add	r3, r1, r3, lsl #3
 2021 0036 9B6A     		ldr	r3, [r3, #40]
 2022              		.loc 1 1335 6 view .LVU607
 2023 0038 9342     		cmp	r3, r2
 2024 003a 16D0     		beq	.L118
1336:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2025              		.loc 1 1336 5 is_stmt 1 view .LVU608
 2026              		.loc 1 1336 19 is_stmt 0 view .LVU609
 2027 003c 631C     		adds	r3, r4, #1
 2028 003e 03EB4303 		add	r3, r3, r3, lsl #1
 2029 0042 01EBC303 		add	r3, r1, r3, lsl #3
 2030 0046 5B68     		ldr	r3, [r3, #4]
 2031              	.LVL216:
1337:libraries/RTT/RTT/SEGGER_RTT.c ****     *pDst = c;
ARM GAS  /tmp/ccfEWiwI.s 			page 64


 2032              		.loc 1 1337 5 is_stmt 1 view .LVU610
 2033              		.loc 1 1337 11 is_stmt 0 view .LVU611
 2034 0048 1D54     		strb	r5, [r3, r0]
1338:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2035              		.loc 1 1338 5 is_stmt 1 view .LVU612
 2036              		.syntax unified
 2037              	@ 1338 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2038 004a BFF35F8F 		dmb
 2039              	
 2040              	@ 0 "" 2
 2041              		.loc 1 1338 15 view .LVU613
1339:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2042              		.loc 1 1339 5 view .LVU614
 2043              		.loc 1 1339 18 is_stmt 0 view .LVU615
 2044              		.thumb
 2045              		.syntax unified
 2046 004e 04EB4404 		add	r4, r4, r4, lsl #1
 2047              	.LVL217:
 2048              		.loc 1 1339 18 view .LVU616
 2049 0052 01EBC404 		add	r4, r1, r4, lsl #3
 2050 0056 6262     		str	r2, [r4, #36]
1340:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 1;
 2051              		.loc 1 1340 5 is_stmt 1 view .LVU617
 2052              	.LVL218:
 2053              		.loc 1 1340 12 is_stmt 0 view .LVU618
 2054 0058 0120     		movs	r0, #1
 2055              	.LVL219:
 2056              	.L116:
1341:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1342:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 0;
1343:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1344:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1345:libraries/RTT/RTT/SEGGER_RTT.c ****   // Finish up.
1346:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1347:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2057              		.loc 1 1347 3 is_stmt 1 view .LVU619
 2058              		.syntax unified
 2059              	@ 1347 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2060 005a 8CF31188 		msr   basepri, ip  
 2061              		
 2062              	@ 0 "" 2
 2063              		.thumb
 2064              		.syntax unified
 2065              	.LBE15:
 2066              		.loc 1 1347 22 view .LVU620
1348:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1349:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
 2067              		.loc 1 1349 3 view .LVU621
1350:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2068              		.loc 1 1350 1 is_stmt 0 view .LVU622
 2069 005e 38BD     		pop	{r3, r4, r5, pc}
 2070              	.LVL220:
 2071              	.L120:
 2072              	.LBB16:
1319:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2073              		.loc 1 1319 3 is_stmt 1 discriminator 1 view .LVU623
 2074 0060 FFF7FEFF 		bl	_DoInit
ARM GAS  /tmp/ccfEWiwI.s 			page 65


 2075              	.LVL221:
1319:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2076              		.loc 1 1319 3 is_stmt 0 discriminator 1 view .LVU624
 2077 0064 D2E7     		b	.L114
 2078              	.LVL222:
 2079              	.L121:
1319:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2080              		.loc 1 1319 3 discriminator 1 view .LVU625
 2081              	.LBE16:
 2082              	.LBB17:
1330:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2083              		.loc 1 1330 11 view .LVU626
 2084 0066 0022     		movs	r2, #0
 2085              	.LVL223:
1330:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2086              		.loc 1 1330 11 view .LVU627
 2087 0068 E0E7     		b	.L115
 2088              	.LVL224:
 2089              	.L118:
1342:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2090              		.loc 1 1342 12 view .LVU628
 2091 006a 0020     		movs	r0, #0
 2092 006c F5E7     		b	.L116
 2093              	.L123:
 2094 006e 00BF     		.align	2
 2095              	.L122:
 2096 0070 00000000 		.word	.LANCHOR0
 2097              	.LBE17:
 2098              		.cfi_endproc
 2099              	.LFE16:
 2101              		.section	.text.SEGGER_RTT_PutChar,"ax",%progbits
 2102              		.align	1
 2103              		.global	SEGGER_RTT_PutChar
 2104              		.syntax unified
 2105              		.thumb
 2106              		.thumb_func
 2107              		.fpu fpv4-sp-d16
 2109              	SEGGER_RTT_PutChar:
 2110              	.LVL225:
 2111              	.LFB17:
1351:libraries/RTT/RTT/SEGGER_RTT.c **** 
1352:libraries/RTT/RTT/SEGGER_RTT.c ****  /*********************************************************************
1353:libraries/RTT/RTT/SEGGER_RTT.c **** *
1354:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_PutChar
1355:libraries/RTT/RTT/SEGGER_RTT.c **** *
1356:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1357:libraries/RTT/RTT/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1358:libraries/RTT/RTT/SEGGER_RTT.c **** *
1359:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1360:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1361:libraries/RTT/RTT/SEGGER_RTT.c **** *    c            Byte to be stored.
1362:libraries/RTT/RTT/SEGGER_RTT.c **** *
1363:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1364:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1365:libraries/RTT/RTT/SEGGER_RTT.c **** *
1366:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1367:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
ARM GAS  /tmp/ccfEWiwI.s 			page 66


1368:libraries/RTT/RTT/SEGGER_RTT.c **** */
1369:libraries/RTT/RTT/SEGGER_RTT.c **** 
1370:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutChar(unsigned BufferIndex, char c) {
 2112              		.loc 1 1370 59 is_stmt 1 view -0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
 2116              		.loc 1 1370 59 is_stmt 0 view .LVU630
 2117 0000 38B5     		push	{r3, r4, r5, lr}
 2118              	.LCFI19:
 2119              		.cfi_def_cfa_offset 16
 2120              		.cfi_offset 3, -16
 2121              		.cfi_offset 4, -12
 2122              		.cfi_offset 5, -8
 2123              		.cfi_offset 14, -4
 2124 0002 0446     		mov	r4, r0
 2125 0004 0D46     		mov	r5, r1
1371:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 2126              		.loc 1 1371 3 is_stmt 1 view .LVU631
1372:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              WrOff;
 2127              		.loc 1 1372 3 view .LVU632
1373:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Status;
 2128              		.loc 1 1373 3 view .LVU633
1374:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile char*        pDst;
 2129              		.loc 1 1374 3 view .LVU634
 2130              	.LBB18:
1375:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1376:libraries/RTT/RTT/SEGGER_RTT.c ****   // Prepare
1377:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1378:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 2131              		.loc 1 1378 3 view .LVU635
 2132              		.loc 1 1378 3 view .LVU636
 2133              	.LVL226:
 2134              		.loc 1 1378 3 view .LVU637
 2135              		.loc 1 1378 3 view .LVU638
 2136 0006 234B     		ldr	r3, .L135
 2137 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2138 000a 002B     		cmp	r3, #0
 2139 000c 31D0     		beq	.L133
 2140              	.LVL227:
 2141              	.L125:
 2142              		.loc 1 1378 3 discriminator 3 view .LVU639
 2143              	.LBE18:
 2144              		.loc 1 1378 9 discriminator 3 view .LVU640
 2145              	.LBB19:
1379:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2146              		.loc 1 1379 3 discriminator 3 view .LVU641
 2147              		.loc 1 1379 3 discriminator 3 view .LVU642
 2148              		.syntax unified
 2149              	@ 1379 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2150 000e EFF3118C 		mrs   ip, basepri  
 2151 0012 4FF02001 		mov   r1, #32       
 2152 0016 81F31188 		msr   basepri, r1  
 2153              		
 2154              	@ 0 "" 2
 2155              	.LVL228:
 2156              		.loc 1 1379 20 discriminator 3 view .LVU643
ARM GAS  /tmp/ccfEWiwI.s 			page 67


1380:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1381:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1382:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1383:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 2157              		.loc 1 1383 3 discriminator 3 view .LVU644
1384:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1385:libraries/RTT/RTT/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1386:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1387:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 2158              		.loc 1 1387 3 discriminator 3 view .LVU645
 2159              		.loc 1 1387 16 is_stmt 0 discriminator 3 view .LVU646
 2160              		.thumb
 2161              		.syntax unified
 2162 001a 04EB4403 		add	r3, r4, r4, lsl #1
 2163 001e 1D4A     		ldr	r2, .L135
 2164 0020 02EBC303 		add	r3, r2, r3, lsl #3
 2165 0024 596A     		ldr	r1, [r3, #36]
 2166              		.loc 1 1387 9 discriminator 3 view .LVU647
 2167 0026 481C     		adds	r0, r1, #1
 2168              	.LVL229:
1388:libraries/RTT/RTT/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 2169              		.loc 1 1388 3 is_stmt 1 discriminator 3 view .LVU648
 2170              		.loc 1 1388 21 is_stmt 0 discriminator 3 view .LVU649
 2171 0028 1B6A     		ldr	r3, [r3, #32]
 2172              		.loc 1 1388 6 discriminator 3 view .LVU650
 2173 002a 8342     		cmp	r3, r0
 2174 002c 24D0     		beq	.L134
 2175              	.LVL230:
 2176              	.L126:
1389:libraries/RTT/RTT/SEGGER_RTT.c ****     WrOff = 0;
1390:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1391:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1392:libraries/RTT/RTT/SEGGER_RTT.c ****   // Wait for free space if mode is set to blocking
1393:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1394:libraries/RTT/RTT/SEGGER_RTT.c ****   if (pRing->Flags == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 2177              		.loc 1 1394 3 is_stmt 1 view .LVU651
 2178              		.loc 1 1394 12 is_stmt 0 view .LVU652
 2179 002e 04EB4403 		add	r3, r4, r4, lsl #1
 2180 0032 184A     		ldr	r2, .L135
 2181 0034 02EBC303 		add	r3, r2, r3, lsl #3
 2182 0038 DB6A     		ldr	r3, [r3, #44]
 2183              		.loc 1 1394 6 view .LVU653
 2184 003a 022B     		cmp	r3, #2
 2185 003c 1ED0     		beq	.L128
 2186              	.L127:
1395:libraries/RTT/RTT/SEGGER_RTT.c ****     while (WrOff == pRing->RdOff) {
1396:libraries/RTT/RTT/SEGGER_RTT.c ****       ;
1397:libraries/RTT/RTT/SEGGER_RTT.c ****     }
1398:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1399:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1400:libraries/RTT/RTT/SEGGER_RTT.c ****   // Output byte if free space is available
1401:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1402:libraries/RTT/RTT/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 2187              		.loc 1 1402 3 is_stmt 1 view .LVU654
 2188              		.loc 1 1402 21 is_stmt 0 view .LVU655
 2189 003e 04EB4403 		add	r3, r4, r4, lsl #1
 2190 0042 144A     		ldr	r2, .L135
ARM GAS  /tmp/ccfEWiwI.s 			page 68


 2191 0044 02EBC303 		add	r3, r2, r3, lsl #3
 2192 0048 9B6A     		ldr	r3, [r3, #40]
 2193              		.loc 1 1402 6 view .LVU656
 2194 004a 8342     		cmp	r3, r0
 2195 004c 1FD0     		beq	.L131
1403:libraries/RTT/RTT/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2196              		.loc 1 1403 5 is_stmt 1 view .LVU657
 2197              		.loc 1 1403 19 is_stmt 0 view .LVU658
 2198 004e 631C     		adds	r3, r4, #1
 2199 0050 03EB4303 		add	r3, r3, r3, lsl #1
 2200 0054 02EBC303 		add	r3, r2, r3, lsl #3
 2201 0058 5B68     		ldr	r3, [r3, #4]
 2202              	.LVL231:
1404:libraries/RTT/RTT/SEGGER_RTT.c ****     *pDst = c;
 2203              		.loc 1 1404 5 is_stmt 1 view .LVU659
 2204              		.loc 1 1404 11 is_stmt 0 view .LVU660
 2205 005a 5D54     		strb	r5, [r3, r1]
1405:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2206              		.loc 1 1405 5 is_stmt 1 view .LVU661
 2207              		.syntax unified
 2208              	@ 1405 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2209 005c BFF35F8F 		dmb
 2210              	
 2211              	@ 0 "" 2
 2212              		.loc 1 1405 15 view .LVU662
1406:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2213              		.loc 1 1406 5 view .LVU663
 2214              		.loc 1 1406 18 is_stmt 0 view .LVU664
 2215              		.thumb
 2216              		.syntax unified
 2217 0060 04EB4404 		add	r4, r4, r4, lsl #1
 2218              	.LVL232:
 2219              		.loc 1 1406 18 view .LVU665
 2220 0064 02EBC404 		add	r4, r2, r4, lsl #3
 2221 0068 6062     		str	r0, [r4, #36]
1407:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 1;
 2222              		.loc 1 1407 5 is_stmt 1 view .LVU666
 2223              	.LVL233:
 2224              		.loc 1 1407 12 is_stmt 0 view .LVU667
 2225 006a 0120     		movs	r0, #1
 2226              	.LVL234:
 2227              	.L129:
1408:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1409:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = 0;
1410:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1411:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1412:libraries/RTT/RTT/SEGGER_RTT.c ****   // Finish up.
1413:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1414:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2228              		.loc 1 1414 3 is_stmt 1 view .LVU668
 2229              		.syntax unified
 2230              	@ 1414 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2231 006c 8CF31188 		msr   basepri, ip  
 2232              		
 2233              	@ 0 "" 2
 2234              		.thumb
 2235              		.syntax unified
ARM GAS  /tmp/ccfEWiwI.s 			page 69


 2236              	.LBE19:
 2237              		.loc 1 1414 22 view .LVU669
1415:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
 2238              		.loc 1 1415 3 view .LVU670
1416:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2239              		.loc 1 1416 1 is_stmt 0 view .LVU671
 2240 0070 38BD     		pop	{r3, r4, r5, pc}
 2241              	.LVL235:
 2242              	.L133:
 2243              	.LBB20:
1378:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2244              		.loc 1 1378 3 is_stmt 1 discriminator 1 view .LVU672
 2245 0072 FFF7FEFF 		bl	_DoInit
 2246              	.LVL236:
1378:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2247              		.loc 1 1378 3 is_stmt 0 discriminator 1 view .LVU673
 2248 0076 CAE7     		b	.L125
 2249              	.LVL237:
 2250              	.L134:
1378:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2251              		.loc 1 1378 3 discriminator 1 view .LVU674
 2252              	.LBE20:
 2253              	.LBB21:
1389:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2254              		.loc 1 1389 11 view .LVU675
 2255 0078 0020     		movs	r0, #0
 2256              	.LVL238:
1389:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2257              		.loc 1 1389 11 view .LVU676
 2258 007a D8E7     		b	.L126
 2259              	.LVL239:
 2260              	.L128:
1396:libraries/RTT/RTT/SEGGER_RTT.c ****     }
 2261              		.loc 1 1396 7 is_stmt 1 discriminator 1 view .LVU677
1395:libraries/RTT/RTT/SEGGER_RTT.c ****       ;
 2262              		.loc 1 1395 11 discriminator 1 view .LVU678
1395:libraries/RTT/RTT/SEGGER_RTT.c ****       ;
 2263              		.loc 1 1395 26 is_stmt 0 discriminator 1 view .LVU679
 2264 007c 04EB4403 		add	r3, r4, r4, lsl #1
 2265 0080 044A     		ldr	r2, .L135
 2266 0082 02EBC303 		add	r3, r2, r3, lsl #3
 2267 0086 9B6A     		ldr	r3, [r3, #40]
1395:libraries/RTT/RTT/SEGGER_RTT.c ****       ;
 2268              		.loc 1 1395 11 discriminator 1 view .LVU680
 2269 0088 8342     		cmp	r3, r0
 2270 008a F7D0     		beq	.L128
 2271 008c D7E7     		b	.L127
 2272              	.L131:
1409:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2273              		.loc 1 1409 12 view .LVU681
 2274 008e 0020     		movs	r0, #0
 2275              	.LVL240:
1409:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2276              		.loc 1 1409 12 view .LVU682
 2277 0090 ECE7     		b	.L129
 2278              	.L136:
 2279 0092 00BF     		.align	2
ARM GAS  /tmp/ccfEWiwI.s 			page 70


 2280              	.L135:
 2281 0094 00000000 		.word	.LANCHOR0
 2282              	.LBE21:
 2283              		.cfi_endproc
 2284              	.LFE17:
 2286              		.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
 2287              		.align	1
 2288              		.global	SEGGER_RTT_GetKey
 2289              		.syntax unified
 2290              		.thumb
 2291              		.thumb_func
 2292              		.fpu fpv4-sp-d16
 2294              	SEGGER_RTT_GetKey:
 2295              	.LFB18:
1417:libraries/RTT/RTT/SEGGER_RTT.c **** 
1418:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1419:libraries/RTT/RTT/SEGGER_RTT.c **** *
1420:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
1421:libraries/RTT/RTT/SEGGER_RTT.c **** *
1422:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1423:libraries/RTT/RTT/SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
1424:libraries/RTT/RTT/SEGGER_RTT.c **** *    Host has previously stored data there.
1425:libraries/RTT/RTT/SEGGER_RTT.c **** *
1426:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1427:libraries/RTT/RTT/SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
1428:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
1429:libraries/RTT/RTT/SEGGER_RTT.c **** *
1430:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1431:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
1432:libraries/RTT/RTT/SEGGER_RTT.c **** */
1433:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 2296              		.loc 1 1433 29 is_stmt 1 view -0
 2297              		.cfi_startproc
 2298              		@ args = 0, pretend = 0, frame = 8
 2299              		@ frame_needed = 0, uses_anonymous_args = 0
 2300 0000 00B5     		push	{lr}
 2301              	.LCFI20:
 2302              		.cfi_def_cfa_offset 4
 2303              		.cfi_offset 14, -4
 2304 0002 83B0     		sub	sp, sp, #12
 2305              	.LCFI21:
 2306              		.cfi_def_cfa_offset 16
1434:libraries/RTT/RTT/SEGGER_RTT.c ****   char c;
 2307              		.loc 1 1434 3 view .LVU684
1435:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 2308              		.loc 1 1435 3 view .LVU685
1436:libraries/RTT/RTT/SEGGER_RTT.c **** 
1437:libraries/RTT/RTT/SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 2309              		.loc 1 1437 3 view .LVU686
 2310              		.loc 1 1437 12 is_stmt 0 view .LVU687
 2311 0004 0122     		movs	r2, #1
 2312 0006 0DF10701 		add	r1, sp, #7
 2313 000a 0020     		movs	r0, #0
 2314 000c FFF7FEFF 		bl	SEGGER_RTT_Read
 2315              	.LVL241:
1438:libraries/RTT/RTT/SEGGER_RTT.c ****   if (r == 1) {
 2316              		.loc 1 1438 3 is_stmt 1 view .LVU688
ARM GAS  /tmp/ccfEWiwI.s 			page 71


 2317              		.loc 1 1438 6 is_stmt 0 view .LVU689
 2318 0010 0128     		cmp	r0, #1
 2319 0012 04D1     		bne	.L139
1439:libraries/RTT/RTT/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 2320              		.loc 1 1439 5 is_stmt 1 view .LVU690
 2321              		.loc 1 1439 9 is_stmt 0 view .LVU691
 2322 0014 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 2323              	.LVL242:
 2324              	.L137:
1440:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1441:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1442:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1443:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1444:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2325              		.loc 1 1444 1 view .LVU692
 2326 0018 03B0     		add	sp, sp, #12
 2327              	.LCFI22:
 2328              		.cfi_remember_state
 2329              		.cfi_def_cfa_offset 4
 2330              		@ sp needed
 2331 001a 5DF804FB 		ldr	pc, [sp], #4
 2332              	.LVL243:
 2333              	.L139:
 2334              	.LCFI23:
 2335              		.cfi_restore_state
1441:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2336              		.loc 1 1441 7 view .LVU693
 2337 001e 4FF0FF30 		mov	r0, #-1
 2338              	.LVL244:
1443:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2339              		.loc 1 1443 3 is_stmt 1 view .LVU694
1443:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2340              		.loc 1 1443 10 is_stmt 0 view .LVU695
 2341 0022 F9E7     		b	.L137
 2342              		.cfi_endproc
 2343              	.LFE18:
 2345              		.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
 2346              		.align	1
 2347              		.global	SEGGER_RTT_WaitKey
 2348              		.syntax unified
 2349              		.thumb
 2350              		.thumb_func
 2351              		.fpu fpv4-sp-d16
 2353              	SEGGER_RTT_WaitKey:
 2354              	.LFB19:
1445:libraries/RTT/RTT/SEGGER_RTT.c **** 
1446:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1447:libraries/RTT/RTT/SEGGER_RTT.c **** *
1448:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
1449:libraries/RTT/RTT/SEGGER_RTT.c **** *
1450:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1451:libraries/RTT/RTT/SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
1452:libraries/RTT/RTT/SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
1453:libraries/RTT/RTT/SEGGER_RTT.c **** *
1454:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1455:libraries/RTT/RTT/SEGGER_RTT.c **** *    >=0 -   Character which has been read.
1456:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 72


1457:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1458:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1459:libraries/RTT/RTT/SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
1460:libraries/RTT/RTT/SEGGER_RTT.c **** */
1461:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 2355              		.loc 1 1461 30 is_stmt 1 view -0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359 0000 08B5     		push	{r3, lr}
 2360              	.LCFI24:
 2361              		.cfi_def_cfa_offset 8
 2362              		.cfi_offset 3, -8
 2363              		.cfi_offset 14, -4
 2364              	.L142:
1462:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 2365              		.loc 1 1462 3 discriminator 1 view .LVU697
1463:libraries/RTT/RTT/SEGGER_RTT.c **** 
1464:libraries/RTT/RTT/SEGGER_RTT.c ****   do {
 2366              		.loc 1 1464 3 discriminator 1 view .LVU698
1465:libraries/RTT/RTT/SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 2367              		.loc 1 1465 5 discriminator 1 view .LVU699
 2368              		.loc 1 1465 9 is_stmt 0 discriminator 1 view .LVU700
 2369 0002 FFF7FEFF 		bl	SEGGER_RTT_GetKey
 2370              	.LVL245:
1466:libraries/RTT/RTT/SEGGER_RTT.c ****   } while (r < 0);
 2371              		.loc 1 1466 11 is_stmt 1 discriminator 1 view .LVU701
 2372              		.loc 1 1466 3 is_stmt 0 discriminator 1 view .LVU702
 2373 0006 0028     		cmp	r0, #0
 2374              		.loc 1 1466 3 discriminator 1 view .LVU703
 2375 0008 FBDB     		blt	.L142
1467:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
 2376              		.loc 1 1467 3 is_stmt 1 view .LVU704
1468:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2377              		.loc 1 1468 1 is_stmt 0 view .LVU705
 2378 000a 08BD     		pop	{r3, pc}
 2379              		.cfi_endproc
 2380              	.LFE19:
 2382              		.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
 2383              		.align	1
 2384              		.global	SEGGER_RTT_HasKey
 2385              		.syntax unified
 2386              		.thumb
 2387              		.thumb_func
 2388              		.fpu fpv4-sp-d16
 2390              	SEGGER_RTT_HasKey:
 2391              	.LFB20:
1469:libraries/RTT/RTT/SEGGER_RTT.c **** 
1470:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1471:libraries/RTT/RTT/SEGGER_RTT.c **** *
1472:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
1473:libraries/RTT/RTT/SEGGER_RTT.c **** *
1474:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1475:libraries/RTT/RTT/SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
1476:libraries/RTT/RTT/SEGGER_RTT.c **** *
1477:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1478:libraries/RTT/RTT/SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
ARM GAS  /tmp/ccfEWiwI.s 			page 73


1479:libraries/RTT/RTT/SEGGER_RTT.c **** *    == 1 -     At least one character is available.
1480:libraries/RTT/RTT/SEGGER_RTT.c **** *
1481:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1482:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1483:libraries/RTT/RTT/SEGGER_RTT.c **** */
1484:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 2392              		.loc 1 1484 29 is_stmt 1 view -0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 0, uses_anonymous_args = 0
 2396 0000 08B5     		push	{r3, lr}
 2397              	.LCFI25:
 2398              		.cfi_def_cfa_offset 8
 2399              		.cfi_offset 3, -8
 2400              		.cfi_offset 14, -4
1485:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 2401              		.loc 1 1485 3 view .LVU707
1486:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned RdOff;
 2402              		.loc 1 1486 3 view .LVU708
1487:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 2403              		.loc 1 1487 3 view .LVU709
 2404              	.LBB22:
1488:libraries/RTT/RTT/SEGGER_RTT.c **** 
1489:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 2405              		.loc 1 1489 3 view .LVU710
 2406              		.loc 1 1489 3 view .LVU711
 2407              	.LVL246:
 2408              		.loc 1 1489 3 view .LVU712
 2409              		.loc 1 1489 3 view .LVU713
 2410 0002 074B     		ldr	r3, .L150
 2411 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2412 0006 33B1     		cbz	r3, .L149
 2413              	.L145:
 2414              		.loc 1 1489 3 discriminator 3 view .LVU714
 2415              	.LBE22:
 2416              		.loc 1 1489 9 discriminator 3 view .LVU715
1490:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 2417              		.loc 1 1490 3 discriminator 3 view .LVU716
 2418              	.LVL247:
1491:libraries/RTT/RTT/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 2419              		.loc 1 1491 3 discriminator 3 view .LVU717
 2420              		.loc 1 1491 9 is_stmt 0 discriminator 3 view .LVU718
 2421 0008 054B     		ldr	r3, .L150
 2422 000a 1A6F     		ldr	r2, [r3, #112]
 2423              	.LVL248:
1492:libraries/RTT/RTT/SEGGER_RTT.c ****   if (RdOff != pRing->WrOff) {
 2424              		.loc 1 1492 3 is_stmt 1 discriminator 3 view .LVU719
 2425              		.loc 1 1492 21 is_stmt 0 discriminator 3 view .LVU720
 2426 000c DB6E     		ldr	r3, [r3, #108]
 2427              		.loc 1 1492 6 discriminator 3 view .LVU721
 2428 000e 9342     		cmp	r3, r2
 2429 0010 04D0     		beq	.L147
1493:libraries/RTT/RTT/SEGGER_RTT.c ****     r = 1;
 2430              		.loc 1 1493 7 view .LVU722
 2431 0012 0120     		movs	r0, #1
 2432              	.L144:
1494:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
ARM GAS  /tmp/ccfEWiwI.s 			page 74


1495:libraries/RTT/RTT/SEGGER_RTT.c ****     r = 0;
1496:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1497:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1498:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2433              		.loc 1 1498 1 view .LVU723
 2434 0014 08BD     		pop	{r3, pc}
 2435              	.LVL249:
 2436              	.L149:
 2437              	.LBB23:
1489:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 2438              		.loc 1 1489 3 is_stmt 1 discriminator 1 view .LVU724
 2439 0016 FFF7FEFF 		bl	_DoInit
 2440              	.LVL250:
 2441 001a F5E7     		b	.L145
 2442              	.LVL251:
 2443              	.L147:
1489:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 2444              		.loc 1 1489 3 is_stmt 0 discriminator 1 view .LVU725
 2445              	.LBE23:
1495:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2446              		.loc 1 1495 7 view .LVU726
 2447 001c 0020     		movs	r0, #0
 2448              	.LVL252:
1497:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2449              		.loc 1 1497 3 is_stmt 1 view .LVU727
1497:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2450              		.loc 1 1497 10 is_stmt 0 view .LVU728
 2451 001e F9E7     		b	.L144
 2452              	.L151:
 2453              		.align	2
 2454              	.L150:
 2455 0020 00000000 		.word	.LANCHOR0
 2456              		.cfi_endproc
 2457              	.LFE20:
 2459              		.section	.text.SEGGER_RTT_HasData,"ax",%progbits
 2460              		.align	1
 2461              		.global	SEGGER_RTT_HasData
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu fpv4-sp-d16
 2467              	SEGGER_RTT_HasData:
 2468              	.LVL253:
 2469              	.LFB21:
1499:libraries/RTT/RTT/SEGGER_RTT.c **** 
1500:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1501:libraries/RTT/RTT/SEGGER_RTT.c **** *
1502:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_HasData
1503:libraries/RTT/RTT/SEGGER_RTT.c **** *
1504:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1505:libraries/RTT/RTT/SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
1506:libraries/RTT/RTT/SEGGER_RTT.c **** *
1507:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value:
1508:libraries/RTT/RTT/SEGGER_RTT.c **** *  ==0:  No data
1509:libraries/RTT/RTT/SEGGER_RTT.c **** *  !=0:  Data in buffer
1510:libraries/RTT/RTT/SEGGER_RTT.c **** *
1511:libraries/RTT/RTT/SEGGER_RTT.c **** */
ARM GAS  /tmp/ccfEWiwI.s 			page 75


1512:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 2470              		.loc 1 1512 51 is_stmt 1 view -0
 2471              		.cfi_startproc
 2472              		@ args = 0, pretend = 0, frame = 0
 2473              		@ frame_needed = 0, uses_anonymous_args = 0
 2474              		@ link register save eliminated.
1513:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 2475              		.loc 1 1513 3 view .LVU730
1514:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                v;
 2476              		.loc 1 1514 3 view .LVU731
1515:libraries/RTT/RTT/SEGGER_RTT.c **** 
1516:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 2477              		.loc 1 1516 3 view .LVU732
1517:libraries/RTT/RTT/SEGGER_RTT.c ****   v = pRing->WrOff;
 2478              		.loc 1 1517 3 view .LVU733
 2479              		.loc 1 1517 5 is_stmt 0 view .LVU734
 2480 0000 064B     		ldr	r3, .L153
 2481 0002 00EB4002 		add	r2, r0, r0, lsl #1
 2482 0006 03EBC202 		add	r2, r3, r2, lsl #3
 2483 000a D26E     		ldr	r2, [r2, #108]
 2484              	.LVL254:
1518:libraries/RTT/RTT/SEGGER_RTT.c ****   return v - pRing->RdOff;
 2485              		.loc 1 1518 3 is_stmt 1 view .LVU735
 2486              		.loc 1 1518 19 is_stmt 0 view .LVU736
 2487 000c 00EB4000 		add	r0, r0, r0, lsl #1
 2488              	.LVL255:
 2489              		.loc 1 1518 19 view .LVU737
 2490 0010 03EBC000 		add	r0, r3, r0, lsl #3
 2491 0014 006F     		ldr	r0, [r0, #112]
1519:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2492              		.loc 1 1519 1 view .LVU738
 2493 0016 101A     		subs	r0, r2, r0
 2494 0018 7047     		bx	lr
 2495              	.L154:
 2496 001a 00BF     		.align	2
 2497              	.L153:
 2498 001c 00000000 		.word	.LANCHOR0
 2499              		.cfi_endproc
 2500              	.LFE21:
 2502              		.section	.text.SEGGER_RTT_HasDataUp,"ax",%progbits
 2503              		.align	1
 2504              		.global	SEGGER_RTT_HasDataUp
 2505              		.syntax unified
 2506              		.thumb
 2507              		.thumb_func
 2508              		.fpu fpv4-sp-d16
 2510              	SEGGER_RTT_HasDataUp:
 2511              	.LVL256:
 2512              	.LFB22:
1520:libraries/RTT/RTT/SEGGER_RTT.c **** 
1521:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1522:libraries/RTT/RTT/SEGGER_RTT.c **** *
1523:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_HasDataUp
1524:libraries/RTT/RTT/SEGGER_RTT.c **** *
1525:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1526:libraries/RTT/RTT/SEGGER_RTT.c **** *    Check if there is data remaining to be sent in the given buffer.
1527:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 76


1528:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value:
1529:libraries/RTT/RTT/SEGGER_RTT.c **** *  ==0:  No data
1530:libraries/RTT/RTT/SEGGER_RTT.c **** *  !=0:  Data in buffer
1531:libraries/RTT/RTT/SEGGER_RTT.c **** *
1532:libraries/RTT/RTT/SEGGER_RTT.c **** */
1533:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasDataUp(unsigned BufferIndex) {
 2513              		.loc 1 1533 53 is_stmt 1 view -0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 2517              		@ link register save eliminated.
1534:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 2518              		.loc 1 1534 3 view .LVU740
1535:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned                v;
 2519              		.loc 1 1535 3 view .LVU741
1536:libraries/RTT/RTT/SEGGER_RTT.c **** 
1537:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 2520              		.loc 1 1537 3 view .LVU742
1538:libraries/RTT/RTT/SEGGER_RTT.c ****   v = pRing->RdOff;
 2521              		.loc 1 1538 3 view .LVU743
 2522              		.loc 1 1538 5 is_stmt 0 view .LVU744
 2523 0000 064B     		ldr	r3, .L156
 2524 0002 00EB4002 		add	r2, r0, r0, lsl #1
 2525 0006 03EBC202 		add	r2, r3, r2, lsl #3
 2526 000a 926A     		ldr	r2, [r2, #40]
 2527              	.LVL257:
1539:libraries/RTT/RTT/SEGGER_RTT.c ****   return pRing->WrOff - v;
 2528              		.loc 1 1539 3 is_stmt 1 view .LVU745
 2529              		.loc 1 1539 15 is_stmt 0 view .LVU746
 2530 000c 00EB4000 		add	r0, r0, r0, lsl #1
 2531              	.LVL258:
 2532              		.loc 1 1539 15 view .LVU747
 2533 0010 03EBC000 		add	r0, r3, r0, lsl #3
 2534 0014 406A     		ldr	r0, [r0, #36]
1540:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2535              		.loc 1 1540 1 view .LVU748
 2536 0016 801A     		subs	r0, r0, r2
 2537 0018 7047     		bx	lr
 2538              	.L157:
 2539 001a 00BF     		.align	2
 2540              	.L156:
 2541 001c 00000000 		.word	.LANCHOR0
 2542              		.cfi_endproc
 2543              	.LFE22:
 2545              		.section	.text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 2546              		.align	1
 2547              		.global	SEGGER_RTT_AllocDownBuffer
 2548              		.syntax unified
 2549              		.thumb
 2550              		.thumb_func
 2551              		.fpu fpv4-sp-d16
 2553              	SEGGER_RTT_AllocDownBuffer:
 2554              	.LVL259:
 2555              	.LFB23:
1541:libraries/RTT/RTT/SEGGER_RTT.c **** 
1542:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1543:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 77


1544:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
1545:libraries/RTT/RTT/SEGGER_RTT.c **** *
1546:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1547:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
1548:libraries/RTT/RTT/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1549:libraries/RTT/RTT/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1550:libraries/RTT/RTT/SEGGER_RTT.c **** *
1551:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1552:libraries/RTT/RTT/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1553:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1554:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1555:libraries/RTT/RTT/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1556:libraries/RTT/RTT/SEGGER_RTT.c **** *
1557:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1558:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1559:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0 - Error
1560:libraries/RTT/RTT/SEGGER_RTT.c **** */
1561:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 2556              		.loc 1 1561 103 is_stmt 1 view -0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 0
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560              		.loc 1 1561 103 is_stmt 0 view .LVU750
 2561 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2562              	.LCFI26:
 2563              		.cfi_def_cfa_offset 24
 2564              		.cfi_offset 4, -24
 2565              		.cfi_offset 5, -20
 2566              		.cfi_offset 6, -16
 2567              		.cfi_offset 7, -12
 2568              		.cfi_offset 8, -8
 2569              		.cfi_offset 14, -4
 2570 0004 8046     		mov	r8, r0
 2571 0006 0F46     		mov	r7, r1
 2572 0008 1646     		mov	r6, r2
 2573 000a 1D46     		mov	r5, r3
1562:libraries/RTT/RTT/SEGGER_RTT.c ****   int BufferIndex;
 2574              		.loc 1 1562 3 is_stmt 1 view .LVU751
1563:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 2575              		.loc 1 1563 3 view .LVU752
 2576              	.LBB24:
1564:libraries/RTT/RTT/SEGGER_RTT.c **** 
1565:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 2577              		.loc 1 1565 3 view .LVU753
 2578              		.loc 1 1565 3 view .LVU754
 2579              	.LVL260:
 2580              		.loc 1 1565 3 view .LVU755
 2581              		.loc 1 1565 3 view .LVU756
 2582 000c 194B     		ldr	r3, .L166
 2583              	.LVL261:
 2584              		.loc 1 1565 3 is_stmt 0 view .LVU757
 2585 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2586 0010 4BB3     		cbz	r3, .L165
 2587              	.LVL262:
 2588              	.L159:
 2589              		.loc 1 1565 3 is_stmt 1 discriminator 3 view .LVU758
 2590              	.LBE24:
ARM GAS  /tmp/ccfEWiwI.s 			page 78


 2591              		.loc 1 1565 9 discriminator 3 view .LVU759
 2592              	.LBB25:
1566:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2593              		.loc 1 1566 3 discriminator 3 view .LVU760
 2594              		.loc 1 1566 3 discriminator 3 view .LVU761
 2595              		.syntax unified
 2596              	@ 1566 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2597 0012 EFF31182 		mrs   r2, basepri  
 2598 0016 4FF02001 		mov   r1, #32       
 2599 001a 81F31188 		msr   basepri, r1  
 2600              		
 2601              	@ 0 "" 2
 2602              	.LVL263:
 2603              		.loc 1 1566 20 discriminator 3 view .LVU762
1567:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 2604              		.loc 1 1567 3 discriminator 3 view .LVU763
1568:libraries/RTT/RTT/SEGGER_RTT.c ****   BufferIndex = 0;
 2605              		.loc 1 1568 3 discriminator 3 view .LVU764
 2606              		.loc 1 1568 15 is_stmt 0 discriminator 3 view .LVU765
 2607              		.thumb
 2608              		.syntax unified
 2609 001e 0020     		movs	r0, #0
 2610              	.LVL264:
 2611              	.L161:
1569:libraries/RTT/RTT/SEGGER_RTT.c ****   do {
 2612              		.loc 1 1569 3 is_stmt 1 view .LVU766
1570:libraries/RTT/RTT/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 2613              		.loc 1 1570 5 view .LVU767
 2614              		.loc 1 1570 35 is_stmt 0 view .LVU768
 2615 0020 00EB400C 		add	ip, r0, r0, lsl #1
 2616 0024 134C     		ldr	r4, .L166
 2617 0026 04EBCC0C 		add	ip, r4, ip, lsl #3
 2618 002a DCF86430 		ldr	r3, [ip, #100]
 2619              		.loc 1 1570 8 view .LVU769
 2620 002e 1BB1     		cbz	r3, .L160
1571:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
1572:libraries/RTT/RTT/SEGGER_RTT.c ****     }
1573:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferIndex++;
 2621              		.loc 1 1573 5 is_stmt 1 view .LVU770
 2622              		.loc 1 1573 16 is_stmt 0 view .LVU771
 2623 0030 0130     		adds	r0, r0, #1
 2624              	.LVL265:
1574:libraries/RTT/RTT/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 2625              		.loc 1 1574 11 is_stmt 1 view .LVU772
 2626              		.loc 1 1574 32 is_stmt 0 view .LVU773
 2627 0032 6369     		ldr	r3, [r4, #20]
 2628              		.loc 1 1574 3 view .LVU774
 2629 0034 8342     		cmp	r3, r0
 2630 0036 F3DC     		bgt	.L161
 2631              	.L160:
1575:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumDownBuffers) {
 2632              		.loc 1 1575 3 is_stmt 1 view .LVU775
 2633              		.loc 1 1575 27 is_stmt 0 view .LVU776
 2634 0038 0E4B     		ldr	r3, .L166
 2635 003a 5B69     		ldr	r3, [r3, #20]
 2636              		.loc 1 1575 6 view .LVU777
 2637 003c 8342     		cmp	r3, r0
ARM GAS  /tmp/ccfEWiwI.s 			page 79


 2638 003e 15DD     		ble	.L163
1576:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].sName        = sName;
 2639              		.loc 1 1576 5 is_stmt 1 view .LVU778
 2640              		.loc 1 1576 45 is_stmt 0 view .LVU779
 2641 0040 00EB4003 		add	r3, r0, r0, lsl #1
 2642 0044 0B49     		ldr	r1, .L166
 2643 0046 01EBC303 		add	r3, r1, r3, lsl #3
 2644 004a C3F86080 		str	r8, [r3, #96]
1577:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 2645              		.loc 1 1577 5 is_stmt 1 view .LVU780
 2646              		.loc 1 1577 45 is_stmt 0 view .LVU781
 2647 004e 5F66     		str	r7, [r3, #100]
1578:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].SizeOfBuffer = BufferSize;
 2648              		.loc 1 1578 5 is_stmt 1 view .LVU782
 2649              		.loc 1 1578 45 is_stmt 0 view .LVU783
 2650 0050 9E66     		str	r6, [r3, #104]
1579:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 2651              		.loc 1 1579 5 is_stmt 1 view .LVU784
 2652              		.loc 1 1579 45 is_stmt 0 view .LVU785
 2653 0052 0021     		movs	r1, #0
 2654 0054 1967     		str	r1, [r3, #112]
1580:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].WrOff        = 0u;
 2655              		.loc 1 1580 5 is_stmt 1 view .LVU786
 2656              		.loc 1 1580 45 is_stmt 0 view .LVU787
 2657 0056 D966     		str	r1, [r3, #108]
1581:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].Flags        = Flags;
 2658              		.loc 1 1581 5 is_stmt 1 view .LVU788
 2659              		.loc 1 1581 45 is_stmt 0 view .LVU789
 2660 0058 5D67     		str	r5, [r3, #116]
1582:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2661              		.loc 1 1582 5 is_stmt 1 view .LVU790
 2662              		.syntax unified
 2663              	@ 1582 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2664 005a BFF35F8F 		dmb
 2665              	
 2666              	@ 0 "" 2
 2667              		.loc 1 1582 15 view .LVU791
 2668              	.LVL266:
 2669              		.thumb
 2670              		.syntax unified
 2671              	.L162:
1583:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1584:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferIndex = -1;
1585:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1586:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2672              		.loc 1 1586 3 view .LVU792
 2673              		.syntax unified
 2674              	@ 1586 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2675 005e 82F31188 		msr   basepri, r2  
 2676              		
 2677              	@ 0 "" 2
 2678              		.thumb
 2679              		.syntax unified
 2680              	.LBE25:
 2681              		.loc 1 1586 22 view .LVU793
1587:libraries/RTT/RTT/SEGGER_RTT.c ****   return BufferIndex;
 2682              		.loc 1 1587 3 view .LVU794
ARM GAS  /tmp/ccfEWiwI.s 			page 80


1588:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2683              		.loc 1 1588 1 is_stmt 0 view .LVU795
 2684 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2685              	.LVL267:
 2686              	.L165:
 2687              	.LBB26:
1565:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2688              		.loc 1 1565 3 is_stmt 1 discriminator 1 view .LVU796
 2689 0066 FFF7FEFF 		bl	_DoInit
 2690              	.LVL268:
1565:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2691              		.loc 1 1565 3 is_stmt 0 discriminator 1 view .LVU797
 2692 006a D2E7     		b	.L159
 2693              	.LVL269:
 2694              	.L163:
1565:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2695              		.loc 1 1565 3 discriminator 1 view .LVU798
 2696              	.LBE26:
 2697              	.LBB27:
1584:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2698              		.loc 1 1584 17 view .LVU799
 2699 006c 4FF0FF30 		mov	r0, #-1
 2700              	.LVL270:
1584:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2701              		.loc 1 1584 17 view .LVU800
 2702 0070 F5E7     		b	.L162
 2703              	.L167:
 2704 0072 00BF     		.align	2
 2705              	.L166:
 2706 0074 00000000 		.word	.LANCHOR0
 2707              	.LBE27:
 2708              		.cfi_endproc
 2709              	.LFE23:
 2711              		.section	.text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 2712              		.align	1
 2713              		.global	SEGGER_RTT_AllocUpBuffer
 2714              		.syntax unified
 2715              		.thumb
 2716              		.thumb_func
 2717              		.fpu fpv4-sp-d16
 2719              	SEGGER_RTT_AllocUpBuffer:
 2720              	.LVL271:
 2721              	.LFB24:
1589:libraries/RTT/RTT/SEGGER_RTT.c **** 
1590:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1591:libraries/RTT/RTT/SEGGER_RTT.c **** *
1592:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1593:libraries/RTT/RTT/SEGGER_RTT.c **** *
1594:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1595:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1596:libraries/RTT/RTT/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1597:libraries/RTT/RTT/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1598:libraries/RTT/RTT/SEGGER_RTT.c **** *
1599:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1600:libraries/RTT/RTT/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1601:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1602:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
ARM GAS  /tmp/ccfEWiwI.s 			page 81


1603:libraries/RTT/RTT/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1604:libraries/RTT/RTT/SEGGER_RTT.c **** *
1605:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1606:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1607:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0 - Error
1608:libraries/RTT/RTT/SEGGER_RTT.c **** */
1609:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
 2722              		.loc 1 1609 101 is_stmt 1 view -0
 2723              		.cfi_startproc
 2724              		@ args = 0, pretend = 0, frame = 0
 2725              		@ frame_needed = 0, uses_anonymous_args = 0
 2726              		.loc 1 1609 101 is_stmt 0 view .LVU802
 2727 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2728              	.LCFI27:
 2729              		.cfi_def_cfa_offset 24
 2730              		.cfi_offset 3, -24
 2731              		.cfi_offset 4, -20
 2732              		.cfi_offset 5, -16
 2733              		.cfi_offset 6, -12
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 0746     		mov	r7, r0
 2737 0004 0E46     		mov	r6, r1
 2738 0006 1546     		mov	r5, r2
 2739 0008 1C46     		mov	r4, r3
1610:libraries/RTT/RTT/SEGGER_RTT.c ****   int BufferIndex;
 2740              		.loc 1 1610 3 is_stmt 1 view .LVU803
1611:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 2741              		.loc 1 1611 3 view .LVU804
 2742              	.LBB28:
1612:libraries/RTT/RTT/SEGGER_RTT.c **** 
1613:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 2743              		.loc 1 1613 3 view .LVU805
 2744              		.loc 1 1613 3 view .LVU806
 2745              	.LVL272:
 2746              		.loc 1 1613 3 view .LVU807
 2747              		.loc 1 1613 3 view .LVU808
 2748 000a 1F4B     		ldr	r3, .L176
 2749              	.LVL273:
 2750              		.loc 1 1613 3 is_stmt 0 view .LVU809
 2751 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2752 000e 002B     		cmp	r3, #0
 2753 0010 34D0     		beq	.L175
 2754              	.LVL274:
 2755              	.L169:
 2756              		.loc 1 1613 3 is_stmt 1 discriminator 3 view .LVU810
 2757              	.LBE28:
 2758              		.loc 1 1613 9 discriminator 3 view .LVU811
 2759              	.LBB29:
1614:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2760              		.loc 1 1614 3 discriminator 3 view .LVU812
 2761              		.loc 1 1614 3 discriminator 3 view .LVU813
 2762              		.syntax unified
 2763              	@ 1614 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2764 0012 EFF31182 		mrs   r2, basepri  
 2765 0016 4FF02001 		mov   r1, #32       
 2766 001a 81F31188 		msr   basepri, r1  
ARM GAS  /tmp/ccfEWiwI.s 			page 82


 2767              		
 2768              	@ 0 "" 2
 2769              	.LVL275:
 2770              		.loc 1 1614 20 discriminator 3 view .LVU814
1615:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 2771              		.loc 1 1615 3 discriminator 3 view .LVU815
1616:libraries/RTT/RTT/SEGGER_RTT.c ****   BufferIndex = 0;
 2772              		.loc 1 1616 3 discriminator 3 view .LVU816
 2773              		.loc 1 1616 15 is_stmt 0 discriminator 3 view .LVU817
 2774              		.thumb
 2775              		.syntax unified
 2776 001e 0020     		movs	r0, #0
 2777              	.LVL276:
 2778              	.L171:
1617:libraries/RTT/RTT/SEGGER_RTT.c ****   do {
 2779              		.loc 1 1617 3 is_stmt 1 view .LVU818
1618:libraries/RTT/RTT/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 2780              		.loc 1 1618 5 view .LVU819
 2781              		.loc 1 1618 33 is_stmt 0 view .LVU820
 2782 0020 00F1010C 		add	ip, r0, #1
 2783 0024 0CEB4C0C 		add	ip, ip, ip, lsl #1
 2784 0028 174B     		ldr	r3, .L176
 2785 002a 03EBCC0C 		add	ip, r3, ip, lsl #3
 2786 002e DCF80430 		ldr	r3, [ip, #4]
 2787              		.loc 1 1618 8 view .LVU821
 2788 0032 23B1     		cbz	r3, .L170
1619:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
1620:libraries/RTT/RTT/SEGGER_RTT.c ****     }
1621:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferIndex++;
 2789              		.loc 1 1621 5 is_stmt 1 view .LVU822
 2790              		.loc 1 1621 16 is_stmt 0 view .LVU823
 2791 0034 0130     		adds	r0, r0, #1
 2792              	.LVL277:
1622:libraries/RTT/RTT/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 2793              		.loc 1 1622 11 is_stmt 1 view .LVU824
 2794              		.loc 1 1622 32 is_stmt 0 view .LVU825
 2795 0036 144B     		ldr	r3, .L176
 2796 0038 1B69     		ldr	r3, [r3, #16]
 2797              		.loc 1 1622 3 view .LVU826
 2798 003a 8342     		cmp	r3, r0
 2799 003c F0DC     		bgt	.L171
 2800              	.L170:
1623:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumUpBuffers) {
 2801              		.loc 1 1623 3 is_stmt 1 view .LVU827
 2802              		.loc 1 1623 27 is_stmt 0 view .LVU828
 2803 003e 124B     		ldr	r3, .L176
 2804 0040 1B69     		ldr	r3, [r3, #16]
 2805              		.loc 1 1623 6 view .LVU829
 2806 0042 8342     		cmp	r3, r0
 2807 0044 1DDD     		ble	.L173
1624:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].sName        = sName;
 2808              		.loc 1 1624 5 is_stmt 1 view .LVU830
 2809              		.loc 1 1624 43 is_stmt 0 view .LVU831
 2810 0046 104B     		ldr	r3, .L176
 2811 0048 411C     		adds	r1, r0, #1
 2812 004a 01EB410C 		add	ip, r1, r1, lsl #1
 2813 004e 4FEACC0C 		lsl	ip, ip, #3
ARM GAS  /tmp/ccfEWiwI.s 			page 83


 2814 0052 43F80C70 		str	r7, [r3, ip]
1625:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2815              		.loc 1 1625 5 is_stmt 1 view .LVU832
 2816              		.loc 1 1625 43 is_stmt 0 view .LVU833
 2817 0056 01EB4101 		add	r1, r1, r1, lsl #1
 2818 005a 03EBC101 		add	r1, r3, r1, lsl #3
 2819 005e 4E60     		str	r6, [r1, #4]
1626:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2820              		.loc 1 1626 5 is_stmt 1 view .LVU834
 2821              		.loc 1 1626 43 is_stmt 0 view .LVU835
 2822 0060 00EB4001 		add	r1, r0, r0, lsl #1
 2823 0064 03EBC103 		add	r3, r3, r1, lsl #3
 2824 0068 1D62     		str	r5, [r3, #32]
1627:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
 2825              		.loc 1 1627 5 is_stmt 1 view .LVU836
 2826              		.loc 1 1627 43 is_stmt 0 view .LVU837
 2827 006a 0021     		movs	r1, #0
 2828 006c 9962     		str	r1, [r3, #40]
1628:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].WrOff        = 0u;
 2829              		.loc 1 1628 5 is_stmt 1 view .LVU838
 2830              		.loc 1 1628 43 is_stmt 0 view .LVU839
 2831 006e 5962     		str	r1, [r3, #36]
1629:libraries/RTT/RTT/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].Flags        = Flags;
 2832              		.loc 1 1629 5 is_stmt 1 view .LVU840
 2833              		.loc 1 1629 43 is_stmt 0 view .LVU841
 2834 0070 DC62     		str	r4, [r3, #44]
1630:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2835              		.loc 1 1630 5 is_stmt 1 view .LVU842
 2836              		.syntax unified
 2837              	@ 1630 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2838 0072 BFF35F8F 		dmb
 2839              	
 2840              	@ 0 "" 2
 2841              		.loc 1 1630 15 view .LVU843
 2842              	.LVL278:
 2843              		.thumb
 2844              		.syntax unified
 2845              	.L172:
1631:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1632:libraries/RTT/RTT/SEGGER_RTT.c ****     BufferIndex = -1;
1633:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1634:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2846              		.loc 1 1634 3 view .LVU844
 2847              		.syntax unified
 2848              	@ 1634 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2849 0076 82F31188 		msr   basepri, r2  
 2850              		
 2851              	@ 0 "" 2
 2852              		.thumb
 2853              		.syntax unified
 2854              	.LBE29:
 2855              		.loc 1 1634 22 view .LVU845
1635:libraries/RTT/RTT/SEGGER_RTT.c ****   return BufferIndex;
 2856              		.loc 1 1635 3 view .LVU846
1636:libraries/RTT/RTT/SEGGER_RTT.c **** }
 2857              		.loc 1 1636 1 is_stmt 0 view .LVU847
 2858 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccfEWiwI.s 			page 84


 2859              	.LVL279:
 2860              	.L175:
 2861              	.LBB30:
1613:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2862              		.loc 1 1613 3 is_stmt 1 discriminator 1 view .LVU848
 2863 007c FFF7FEFF 		bl	_DoInit
 2864              	.LVL280:
1613:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2865              		.loc 1 1613 3 is_stmt 0 discriminator 1 view .LVU849
 2866 0080 C7E7     		b	.L169
 2867              	.LVL281:
 2868              	.L173:
1613:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2869              		.loc 1 1613 3 discriminator 1 view .LVU850
 2870              	.LBE30:
 2871              	.LBB31:
1632:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2872              		.loc 1 1632 17 view .LVU851
 2873 0082 4FF0FF30 		mov	r0, #-1
 2874              	.LVL282:
1632:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 2875              		.loc 1 1632 17 view .LVU852
 2876 0086 F6E7     		b	.L172
 2877              	.L177:
 2878              		.align	2
 2879              	.L176:
 2880 0088 00000000 		.word	.LANCHOR0
 2881              	.LBE31:
 2882              		.cfi_endproc
 2883              	.LFE24:
 2885              		.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
 2886              		.align	1
 2887              		.global	SEGGER_RTT_ConfigUpBuffer
 2888              		.syntax unified
 2889              		.thumb
 2890              		.thumb_func
 2891              		.fpu fpv4-sp-d16
 2893              	SEGGER_RTT_ConfigUpBuffer:
 2894              	.LVL283:
 2895              	.LFB25:
1637:libraries/RTT/RTT/SEGGER_RTT.c **** 
1638:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1639:libraries/RTT/RTT/SEGGER_RTT.c **** *
1640:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1641:libraries/RTT/RTT/SEGGER_RTT.c **** *
1642:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1643:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1644:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1645:libraries/RTT/RTT/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1646:libraries/RTT/RTT/SEGGER_RTT.c **** *
1647:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1648:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1649:libraries/RTT/RTT/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1650:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1651:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1652:libraries/RTT/RTT/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1653:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 85


1654:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1655:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0 - O.K.
1656:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0 - Error
1657:libraries/RTT/RTT/SEGGER_RTT.c **** *
1658:libraries/RTT/RTT/SEGGER_RTT.c **** *  Additional information
1659:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1660:libraries/RTT/RTT/SEGGER_RTT.c **** *    May only be called once per buffer.
1661:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1662:libraries/RTT/RTT/SEGGER_RTT.c **** */
1663:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 2896              		.loc 1 1663 124 is_stmt 1 view -0
 2897              		.cfi_startproc
 2898              		@ args = 4, pretend = 0, frame = 0
 2899              		@ frame_needed = 0, uses_anonymous_args = 0
 2900              		.loc 1 1663 124 is_stmt 0 view .LVU854
 2901 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2902              	.LCFI28:
 2903              		.cfi_def_cfa_offset 24
 2904              		.cfi_offset 4, -24
 2905              		.cfi_offset 5, -20
 2906              		.cfi_offset 6, -16
 2907              		.cfi_offset 7, -12
 2908              		.cfi_offset 8, -8
 2909              		.cfi_offset 14, -4
 2910 0004 0446     		mov	r4, r0
 2911 0006 8846     		mov	r8, r1
 2912 0008 1746     		mov	r7, r2
 2913 000a 1E46     		mov	r6, r3
1664:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 2914              		.loc 1 1664 3 is_stmt 1 view .LVU855
1665:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 2915              		.loc 1 1665 3 view .LVU856
1666:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 2916              		.loc 1 1666 3 view .LVU857
 2917              	.LBB32:
1667:libraries/RTT/RTT/SEGGER_RTT.c **** 
1668:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 2918              		.loc 1 1668 3 view .LVU858
 2919              		.loc 1 1668 3 view .LVU859
 2920              	.LVL284:
 2921              		.loc 1 1668 3 view .LVU860
 2922              		.loc 1 1668 3 view .LVU861
 2923 000c 184B     		ldr	r3, .L185
 2924              	.LVL285:
 2925              		.loc 1 1668 3 is_stmt 0 view .LVU862
 2926 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2927 0010 43B3     		cbz	r3, .L184
 2928              	.LVL286:
 2929              	.L179:
 2930              		.loc 1 1668 3 is_stmt 1 discriminator 3 view .LVU863
 2931              	.LBE32:
 2932              		.loc 1 1668 9 discriminator 3 view .LVU864
1669:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 2933              		.loc 1 1669 3 discriminator 3 view .LVU865
1670:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 2934              		.loc 1 1670 3 discriminator 3 view .LVU866
 2935              		.loc 1 1670 6 is_stmt 0 discriminator 3 view .LVU867
ARM GAS  /tmp/ccfEWiwI.s 			page 86


 2936 0012 022C     		cmp	r4, #2
 2937 0014 29D8     		bhi	.L182
 2938              	.LBB33:
1671:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2939              		.loc 1 1671 5 is_stmt 1 view .LVU868
 2940              		.loc 1 1671 5 view .LVU869
 2941              		.syntax unified
 2942              	@ 1671 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2943 0016 EFF31183 		mrs   r3, basepri  
 2944 001a 4FF02001 		mov   r1, #32       
 2945 001e 81F31188 		msr   basepri, r1  
 2946              		
 2947              	@ 0 "" 2
 2948              	.LVL287:
 2949              		.loc 1 1671 22 view .LVU870
1672:libraries/RTT/RTT/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 2950              		.loc 1 1672 5 view .LVU871
1673:libraries/RTT/RTT/SEGGER_RTT.c ****     if (BufferIndex) {
 2951              		.loc 1 1673 5 view .LVU872
 2952              		.loc 1 1673 8 is_stmt 0 view .LVU873
 2953              		.thumb
 2954              		.syntax unified
 2955 0022 9CB1     		cbz	r4, .L181
1674:libraries/RTT/RTT/SEGGER_RTT.c ****       pUp->sName        = sName;
 2956              		.loc 1 1674 7 is_stmt 1 view .LVU874
 2957              		.loc 1 1674 25 is_stmt 0 view .LVU875
 2958 0024 124D     		ldr	r5, .L185
 2959 0026 601C     		adds	r0, r4, #1
 2960 0028 00EB4002 		add	r2, r0, r0, lsl #1
 2961 002c D200     		lsls	r2, r2, #3
 2962 002e 45F80280 		str	r8, [r5, r2]
1675:libraries/RTT/RTT/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
 2963              		.loc 1 1675 7 is_stmt 1 view .LVU876
 2964              		.loc 1 1675 25 is_stmt 0 view .LVU877
 2965 0032 00EB4000 		add	r0, r0, r0, lsl #1
 2966 0036 05EBC000 		add	r0, r5, r0, lsl #3
 2967 003a 4760     		str	r7, [r0, #4]
1676:libraries/RTT/RTT/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 2968              		.loc 1 1676 7 is_stmt 1 view .LVU878
 2969              		.loc 1 1676 25 is_stmt 0 view .LVU879
 2970 003c 04EB4402 		add	r2, r4, r4, lsl #1
 2971 0040 05EBC202 		add	r2, r5, r2, lsl #3
 2972 0044 1662     		str	r6, [r2, #32]
1677:libraries/RTT/RTT/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 2973              		.loc 1 1677 7 is_stmt 1 view .LVU880
 2974              		.loc 1 1677 25 is_stmt 0 view .LVU881
 2975 0046 0021     		movs	r1, #0
 2976 0048 9162     		str	r1, [r2, #40]
1678:libraries/RTT/RTT/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 2977              		.loc 1 1678 7 is_stmt 1 view .LVU882
 2978              		.loc 1 1678 25 is_stmt 0 view .LVU883
 2979 004a 5162     		str	r1, [r2, #36]
 2980              	.L181:
1679:libraries/RTT/RTT/SEGGER_RTT.c ****     }
1680:libraries/RTT/RTT/SEGGER_RTT.c ****     pUp->Flags          = Flags;
 2981              		.loc 1 1680 5 is_stmt 1 view .LVU884
 2982              		.loc 1 1680 25 is_stmt 0 view .LVU885
ARM GAS  /tmp/ccfEWiwI.s 			page 87


 2983 004c 04EB4404 		add	r4, r4, r4, lsl #1
 2984              	.LVL288:
 2985              		.loc 1 1680 25 view .LVU886
 2986 0050 0748     		ldr	r0, .L185
 2987 0052 00EBC404 		add	r4, r0, r4, lsl #3
 2988 0056 069A     		ldr	r2, [sp, #24]
 2989 0058 E262     		str	r2, [r4, #44]
1681:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2990              		.loc 1 1681 5 is_stmt 1 view .LVU887
 2991              		.syntax unified
 2992              	@ 1681 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 2993 005a 83F31188 		msr   basepri, r3  
 2994              		
 2995              	@ 0 "" 2
 2996              		.thumb
 2997              		.syntax unified
 2998              	.LBE33:
 2999              		.loc 1 1681 24 view .LVU888
1682:libraries/RTT/RTT/SEGGER_RTT.c ****     r =  0;
 3000              		.loc 1 1682 5 view .LVU889
 3001              	.LVL289:
 3002              		.loc 1 1682 7 is_stmt 0 view .LVU890
 3003 005e 0020     		movs	r0, #0
 3004              	.LVL290:
 3005              	.L178:
1683:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1684:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1685:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1686:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1687:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3006              		.loc 1 1687 1 view .LVU891
 3007 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3008              	.LVL291:
 3009              	.L184:
 3010              	.LBB34:
1668:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3011              		.loc 1 1668 3 is_stmt 1 discriminator 1 view .LVU892
 3012 0064 FFF7FEFF 		bl	_DoInit
 3013              	.LVL292:
1668:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3014              		.loc 1 1668 3 is_stmt 0 discriminator 1 view .LVU893
 3015 0068 D3E7     		b	.L179
 3016              	.LVL293:
 3017              	.L182:
1668:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3018              		.loc 1 1668 3 discriminator 1 view .LVU894
 3019              	.LBE34:
1684:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 3020              		.loc 1 1684 7 view .LVU895
 3021 006a 4FF0FF30 		mov	r0, #-1
 3022              	.LVL294:
1686:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3023              		.loc 1 1686 3 is_stmt 1 view .LVU896
1686:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3024              		.loc 1 1686 10 is_stmt 0 view .LVU897
 3025 006e F7E7     		b	.L178
 3026              	.L186:
ARM GAS  /tmp/ccfEWiwI.s 			page 88


 3027              		.align	2
 3028              	.L185:
 3029 0070 00000000 		.word	.LANCHOR0
 3030              		.cfi_endproc
 3031              	.LFE25:
 3033              		.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 3034              		.align	1
 3035              		.global	SEGGER_RTT_ConfigDownBuffer
 3036              		.syntax unified
 3037              		.thumb
 3038              		.thumb_func
 3039              		.fpu fpv4-sp-d16
 3041              	SEGGER_RTT_ConfigDownBuffer:
 3042              	.LVL295:
 3043              	.LFB26:
1688:libraries/RTT/RTT/SEGGER_RTT.c **** 
1689:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1690:libraries/RTT/RTT/SEGGER_RTT.c **** *
1691:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1692:libraries/RTT/RTT/SEGGER_RTT.c **** *
1693:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1694:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1695:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1696:libraries/RTT/RTT/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1697:libraries/RTT/RTT/SEGGER_RTT.c **** *
1698:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1699:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1700:libraries/RTT/RTT/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1701:libraries/RTT/RTT/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1702:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1703:libraries/RTT/RTT/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1704:libraries/RTT/RTT/SEGGER_RTT.c **** *
1705:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1706:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0  O.K.
1707:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0  Error
1708:libraries/RTT/RTT/SEGGER_RTT.c **** *
1709:libraries/RTT/RTT/SEGGER_RTT.c **** *  Additional information
1710:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1711:libraries/RTT/RTT/SEGGER_RTT.c **** *    May only be called once per buffer.
1712:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1713:libraries/RTT/RTT/SEGGER_RTT.c **** */
1714:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 3044              		.loc 1 1714 126 is_stmt 1 view -0
 3045              		.cfi_startproc
 3046              		@ args = 4, pretend = 0, frame = 0
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
 3048              		.loc 1 1714 126 is_stmt 0 view .LVU899
 3049 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3050              	.LCFI29:
 3051              		.cfi_def_cfa_offset 24
 3052              		.cfi_offset 4, -24
 3053              		.cfi_offset 5, -20
 3054              		.cfi_offset 6, -16
 3055              		.cfi_offset 7, -12
 3056              		.cfi_offset 8, -8
 3057              		.cfi_offset 14, -4
 3058 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccfEWiwI.s 			page 89


 3059 0006 0F46     		mov	r7, r1
 3060 0008 1646     		mov	r6, r2
 3061 000a 9846     		mov	r8, r3
1715:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 3062              		.loc 1 1715 3 is_stmt 1 view .LVU900
1716:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3063              		.loc 1 1716 3 view .LVU901
1717:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 3064              		.loc 1 1717 3 view .LVU902
 3065              	.LBB35:
1718:libraries/RTT/RTT/SEGGER_RTT.c **** 
1719:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 3066              		.loc 1 1719 3 view .LVU903
 3067              		.loc 1 1719 3 view .LVU904
 3068              	.LVL296:
 3069              		.loc 1 1719 3 view .LVU905
 3070              		.loc 1 1719 3 view .LVU906
 3071 000c 1548     		ldr	r0, .L194
 3072              	.LVL297:
 3073              		.loc 1 1719 3 is_stmt 0 view .LVU907
 3074 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3075 0010 10B3     		cbz	r0, .L193
 3076              	.LVL298:
 3077              	.L188:
 3078              		.loc 1 1719 3 is_stmt 1 discriminator 3 view .LVU908
 3079              	.LBE35:
 3080              		.loc 1 1719 9 discriminator 3 view .LVU909
1720:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3081              		.loc 1 1720 3 discriminator 3 view .LVU910
1721:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 3082              		.loc 1 1721 3 discriminator 3 view .LVU911
 3083              		.loc 1 1721 6 is_stmt 0 discriminator 3 view .LVU912
 3084 0012 022C     		cmp	r4, #2
 3085 0014 23D8     		bhi	.L191
 3086              	.LBB36:
1722:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3087              		.loc 1 1722 5 is_stmt 1 view .LVU913
 3088              		.loc 1 1722 5 view .LVU914
 3089              		.syntax unified
 3090              	@ 1722 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3091 0016 EFF31183 		mrs   r3, basepri  
 3092 001a 4FF02001 		mov   r1, #32       
 3093 001e 81F31188 		msr   basepri, r1  
 3094              		
 3095              	@ 0 "" 2
 3096              	.LVL299:
 3097              		.loc 1 1722 22 view .LVU915
1723:libraries/RTT/RTT/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 3098              		.loc 1 1723 5 view .LVU916
1724:libraries/RTT/RTT/SEGGER_RTT.c ****     if (BufferIndex) {
 3099              		.loc 1 1724 5 view .LVU917
 3100              		.loc 1 1724 8 is_stmt 0 view .LVU918
 3101              		.thumb
 3102              		.syntax unified
 3103 0022 5CB1     		cbz	r4, .L190
1725:libraries/RTT/RTT/SEGGER_RTT.c ****       pDown->sName        = sName;
 3104              		.loc 1 1725 7 is_stmt 1 view .LVU919
ARM GAS  /tmp/ccfEWiwI.s 			page 90


 3105              		.loc 1 1725 27 is_stmt 0 view .LVU920
 3106 0024 04EB4400 		add	r0, r4, r4, lsl #1
 3107 0028 0E4D     		ldr	r5, .L194
 3108 002a 05EBC000 		add	r0, r5, r0, lsl #3
 3109 002e 0766     		str	r7, [r0, #96]
1726:libraries/RTT/RTT/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 3110              		.loc 1 1726 7 is_stmt 1 view .LVU921
 3111              		.loc 1 1726 27 is_stmt 0 view .LVU922
 3112 0030 4666     		str	r6, [r0, #100]
1727:libraries/RTT/RTT/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
 3113              		.loc 1 1727 7 is_stmt 1 view .LVU923
 3114              		.loc 1 1727 27 is_stmt 0 view .LVU924
 3115 0032 C0F86880 		str	r8, [r0, #104]
1728:libraries/RTT/RTT/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
 3116              		.loc 1 1728 7 is_stmt 1 view .LVU925
 3117              		.loc 1 1728 27 is_stmt 0 view .LVU926
 3118 0036 0022     		movs	r2, #0
 3119 0038 0267     		str	r2, [r0, #112]
1729:libraries/RTT/RTT/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 3120              		.loc 1 1729 7 is_stmt 1 view .LVU927
 3121              		.loc 1 1729 27 is_stmt 0 view .LVU928
 3122 003a C266     		str	r2, [r0, #108]
 3123              	.L190:
1730:libraries/RTT/RTT/SEGGER_RTT.c ****     }
1731:libraries/RTT/RTT/SEGGER_RTT.c ****     pDown->Flags          = Flags;
 3124              		.loc 1 1731 5 is_stmt 1 view .LVU929
 3125              		.loc 1 1731 27 is_stmt 0 view .LVU930
 3126 003c 04EB4404 		add	r4, r4, r4, lsl #1
 3127              	.LVL300:
 3128              		.loc 1 1731 27 view .LVU931
 3129 0040 0848     		ldr	r0, .L194
 3130 0042 00EBC404 		add	r4, r0, r4, lsl #3
 3131 0046 069A     		ldr	r2, [sp, #24]
 3132 0048 6267     		str	r2, [r4, #116]
1732:libraries/RTT/RTT/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3133              		.loc 1 1732 5 is_stmt 1 view .LVU932
 3134              		.syntax unified
 3135              	@ 1732 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3136 004a BFF35F8F 		dmb
 3137              	
 3138              	@ 0 "" 2
 3139              		.loc 1 1732 15 view .LVU933
1733:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3140              		.loc 1 1733 5 view .LVU934
 3141              	@ 1733 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3142 004e 83F31188 		msr   basepri, r3  
 3143              		
 3144              	@ 0 "" 2
 3145              		.thumb
 3146              		.syntax unified
 3147              	.LBE36:
 3148              		.loc 1 1733 24 view .LVU935
1734:libraries/RTT/RTT/SEGGER_RTT.c ****     r =  0;
 3149              		.loc 1 1734 5 view .LVU936
 3150              	.LVL301:
 3151              		.loc 1 1734 7 is_stmt 0 view .LVU937
 3152 0052 0020     		movs	r0, #0
ARM GAS  /tmp/ccfEWiwI.s 			page 91


 3153              	.LVL302:
 3154              	.L187:
1735:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1736:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1737:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1738:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1739:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3155              		.loc 1 1739 1 view .LVU938
 3156 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3157              	.LVL303:
 3158              	.L193:
 3159              	.LBB37:
1719:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3160              		.loc 1 1719 3 is_stmt 1 discriminator 1 view .LVU939
 3161 0058 FFF7FEFF 		bl	_DoInit
 3162              	.LVL304:
1719:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3163              		.loc 1 1719 3 is_stmt 0 discriminator 1 view .LVU940
 3164 005c D9E7     		b	.L188
 3165              	.LVL305:
 3166              	.L191:
1719:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3167              		.loc 1 1719 3 discriminator 1 view .LVU941
 3168              	.LBE37:
1736:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 3169              		.loc 1 1736 7 view .LVU942
 3170 005e 4FF0FF30 		mov	r0, #-1
 3171              	.LVL306:
1738:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3172              		.loc 1 1738 3 is_stmt 1 view .LVU943
1738:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3173              		.loc 1 1738 10 is_stmt 0 view .LVU944
 3174 0062 F7E7     		b	.L187
 3175              	.L195:
 3176              		.align	2
 3177              	.L194:
 3178 0064 00000000 		.word	.LANCHOR0
 3179              		.cfi_endproc
 3180              	.LFE26:
 3182              		.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 3183              		.align	1
 3184              		.global	SEGGER_RTT_SetNameUpBuffer
 3185              		.syntax unified
 3186              		.thumb
 3187              		.thumb_func
 3188              		.fpu fpv4-sp-d16
 3190              	SEGGER_RTT_SetNameUpBuffer:
 3191              	.LVL307:
 3192              	.LFB27:
1740:libraries/RTT/RTT/SEGGER_RTT.c **** 
1741:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1742:libraries/RTT/RTT/SEGGER_RTT.c **** *
1743:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
1744:libraries/RTT/RTT/SEGGER_RTT.c **** *
1745:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1746:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1747:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
ARM GAS  /tmp/ccfEWiwI.s 			page 92


1748:libraries/RTT/RTT/SEGGER_RTT.c **** *
1749:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1750:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1751:libraries/RTT/RTT/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1752:libraries/RTT/RTT/SEGGER_RTT.c **** *
1753:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1754:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0  O.K.
1755:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0  Error
1756:libraries/RTT/RTT/SEGGER_RTT.c **** */
1757:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 3193              		.loc 1 1757 73 is_stmt 1 view -0
 3194              		.cfi_startproc
 3195              		@ args = 0, pretend = 0, frame = 0
 3196              		@ frame_needed = 0, uses_anonymous_args = 0
 3197              		.loc 1 1757 73 is_stmt 0 view .LVU946
 3198 0000 38B5     		push	{r3, r4, r5, lr}
 3199              	.LCFI30:
 3200              		.cfi_def_cfa_offset 16
 3201              		.cfi_offset 3, -16
 3202              		.cfi_offset 4, -12
 3203              		.cfi_offset 5, -8
 3204              		.cfi_offset 14, -4
 3205 0002 0446     		mov	r4, r0
 3206 0004 0D46     		mov	r5, r1
1758:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 3207              		.loc 1 1758 3 is_stmt 1 view .LVU947
1759:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3208              		.loc 1 1759 3 view .LVU948
1760:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 3209              		.loc 1 1760 3 view .LVU949
 3210              	.LBB38:
1761:libraries/RTT/RTT/SEGGER_RTT.c **** 
1762:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 3211              		.loc 1 1762 3 view .LVU950
 3212              		.loc 1 1762 3 view .LVU951
 3213              	.LVL308:
 3214              		.loc 1 1762 3 view .LVU952
 3215              		.loc 1 1762 3 view .LVU953
 3216 0006 0D4B     		ldr	r3, .L202
 3217 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3218 000a 8BB1     		cbz	r3, .L201
 3219              	.LVL309:
 3220              	.L197:
 3221              		.loc 1 1762 3 discriminator 3 view .LVU954
 3222              	.LBE38:
 3223              		.loc 1 1762 9 discriminator 3 view .LVU955
1763:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3224              		.loc 1 1763 3 discriminator 3 view .LVU956
1764:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 3225              		.loc 1 1764 3 discriminator 3 view .LVU957
 3226              		.loc 1 1764 6 is_stmt 0 discriminator 3 view .LVU958
 3227 000c 022C     		cmp	r4, #2
 3228 000e 12D8     		bhi	.L199
 3229              	.LBB39:
1765:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3230              		.loc 1 1765 5 is_stmt 1 view .LVU959
 3231              		.loc 1 1765 5 view .LVU960
ARM GAS  /tmp/ccfEWiwI.s 			page 93


 3232              		.syntax unified
 3233              	@ 1765 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3234 0010 EFF31183 		mrs   r3, basepri  
 3235 0014 4FF02001 		mov   r1, #32       
 3236 0018 81F31188 		msr   basepri, r1  
 3237              		
 3238              	@ 0 "" 2
 3239              	.LVL310:
 3240              		.loc 1 1765 22 view .LVU961
1766:libraries/RTT/RTT/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 3241              		.loc 1 1766 5 view .LVU962
1767:libraries/RTT/RTT/SEGGER_RTT.c ****     pUp->sName = sName;
 3242              		.loc 1 1767 5 view .LVU963
 3243              		.loc 1 1767 16 is_stmt 0 view .LVU964
 3244              		.thumb
 3245              		.syntax unified
 3246 001c 0134     		adds	r4, r4, #1
 3247              	.LVL311:
 3248              		.loc 1 1767 16 view .LVU965
 3249 001e 04EB4404 		add	r4, r4, r4, lsl #1
 3250              	.LVL312:
 3251              		.loc 1 1767 16 view .LVU966
 3252 0022 E400     		lsls	r4, r4, #3
 3253 0024 054A     		ldr	r2, .L202
 3254 0026 1551     		str	r5, [r2, r4]
1768:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3255              		.loc 1 1768 5 is_stmt 1 view .LVU967
 3256              		.syntax unified
 3257              	@ 1768 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3258 0028 83F31188 		msr   basepri, r3  
 3259              		
 3260              	@ 0 "" 2
 3261              		.thumb
 3262              		.syntax unified
 3263              	.LBE39:
 3264              		.loc 1 1768 24 view .LVU968
1769:libraries/RTT/RTT/SEGGER_RTT.c ****     r =  0;
 3265              		.loc 1 1769 5 view .LVU969
 3266              	.LVL313:
 3267              		.loc 1 1769 7 is_stmt 0 view .LVU970
 3268 002c 0020     		movs	r0, #0
 3269              	.LVL314:
 3270              	.L196:
1770:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1771:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1772:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1773:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1774:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3271              		.loc 1 1774 1 view .LVU971
 3272 002e 38BD     		pop	{r3, r4, r5, pc}
 3273              	.LVL315:
 3274              	.L201:
 3275              	.LBB40:
1762:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3276              		.loc 1 1762 3 is_stmt 1 discriminator 1 view .LVU972
 3277 0030 FFF7FEFF 		bl	_DoInit
 3278              	.LVL316:
ARM GAS  /tmp/ccfEWiwI.s 			page 94


1762:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3279              		.loc 1 1762 3 is_stmt 0 discriminator 1 view .LVU973
 3280 0034 EAE7     		b	.L197
 3281              	.LVL317:
 3282              	.L199:
1762:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3283              		.loc 1 1762 3 discriminator 1 view .LVU974
 3284              	.LBE40:
1771:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 3285              		.loc 1 1771 7 view .LVU975
 3286 0036 4FF0FF30 		mov	r0, #-1
 3287              	.LVL318:
1773:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3288              		.loc 1 1773 3 is_stmt 1 view .LVU976
1773:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3289              		.loc 1 1773 10 is_stmt 0 view .LVU977
 3290 003a F8E7     		b	.L196
 3291              	.L203:
 3292              		.align	2
 3293              	.L202:
 3294 003c 00000000 		.word	.LANCHOR0
 3295              		.cfi_endproc
 3296              	.LFE27:
 3298              		.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 3299              		.align	1
 3300              		.global	SEGGER_RTT_SetNameDownBuffer
 3301              		.syntax unified
 3302              		.thumb
 3303              		.thumb_func
 3304              		.fpu fpv4-sp-d16
 3306              	SEGGER_RTT_SetNameDownBuffer:
 3307              	.LVL319:
 3308              	.LFB28:
1775:libraries/RTT/RTT/SEGGER_RTT.c **** 
1776:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1777:libraries/RTT/RTT/SEGGER_RTT.c **** *
1778:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
1779:libraries/RTT/RTT/SEGGER_RTT.c **** *
1780:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1781:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1782:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1783:libraries/RTT/RTT/SEGGER_RTT.c **** *
1784:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1785:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1786:libraries/RTT/RTT/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1787:libraries/RTT/RTT/SEGGER_RTT.c **** *
1788:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1789:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0  O.K.
1790:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0  Error
1791:libraries/RTT/RTT/SEGGER_RTT.c **** */
1792:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 3309              		.loc 1 1792 75 is_stmt 1 view -0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 0
 3312              		@ frame_needed = 0, uses_anonymous_args = 0
 3313              		.loc 1 1792 75 is_stmt 0 view .LVU979
 3314 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccfEWiwI.s 			page 95


 3315              	.LCFI31:
 3316              		.cfi_def_cfa_offset 16
 3317              		.cfi_offset 3, -16
 3318              		.cfi_offset 4, -12
 3319              		.cfi_offset 5, -8
 3320              		.cfi_offset 14, -4
 3321 0002 0446     		mov	r4, r0
 3322 0004 0D46     		mov	r5, r1
1793:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 3323              		.loc 1 1793 3 is_stmt 1 view .LVU980
1794:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3324              		.loc 1 1794 3 view .LVU981
1795:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 3325              		.loc 1 1795 3 view .LVU982
 3326              	.LBB41:
1796:libraries/RTT/RTT/SEGGER_RTT.c **** 
1797:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 3327              		.loc 1 1797 3 view .LVU983
 3328              		.loc 1 1797 3 view .LVU984
 3329              	.LVL320:
 3330              		.loc 1 1797 3 view .LVU985
 3331              		.loc 1 1797 3 view .LVU986
 3332 0006 0D4B     		ldr	r3, .L210
 3333 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3334 000a 8BB1     		cbz	r3, .L209
 3335              	.LVL321:
 3336              	.L205:
 3337              		.loc 1 1797 3 discriminator 3 view .LVU987
 3338              	.LBE41:
 3339              		.loc 1 1797 9 discriminator 3 view .LVU988
1798:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3340              		.loc 1 1798 3 discriminator 3 view .LVU989
1799:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 3341              		.loc 1 1799 3 discriminator 3 view .LVU990
 3342              		.loc 1 1799 6 is_stmt 0 discriminator 3 view .LVU991
 3343 000c 022C     		cmp	r4, #2
 3344 000e 12D8     		bhi	.L207
 3345              	.LBB42:
1800:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3346              		.loc 1 1800 5 is_stmt 1 view .LVU992
 3347              		.loc 1 1800 5 view .LVU993
 3348              		.syntax unified
 3349              	@ 1800 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3350 0010 EFF31183 		mrs   r3, basepri  
 3351 0014 4FF02001 		mov   r1, #32       
 3352 0018 81F31188 		msr   basepri, r1  
 3353              		
 3354              	@ 0 "" 2
 3355              	.LVL322:
 3356              		.loc 1 1800 22 view .LVU994
1801:libraries/RTT/RTT/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 3357              		.loc 1 1801 5 view .LVU995
1802:libraries/RTT/RTT/SEGGER_RTT.c ****     pDown->sName = sName;
 3358              		.loc 1 1802 5 view .LVU996
 3359              		.loc 1 1802 18 is_stmt 0 view .LVU997
 3360              		.thumb
 3361              		.syntax unified
ARM GAS  /tmp/ccfEWiwI.s 			page 96


 3362 001c 04EB4404 		add	r4, r4, r4, lsl #1
 3363              	.LVL323:
 3364              		.loc 1 1802 18 view .LVU998
 3365 0020 0648     		ldr	r0, .L210
 3366 0022 00EBC404 		add	r4, r0, r4, lsl #3
 3367 0026 2566     		str	r5, [r4, #96]
1803:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3368              		.loc 1 1803 5 is_stmt 1 view .LVU999
 3369              		.syntax unified
 3370              	@ 1803 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3371 0028 83F31188 		msr   basepri, r3  
 3372              		
 3373              	@ 0 "" 2
 3374              		.thumb
 3375              		.syntax unified
 3376              	.LBE42:
 3377              		.loc 1 1803 24 view .LVU1000
1804:libraries/RTT/RTT/SEGGER_RTT.c ****     r =  0;
 3378              		.loc 1 1804 5 view .LVU1001
 3379              	.LVL324:
 3380              		.loc 1 1804 7 is_stmt 0 view .LVU1002
 3381 002c 0020     		movs	r0, #0
 3382              	.LVL325:
 3383              	.L204:
1805:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1806:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1807:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1808:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1809:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3384              		.loc 1 1809 1 view .LVU1003
 3385 002e 38BD     		pop	{r3, r4, r5, pc}
 3386              	.LVL326:
 3387              	.L209:
 3388              	.LBB43:
1797:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3389              		.loc 1 1797 3 is_stmt 1 discriminator 1 view .LVU1004
 3390 0030 FFF7FEFF 		bl	_DoInit
 3391              	.LVL327:
1797:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3392              		.loc 1 1797 3 is_stmt 0 discriminator 1 view .LVU1005
 3393 0034 EAE7     		b	.L205
 3394              	.LVL328:
 3395              	.L207:
1797:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3396              		.loc 1 1797 3 discriminator 1 view .LVU1006
 3397              	.LBE43:
1806:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 3398              		.loc 1 1806 7 view .LVU1007
 3399 0036 4FF0FF30 		mov	r0, #-1
 3400              	.LVL329:
1808:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3401              		.loc 1 1808 3 is_stmt 1 view .LVU1008
1808:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3402              		.loc 1 1808 10 is_stmt 0 view .LVU1009
 3403 003a F8E7     		b	.L204
 3404              	.L211:
 3405              		.align	2
ARM GAS  /tmp/ccfEWiwI.s 			page 97


 3406              	.L210:
 3407 003c 00000000 		.word	.LANCHOR0
 3408              		.cfi_endproc
 3409              	.LFE28:
 3411              		.section	.text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 3412              		.align	1
 3413              		.global	SEGGER_RTT_SetFlagsUpBuffer
 3414              		.syntax unified
 3415              		.thumb
 3416              		.thumb_func
 3417              		.fpu fpv4-sp-d16
 3419              	SEGGER_RTT_SetFlagsUpBuffer:
 3420              	.LVL330:
 3421              	.LFB29:
1810:libraries/RTT/RTT/SEGGER_RTT.c **** 
1811:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1812:libraries/RTT/RTT/SEGGER_RTT.c **** *
1813:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1814:libraries/RTT/RTT/SEGGER_RTT.c **** *
1815:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1816:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1817:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1818:libraries/RTT/RTT/SEGGER_RTT.c **** *
1819:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1820:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1821:libraries/RTT/RTT/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1822:libraries/RTT/RTT/SEGGER_RTT.c **** *
1823:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1824:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0  O.K.
1825:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0  Error
1826:libraries/RTT/RTT/SEGGER_RTT.c **** */
1827:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 3422              		.loc 1 1827 71 is_stmt 1 view -0
 3423              		.cfi_startproc
 3424              		@ args = 0, pretend = 0, frame = 0
 3425              		@ frame_needed = 0, uses_anonymous_args = 0
 3426              		.loc 1 1827 71 is_stmt 0 view .LVU1011
 3427 0000 38B5     		push	{r3, r4, r5, lr}
 3428              	.LCFI32:
 3429              		.cfi_def_cfa_offset 16
 3430              		.cfi_offset 3, -16
 3431              		.cfi_offset 4, -12
 3432              		.cfi_offset 5, -8
 3433              		.cfi_offset 14, -4
 3434 0002 0446     		mov	r4, r0
 3435 0004 0D46     		mov	r5, r1
1828:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 3436              		.loc 1 1828 3 is_stmt 1 view .LVU1012
1829:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3437              		.loc 1 1829 3 view .LVU1013
1830:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 3438              		.loc 1 1830 3 view .LVU1014
 3439              	.LBB44:
1831:libraries/RTT/RTT/SEGGER_RTT.c **** 
1832:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 3440              		.loc 1 1832 3 view .LVU1015
 3441              		.loc 1 1832 3 view .LVU1016
ARM GAS  /tmp/ccfEWiwI.s 			page 98


 3442              	.LVL331:
 3443              		.loc 1 1832 3 view .LVU1017
 3444              		.loc 1 1832 3 view .LVU1018
 3445 0006 0D4B     		ldr	r3, .L218
 3446 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3447 000a 8BB1     		cbz	r3, .L217
 3448              	.LVL332:
 3449              	.L213:
 3450              		.loc 1 1832 3 discriminator 3 view .LVU1019
 3451              	.LBE44:
 3452              		.loc 1 1832 9 discriminator 3 view .LVU1020
1833:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3453              		.loc 1 1833 3 discriminator 3 view .LVU1021
1834:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 3454              		.loc 1 1834 3 discriminator 3 view .LVU1022
 3455              		.loc 1 1834 6 is_stmt 0 discriminator 3 view .LVU1023
 3456 000c 022C     		cmp	r4, #2
 3457 000e 12D8     		bhi	.L215
 3458              	.LBB45:
1835:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3459              		.loc 1 1835 5 is_stmt 1 view .LVU1024
 3460              		.loc 1 1835 5 view .LVU1025
 3461              		.syntax unified
 3462              	@ 1835 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3463 0010 EFF31183 		mrs   r3, basepri  
 3464 0014 4FF02001 		mov   r1, #32       
 3465 0018 81F31188 		msr   basepri, r1  
 3466              		
 3467              	@ 0 "" 2
 3468              	.LVL333:
 3469              		.loc 1 1835 22 view .LVU1026
1836:libraries/RTT/RTT/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 3470              		.loc 1 1836 5 view .LVU1027
1837:libraries/RTT/RTT/SEGGER_RTT.c ****     pUp->Flags = Flags;
 3471              		.loc 1 1837 5 view .LVU1028
 3472              		.loc 1 1837 16 is_stmt 0 view .LVU1029
 3473              		.thumb
 3474              		.syntax unified
 3475 001c 04EB4404 		add	r4, r4, r4, lsl #1
 3476              	.LVL334:
 3477              		.loc 1 1837 16 view .LVU1030
 3478 0020 0648     		ldr	r0, .L218
 3479 0022 00EBC404 		add	r4, r0, r4, lsl #3
 3480 0026 E562     		str	r5, [r4, #44]
1838:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3481              		.loc 1 1838 5 is_stmt 1 view .LVU1031
 3482              		.syntax unified
 3483              	@ 1838 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3484 0028 83F31188 		msr   basepri, r3  
 3485              		
 3486              	@ 0 "" 2
 3487              		.thumb
 3488              		.syntax unified
 3489              	.LBE45:
 3490              		.loc 1 1838 24 view .LVU1032
1839:libraries/RTT/RTT/SEGGER_RTT.c ****     r =  0;
 3491              		.loc 1 1839 5 view .LVU1033
ARM GAS  /tmp/ccfEWiwI.s 			page 99


 3492              	.LVL335:
 3493              		.loc 1 1839 7 is_stmt 0 view .LVU1034
 3494 002c 0020     		movs	r0, #0
 3495              	.LVL336:
 3496              	.L212:
1840:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1841:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1842:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1843:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1844:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3497              		.loc 1 1844 1 view .LVU1035
 3498 002e 38BD     		pop	{r3, r4, r5, pc}
 3499              	.LVL337:
 3500              	.L217:
 3501              	.LBB46:
1832:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3502              		.loc 1 1832 3 is_stmt 1 discriminator 1 view .LVU1036
 3503 0030 FFF7FEFF 		bl	_DoInit
 3504              	.LVL338:
1832:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3505              		.loc 1 1832 3 is_stmt 0 discriminator 1 view .LVU1037
 3506 0034 EAE7     		b	.L213
 3507              	.LVL339:
 3508              	.L215:
1832:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3509              		.loc 1 1832 3 discriminator 1 view .LVU1038
 3510              	.LBE46:
1841:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 3511              		.loc 1 1841 7 view .LVU1039
 3512 0036 4FF0FF30 		mov	r0, #-1
 3513              	.LVL340:
1843:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3514              		.loc 1 1843 3 is_stmt 1 view .LVU1040
1843:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3515              		.loc 1 1843 10 is_stmt 0 view .LVU1041
 3516 003a F8E7     		b	.L212
 3517              	.L219:
 3518              		.align	2
 3519              	.L218:
 3520 003c 00000000 		.word	.LANCHOR0
 3521              		.cfi_endproc
 3522              	.LFE29:
 3524              		.section	.text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 3525              		.align	1
 3526              		.global	SEGGER_RTT_SetFlagsDownBuffer
 3527              		.syntax unified
 3528              		.thumb
 3529              		.thumb_func
 3530              		.fpu fpv4-sp-d16
 3532              	SEGGER_RTT_SetFlagsDownBuffer:
 3533              	.LVL341:
 3534              	.LFB30:
1845:libraries/RTT/RTT/SEGGER_RTT.c **** 
1846:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1847:libraries/RTT/RTT/SEGGER_RTT.c **** *
1848:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
1849:libraries/RTT/RTT/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccfEWiwI.s 			page 100


1850:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1851:libraries/RTT/RTT/SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1852:libraries/RTT/RTT/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1853:libraries/RTT/RTT/SEGGER_RTT.c **** *
1854:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1855:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1856:libraries/RTT/RTT/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1857:libraries/RTT/RTT/SEGGER_RTT.c **** *
1858:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1859:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0  O.K.
1860:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0  Error
1861:libraries/RTT/RTT/SEGGER_RTT.c **** */
1862:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 3535              		.loc 1 1862 73 is_stmt 1 view -0
 3536              		.cfi_startproc
 3537              		@ args = 0, pretend = 0, frame = 0
 3538              		@ frame_needed = 0, uses_anonymous_args = 0
 3539              		.loc 1 1862 73 is_stmt 0 view .LVU1043
 3540 0000 38B5     		push	{r3, r4, r5, lr}
 3541              	.LCFI33:
 3542              		.cfi_def_cfa_offset 16
 3543              		.cfi_offset 3, -16
 3544              		.cfi_offset 4, -12
 3545              		.cfi_offset 5, -8
 3546              		.cfi_offset 14, -4
 3547 0002 0446     		mov	r4, r0
 3548 0004 0D46     		mov	r5, r1
1863:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 3549              		.loc 1 1863 3 is_stmt 1 view .LVU1044
1864:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 3550              		.loc 1 1864 3 view .LVU1045
1865:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 3551              		.loc 1 1865 3 view .LVU1046
 3552              	.LBB47:
1866:libraries/RTT/RTT/SEGGER_RTT.c **** 
1867:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 3553              		.loc 1 1867 3 view .LVU1047
 3554              		.loc 1 1867 3 view .LVU1048
 3555              	.LVL342:
 3556              		.loc 1 1867 3 view .LVU1049
 3557              		.loc 1 1867 3 view .LVU1050
 3558 0006 0D4B     		ldr	r3, .L226
 3559 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3560 000a 8BB1     		cbz	r3, .L225
 3561              	.LVL343:
 3562              	.L221:
 3563              		.loc 1 1867 3 discriminator 3 view .LVU1051
 3564              	.LBE47:
 3565              		.loc 1 1867 9 discriminator 3 view .LVU1052
1868:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3566              		.loc 1 1868 3 discriminator 3 view .LVU1053
1869:libraries/RTT/RTT/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 3567              		.loc 1 1869 3 discriminator 3 view .LVU1054
 3568              		.loc 1 1869 6 is_stmt 0 discriminator 3 view .LVU1055
 3569 000c 022C     		cmp	r4, #2
 3570 000e 12D8     		bhi	.L223
 3571              	.LBB48:
ARM GAS  /tmp/ccfEWiwI.s 			page 101


1870:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3572              		.loc 1 1870 5 is_stmt 1 view .LVU1056
 3573              		.loc 1 1870 5 view .LVU1057
 3574              		.syntax unified
 3575              	@ 1870 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3576 0010 EFF31183 		mrs   r3, basepri  
 3577 0014 4FF02001 		mov   r1, #32       
 3578 0018 81F31188 		msr   basepri, r1  
 3579              		
 3580              	@ 0 "" 2
 3581              	.LVL344:
 3582              		.loc 1 1870 22 view .LVU1058
1871:libraries/RTT/RTT/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 3583              		.loc 1 1871 5 view .LVU1059
1872:libraries/RTT/RTT/SEGGER_RTT.c ****     pDown->Flags = Flags;
 3584              		.loc 1 1872 5 view .LVU1060
 3585              		.loc 1 1872 18 is_stmt 0 view .LVU1061
 3586              		.thumb
 3587              		.syntax unified
 3588 001c 04EB4404 		add	r4, r4, r4, lsl #1
 3589              	.LVL345:
 3590              		.loc 1 1872 18 view .LVU1062
 3591 0020 0648     		ldr	r0, .L226
 3592 0022 00EBC404 		add	r4, r0, r4, lsl #3
 3593 0026 6567     		str	r5, [r4, #116]
1873:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3594              		.loc 1 1873 5 is_stmt 1 view .LVU1063
 3595              		.syntax unified
 3596              	@ 1873 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3597 0028 83F31188 		msr   basepri, r3  
 3598              		
 3599              	@ 0 "" 2
 3600              		.thumb
 3601              		.syntax unified
 3602              	.LBE48:
 3603              		.loc 1 1873 24 view .LVU1064
1874:libraries/RTT/RTT/SEGGER_RTT.c ****     r =  0;
 3604              		.loc 1 1874 5 view .LVU1065
 3605              	.LVL346:
 3606              		.loc 1 1874 7 is_stmt 0 view .LVU1066
 3607 002c 0020     		movs	r0, #0
 3608              	.LVL347:
 3609              	.L220:
1875:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1876:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1877:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1878:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1879:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3610              		.loc 1 1879 1 view .LVU1067
 3611 002e 38BD     		pop	{r3, r4, r5, pc}
 3612              	.LVL348:
 3613              	.L225:
 3614              	.LBB49:
1867:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3615              		.loc 1 1867 3 is_stmt 1 discriminator 1 view .LVU1068
 3616 0030 FFF7FEFF 		bl	_DoInit
 3617              	.LVL349:
ARM GAS  /tmp/ccfEWiwI.s 			page 102


1867:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3618              		.loc 1 1867 3 is_stmt 0 discriminator 1 view .LVU1069
 3619 0034 EAE7     		b	.L221
 3620              	.LVL350:
 3621              	.L223:
1867:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 3622              		.loc 1 1867 3 discriminator 1 view .LVU1070
 3623              	.LBE49:
1876:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 3624              		.loc 1 1876 7 view .LVU1071
 3625 0036 4FF0FF30 		mov	r0, #-1
 3626              	.LVL351:
1878:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3627              		.loc 1 1878 3 is_stmt 1 view .LVU1072
1878:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3628              		.loc 1 1878 10 is_stmt 0 view .LVU1073
 3629 003a F8E7     		b	.L220
 3630              	.L227:
 3631              		.align	2
 3632              	.L226:
 3633 003c 00000000 		.word	.LANCHOR0
 3634              		.cfi_endproc
 3635              	.LFE30:
 3637              		.section	.text.SEGGER_RTT_Init,"ax",%progbits
 3638              		.align	1
 3639              		.global	SEGGER_RTT_Init
 3640              		.syntax unified
 3641              		.thumb
 3642              		.thumb_func
 3643              		.fpu fpv4-sp-d16
 3645              	SEGGER_RTT_Init:
 3646              	.LFB31:
1880:libraries/RTT/RTT/SEGGER_RTT.c **** 
1881:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1882:libraries/RTT/RTT/SEGGER_RTT.c **** *
1883:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_Init
1884:libraries/RTT/RTT/SEGGER_RTT.c **** *
1885:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1886:libraries/RTT/RTT/SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1887:libraries/RTT/RTT/SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1888:libraries/RTT/RTT/SEGGER_RTT.c **** *
1889:libraries/RTT/RTT/SEGGER_RTT.c **** */
1890:libraries/RTT/RTT/SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 3647              		.loc 1 1890 29 is_stmt 1 view -0
 3648              		.cfi_startproc
 3649              		@ args = 0, pretend = 0, frame = 0
 3650              		@ frame_needed = 0, uses_anonymous_args = 0
 3651 0000 08B5     		push	{r3, lr}
 3652              	.LCFI34:
 3653              		.cfi_def_cfa_offset 8
 3654              		.cfi_offset 3, -8
 3655              		.cfi_offset 14, -4
1891:libraries/RTT/RTT/SEGGER_RTT.c ****   _DoInit();
 3656              		.loc 1 1891 3 view .LVU1075
 3657 0002 FFF7FEFF 		bl	_DoInit
 3658              	.LVL352:
1892:libraries/RTT/RTT/SEGGER_RTT.c **** }
ARM GAS  /tmp/ccfEWiwI.s 			page 103


 3659              		.loc 1 1892 1 is_stmt 0 view .LVU1076
 3660 0006 08BD     		pop	{r3, pc}
 3661              		.cfi_endproc
 3662              	.LFE31:
 3664              		.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
 3665              		.align	1
 3666              		.global	SEGGER_RTT_SetTerminal
 3667              		.syntax unified
 3668              		.thumb
 3669              		.thumb_func
 3670              		.fpu fpv4-sp-d16
 3672              	SEGGER_RTT_SetTerminal:
 3673              	.LVL353:
 3674              	.LFB32:
1893:libraries/RTT/RTT/SEGGER_RTT.c **** 
1894:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1895:libraries/RTT/RTT/SEGGER_RTT.c **** *
1896:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1897:libraries/RTT/RTT/SEGGER_RTT.c **** *
1898:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1899:libraries/RTT/RTT/SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1900:libraries/RTT/RTT/SEGGER_RTT.c **** *
1901:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1902:libraries/RTT/RTT/SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1903:libraries/RTT/RTT/SEGGER_RTT.c **** *
1904:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1905:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0  O.K.
1906:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1907:libraries/RTT/RTT/SEGGER_RTT.c **** *
1908:libraries/RTT/RTT/SEGGER_RTT.c **** *  Notes
1909:libraries/RTT/RTT/SEGGER_RTT.c **** *    (1) Buffer 0 is always reserved for terminal I/O, so we can use index 0 here, fixed
1910:libraries/RTT/RTT/SEGGER_RTT.c **** */
1911:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (unsigned char TerminalId) {
 3675              		.loc 1 1911 55 is_stmt 1 view -0
 3676              		.cfi_startproc
 3677              		@ args = 0, pretend = 0, frame = 8
 3678              		@ frame_needed = 0, uses_anonymous_args = 0
 3679              		.loc 1 1911 55 is_stmt 0 view .LVU1078
 3680 0000 30B5     		push	{r4, r5, lr}
 3681              	.LCFI35:
 3682              		.cfi_def_cfa_offset 12
 3683              		.cfi_offset 4, -12
 3684              		.cfi_offset 5, -8
 3685              		.cfi_offset 14, -4
 3686 0002 83B0     		sub	sp, sp, #12
 3687              	.LCFI36:
 3688              		.cfi_def_cfa_offset 24
 3689 0004 0446     		mov	r4, r0
1912:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned char         ac[2];
 3690              		.loc 1 1912 3 is_stmt 1 view .LVU1079
1913:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 3691              		.loc 1 1913 3 view .LVU1080
1914:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned Avail;
 3692              		.loc 1 1914 3 view .LVU1081
1915:libraries/RTT/RTT/SEGGER_RTT.c ****   int r;
 3693              		.loc 1 1915 3 view .LVU1082
 3694              	.LBB50:
ARM GAS  /tmp/ccfEWiwI.s 			page 104


1916:libraries/RTT/RTT/SEGGER_RTT.c **** 
1917:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 3695              		.loc 1 1917 3 view .LVU1083
 3696              		.loc 1 1917 3 view .LVU1084
 3697              	.LVL354:
 3698              		.loc 1 1917 3 view .LVU1085
 3699              		.loc 1 1917 3 view .LVU1086
 3700 0006 1D4B     		ldr	r3, .L241
 3701 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3702 000a FBB1     		cbz	r3, .L238
 3703              	.LVL355:
 3704              	.L231:
 3705              		.loc 1 1917 3 discriminator 3 view .LVU1087
 3706              	.LBE50:
 3707              		.loc 1 1917 9 discriminator 3 view .LVU1088
1918:libraries/RTT/RTT/SEGGER_RTT.c ****   r = 0;
 3708              		.loc 1 1918 3 discriminator 3 view .LVU1089
1919:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3709              		.loc 1 1919 3 discriminator 3 view .LVU1090
 3710              		.loc 1 1919 9 is_stmt 0 discriminator 3 view .LVU1091
 3711 000c FF23     		movs	r3, #255
 3712 000e 8DF80430 		strb	r3, [sp, #4]
1920:libraries/RTT/RTT/SEGGER_RTT.c ****   if (TerminalId < sizeof(_aTerminalId)) { // We only support a certain number of channels
 3713              		.loc 1 1920 3 is_stmt 1 discriminator 3 view .LVU1092
 3714              		.loc 1 1920 6 is_stmt 0 discriminator 3 view .LVU1093
 3715 0012 0F2C     		cmp	r4, #15
 3716 0014 2FD8     		bhi	.L235
1921:libraries/RTT/RTT/SEGGER_RTT.c ****     ac[1] = _aTerminalId[TerminalId];
 3717              		.loc 1 1921 5 is_stmt 1 view .LVU1094
 3718              		.loc 1 1921 25 is_stmt 0 view .LVU1095
 3719 0016 1A4B     		ldr	r3, .L241+4
 3720 0018 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 3721              		.loc 1 1921 11 view .LVU1096
 3722 001a 8DF80530 		strb	r3, [sp, #5]
1922:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // Acce
 3723              		.loc 1 1922 5 is_stmt 1 view .LVU1097
 3724              	.LVL356:
 3725              	.LBB51:
1923:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();                     // Lock to make sure that no other task is writing into 
 3726              		.loc 1 1923 5 view .LVU1098
 3727              		.loc 1 1923 5 view .LVU1099
 3728              		.syntax unified
 3729              	@ 1923 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3730 001e EFF31185 		mrs   r5, basepri  
 3731 0022 4FF02001 		mov   r1, #32       
 3732 0026 81F31188 		msr   basepri, r1  
 3733              		
 3734              	@ 0 "" 2
 3735              	.LVL357:
 3736              		.loc 1 1923 22 view .LVU1100
1924:libraries/RTT/RTT/SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 3737              		.loc 1 1924 5 view .LVU1101
 3738              		.loc 1 1924 15 is_stmt 0 view .LVU1102
 3739              		.thumb
 3740              		.syntax unified
 3741 002a 144B     		ldr	r3, .L241
 3742 002c DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/ccfEWiwI.s 			page 105


 3743              		.loc 1 1924 23 view .LVU1103
 3744 002e 03F00303 		and	r3, r3, #3
 3745              		.loc 1 1924 8 view .LVU1104
 3746 0032 022B     		cmp	r3, #2
 3747 0034 0DD0     		beq	.L239
1925:libraries/RTT/RTT/SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
1926:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
1927:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {                                                                            // Skipping
1928:libraries/RTT/RTT/SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 3748              		.loc 1 1928 7 is_stmt 1 view .LVU1105
 3749              		.loc 1 1928 15 is_stmt 0 view .LVU1106
 3750 0036 1348     		ldr	r0, .L241+8
 3751 0038 FFF7FEFF 		bl	_GetAvailWriteSpace
 3752              	.LVL358:
1929:libraries/RTT/RTT/SEGGER_RTT.c ****       if (Avail >= 2) {
 3753              		.loc 1 1929 7 is_stmt 1 view .LVU1107
 3754              		.loc 1 1929 10 is_stmt 0 view .LVU1108
 3755 003c 0128     		cmp	r0, #1
 3756 003e 11D8     		bhi	.L240
1930:libraries/RTT/RTT/SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
1931:libraries/RTT/RTT/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
1932:libraries/RTT/RTT/SEGGER_RTT.c ****       } else {
1933:libraries/RTT/RTT/SEGGER_RTT.c ****         r = -1;
 3757              		.loc 1 1933 11 view .LVU1109
 3758 0040 4FF0FF30 		mov	r0, #-1
 3759              	.LVL359:
 3760              	.L234:
1934:libraries/RTT/RTT/SEGGER_RTT.c ****       }
1935:libraries/RTT/RTT/SEGGER_RTT.c ****     }
1936:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3761              		.loc 1 1936 5 is_stmt 1 view .LVU1110
 3762              		.syntax unified
 3763              	@ 1936 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3764 0044 85F31188 		msr   basepri, r5  
 3765              		
 3766              	@ 0 "" 2
 3767              		.thumb
 3768              		.syntax unified
 3769              	.LBE51:
 3770              		.loc 1 1936 24 view .LVU1111
 3771              	.LVL360:
 3772              	.L230:
1937:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
1938:libraries/RTT/RTT/SEGGER_RTT.c ****     r = -1;
1939:libraries/RTT/RTT/SEGGER_RTT.c ****   }
1940:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
1941:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3773              		.loc 1 1941 1 is_stmt 0 view .LVU1112
 3774 0048 03B0     		add	sp, sp, #12
 3775              	.LCFI37:
 3776              		.cfi_remember_state
 3777              		.cfi_def_cfa_offset 12
 3778              		@ sp needed
 3779 004a 30BD     		pop	{r4, r5, pc}
 3780              	.LVL361:
 3781              	.L238:
 3782              	.LCFI38:
ARM GAS  /tmp/ccfEWiwI.s 			page 106


 3783              		.cfi_restore_state
 3784              	.LBB52:
1917:libraries/RTT/RTT/SEGGER_RTT.c ****   r = 0;
 3785              		.loc 1 1917 3 is_stmt 1 discriminator 1 view .LVU1113
 3786 004c FFF7FEFF 		bl	_DoInit
 3787              	.LVL362:
1917:libraries/RTT/RTT/SEGGER_RTT.c ****   r = 0;
 3788              		.loc 1 1917 3 is_stmt 0 discriminator 1 view .LVU1114
 3789 0050 DCE7     		b	.L231
 3790              	.LVL363:
 3791              	.L239:
1917:libraries/RTT/RTT/SEGGER_RTT.c ****   r = 0;
 3792              		.loc 1 1917 3 discriminator 1 view .LVU1115
 3793              	.LBE52:
 3794              	.LBB53:
1925:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 3795              		.loc 1 1925 7 is_stmt 1 view .LVU1116
1925:libraries/RTT/RTT/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 3796              		.loc 1 1925 23 is_stmt 0 view .LVU1117
 3797 0052 0D4B     		ldr	r3, .L241+12
 3798 0054 1C70     		strb	r4, [r3]
1926:libraries/RTT/RTT/SEGGER_RTT.c ****     } else {                                                                            // Skipping
 3799              		.loc 1 1926 7 is_stmt 1 view .LVU1118
 3800 0056 0222     		movs	r2, #2
 3801 0058 01A9     		add	r1, sp, #4
 3802 005a 0A48     		ldr	r0, .L241+8
 3803 005c FFF7FEFF 		bl	_WriteBlocking
 3804              	.LVL364:
 3805              	.LBE53:
1918:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3806              		.loc 1 1918 5 is_stmt 0 view .LVU1119
 3807 0060 0020     		movs	r0, #0
 3808              	.LBB54:
 3809 0062 EFE7     		b	.L234
 3810              	.LVL365:
 3811              	.L240:
1930:libraries/RTT/RTT/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 3812              		.loc 1 1930 9 is_stmt 1 view .LVU1120
1930:libraries/RTT/RTT/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 3813              		.loc 1 1930 25 is_stmt 0 view .LVU1121
 3814 0064 084B     		ldr	r3, .L241+12
 3815 0066 1C70     		strb	r4, [r3]
1931:libraries/RTT/RTT/SEGGER_RTT.c ****       } else {
 3816              		.loc 1 1931 9 is_stmt 1 view .LVU1122
 3817 0068 0222     		movs	r2, #2
 3818 006a 01A9     		add	r1, sp, #4
 3819 006c 0548     		ldr	r0, .L241+8
 3820              	.LVL366:
1931:libraries/RTT/RTT/SEGGER_RTT.c ****       } else {
 3821              		.loc 1 1931 9 is_stmt 0 view .LVU1123
 3822 006e FFF7FEFF 		bl	_WriteNoCheck
 3823              	.LVL367:
 3824              	.LBE54:
1918:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3825              		.loc 1 1918 5 view .LVU1124
 3826 0072 0020     		movs	r0, #0
 3827              	.LBB55:
ARM GAS  /tmp/ccfEWiwI.s 			page 107


 3828 0074 E6E7     		b	.L234
 3829              	.LVL368:
 3830              	.L235:
1918:libraries/RTT/RTT/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3831              		.loc 1 1918 5 view .LVU1125
 3832              	.LBE55:
1938:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 3833              		.loc 1 1938 7 view .LVU1126
 3834 0076 4FF0FF30 		mov	r0, #-1
 3835              	.LVL369:
1940:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3836              		.loc 1 1940 3 is_stmt 1 view .LVU1127
1940:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3837              		.loc 1 1940 10 is_stmt 0 view .LVU1128
 3838 007a E5E7     		b	.L230
 3839              	.L242:
 3840              		.align	2
 3841              	.L241:
 3842 007c 00000000 		.word	.LANCHOR0
 3843 0080 00000000 		.word	.LANCHOR4
 3844 0084 18000000 		.word	.LANCHOR0+24
 3845 0088 00000000 		.word	.LANCHOR5
 3846              		.cfi_endproc
 3847              	.LFE32:
 3849              		.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
 3850              		.align	1
 3851              		.global	SEGGER_RTT_TerminalOut
 3852              		.syntax unified
 3853              		.thumb
 3854              		.thumb_func
 3855              		.fpu fpv4-sp-d16
 3857              	SEGGER_RTT_TerminalOut:
 3858              	.LVL370:
 3859              	.LFB33:
1942:libraries/RTT/RTT/SEGGER_RTT.c **** 
1943:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
1944:libraries/RTT/RTT/SEGGER_RTT.c **** *
1945:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1946:libraries/RTT/RTT/SEGGER_RTT.c **** *
1947:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
1948:libraries/RTT/RTT/SEGGER_RTT.c **** *    Writes a string to the given terminal
1949:libraries/RTT/RTT/SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1950:libraries/RTT/RTT/SEGGER_RTT.c **** *
1951:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
1952:libraries/RTT/RTT/SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1953:libraries/RTT/RTT/SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1954:libraries/RTT/RTT/SEGGER_RTT.c **** *
1955:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
1956:libraries/RTT/RTT/SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1957:libraries/RTT/RTT/SEGGER_RTT.c **** *     < 0 - Error.
1958:libraries/RTT/RTT/SEGGER_RTT.c **** *
1959:libraries/RTT/RTT/SEGGER_RTT.c **** */
1960:libraries/RTT/RTT/SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (unsigned char TerminalId, const char* s) {
 3860              		.loc 1 1960 70 is_stmt 1 view -0
 3861              		.cfi_startproc
 3862              		@ args = 0, pretend = 0, frame = 0
 3863              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccfEWiwI.s 			page 108


 3864              		.loc 1 1960 70 is_stmt 0 view .LVU1130
 3865 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3866              	.LCFI39:
 3867              		.cfi_def_cfa_offset 32
 3868              		.cfi_offset 3, -32
 3869              		.cfi_offset 4, -28
 3870              		.cfi_offset 5, -24
 3871              		.cfi_offset 6, -20
 3872              		.cfi_offset 7, -16
 3873              		.cfi_offset 8, -12
 3874              		.cfi_offset 9, -8
 3875              		.cfi_offset 14, -4
 3876 0004 0446     		mov	r4, r0
 3877 0006 0D46     		mov	r5, r1
1961:libraries/RTT/RTT/SEGGER_RTT.c ****   int                   Status;
 3878              		.loc 1 1961 3 is_stmt 1 view .LVU1131
1962:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              FragLen;
 3879              		.loc 1 1962 3 view .LVU1132
1963:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned              Avail;
 3880              		.loc 1 1963 3 view .LVU1133
1964:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 3881              		.loc 1 1964 3 view .LVU1134
 3882              	.LBB56:
1965:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1966:libraries/RTT/RTT/SEGGER_RTT.c ****   INIT();
 3883              		.loc 1 1966 3 view .LVU1135
 3884              		.loc 1 1966 3 view .LVU1136
 3885              	.LVL371:
 3886              		.loc 1 1966 3 view .LVU1137
 3887              		.loc 1 1966 3 view .LVU1138
 3888 0008 354B     		ldr	r3, .L258
 3889 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3890 000c 03B3     		cbz	r3, .L254
 3891              	.LVL372:
 3892              	.L244:
 3893              		.loc 1 1966 3 discriminator 3 view .LVU1139
 3894              	.LBE56:
 3895              		.loc 1 1966 9 discriminator 3 view .LVU1140
1967:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1968:libraries/RTT/RTT/SEGGER_RTT.c ****   // Validate terminal ID.
1969:libraries/RTT/RTT/SEGGER_RTT.c ****   //
1970:libraries/RTT/RTT/SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 3896              		.loc 1 1970 3 discriminator 3 view .LVU1141
 3897              		.loc 1 1970 6 is_stmt 0 discriminator 3 view .LVU1142
 3898 000e 0F2C     		cmp	r4, #15
 3899 0010 63D8     		bhi	.L249
1971:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1972:libraries/RTT/RTT/SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1973:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1974:libraries/RTT/RTT/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // Acce
 3900              		.loc 1 1974 5 is_stmt 1 view .LVU1143
 3901              	.LVL373:
1975:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1976:libraries/RTT/RTT/SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1977:libraries/RTT/RTT/SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1978:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1979:libraries/RTT/RTT/SEGGER_RTT.c ****     FragLen = STRLEN(s);
ARM GAS  /tmp/ccfEWiwI.s 			page 109


 3902              		.loc 1 1979 5 view .LVU1144
 3903              		.loc 1 1979 15 is_stmt 0 view .LVU1145
 3904 0012 2846     		mov	r0, r5
 3905 0014 FFF7FEFF 		bl	strlen
 3906              	.LVL374:
 3907 0018 8046     		mov	r8, r0
 3908              	.LVL375:
 3909              	.LBB57:
1980:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1981:libraries/RTT/RTT/SEGGER_RTT.c ****     // How we output depends upon the mode...
1982:libraries/RTT/RTT/SEGGER_RTT.c ****     //
1983:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3910              		.loc 1 1983 5 is_stmt 1 view .LVU1146
 3911              		.loc 1 1983 5 view .LVU1147
 3912              		.syntax unified
 3913              	@ 1983 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3914 001a EFF31186 		mrs   r6, basepri  
 3915 001e 4FF02001 		mov   r1, #32       
 3916 0022 81F31188 		msr   basepri, r1  
 3917              		
 3918              	@ 0 "" 2
 3919              	.LVL376:
 3920              		.loc 1 1983 22 view .LVU1148
1984:libraries/RTT/RTT/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 3921              		.loc 1 1984 5 view .LVU1149
 3922              		.loc 1 1984 13 is_stmt 0 view .LVU1150
 3923              		.thumb
 3924              		.syntax unified
 3925 0026 2E4F     		ldr	r7, .L258
 3926 0028 07F11800 		add	r0, r7, #24
 3927              	.LVL377:
 3928              		.loc 1 1984 13 view .LVU1151
 3929 002c FFF7FEFF 		bl	_GetAvailWriteSpace
 3930              	.LVL378:
 3931 0030 8146     		mov	r9, r0
 3932              	.LVL379:
1985:libraries/RTT/RTT/SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 3933              		.loc 1 1985 5 is_stmt 1 view .LVU1152
 3934              		.loc 1 1985 18 is_stmt 0 view .LVU1153
 3935 0032 FB6A     		ldr	r3, [r7, #44]
 3936              		.loc 1 1985 26 view .LVU1154
 3937 0034 03F00303 		and	r3, r3, #3
 3938              		.loc 1 1985 5 view .LVU1155
 3939 0038 012B     		cmp	r3, #1
 3940 003a 23D0     		beq	.L246
 3941 003c 022B     		cmp	r3, #2
 3942 003e 3BD0     		beq	.L247
 3943 0040 4BB1     		cbz	r3, .L255
 3944 0042 4FF0FF34 		mov	r4, #-1
 3945              	.LVL380:
 3946              	.L248:
1986:libraries/RTT/RTT/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1987:libraries/RTT/RTT/SEGGER_RTT.c ****       //
1988:libraries/RTT/RTT/SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1989:libraries/RTT/RTT/SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1990:libraries/RTT/RTT/SEGGER_RTT.c ****       //
1991:libraries/RTT/RTT/SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
ARM GAS  /tmp/ccfEWiwI.s 			page 110


1992:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = 0;
1993:libraries/RTT/RTT/SEGGER_RTT.c ****       } else {
1994:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1995:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
1996:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1997:libraries/RTT/RTT/SEGGER_RTT.c ****       }
1998:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
1999:libraries/RTT/RTT/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
2000:libraries/RTT/RTT/SEGGER_RTT.c ****       //
2001:libraries/RTT/RTT/SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
2002:libraries/RTT/RTT/SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
2003:libraries/RTT/RTT/SEGGER_RTT.c ****       // for terminal switch, skip that totally.
2004:libraries/RTT/RTT/SEGGER_RTT.c ****       //
2005:libraries/RTT/RTT/SEGGER_RTT.c ****       if (Avail < 4u) {
2006:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = -1;
2007:libraries/RTT/RTT/SEGGER_RTT.c ****       } else {
2008:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
2009:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
2010:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
2011:libraries/RTT/RTT/SEGGER_RTT.c ****       }
2012:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
2013:libraries/RTT/RTT/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
2014:libraries/RTT/RTT/SEGGER_RTT.c ****       //
2015:libraries/RTT/RTT/SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
2016:libraries/RTT/RTT/SEGGER_RTT.c ****       //
2017:libraries/RTT/RTT/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
2018:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
2019:libraries/RTT/RTT/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
2020:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
2021:libraries/RTT/RTT/SEGGER_RTT.c ****     default:
2022:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = -1;
2023:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
2024:libraries/RTT/RTT/SEGGER_RTT.c ****     }
2025:libraries/RTT/RTT/SEGGER_RTT.c ****     //
2026:libraries/RTT/RTT/SEGGER_RTT.c ****     // Finish up.
2027:libraries/RTT/RTT/SEGGER_RTT.c ****     //
2028:libraries/RTT/RTT/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3947              		.loc 1 2028 5 is_stmt 1 view .LVU1156
 3948              		.syntax unified
 3949              	@ 2028 "libraries/RTT/RTT/SEGGER_RTT.c" 1
 3950 0046 86F31188 		msr   basepri, r6  
 3951              		
 3952              	@ 0 "" 2
 3953              		.thumb
 3954              		.syntax unified
 3955              	.LBE57:
 3956              		.loc 1 2028 24 view .LVU1157
 3957              	.LVL381:
 3958              	.L243:
2029:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
2030:libraries/RTT/RTT/SEGGER_RTT.c ****     Status = -1;
2031:libraries/RTT/RTT/SEGGER_RTT.c ****   }
2032:libraries/RTT/RTT/SEGGER_RTT.c ****   return Status;
2033:libraries/RTT/RTT/SEGGER_RTT.c **** }
 3959              		.loc 1 2033 1 is_stmt 0 view .LVU1158
 3960 004a 2046     		mov	r0, r4
 3961 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccfEWiwI.s 			page 111


 3962              	.LVL382:
 3963              	.L254:
 3964              	.LBB58:
1966:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 3965              		.loc 1 1966 3 is_stmt 1 discriminator 1 view .LVU1159
 3966 0050 FFF7FEFF 		bl	_DoInit
 3967              	.LVL383:
1966:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 3968              		.loc 1 1966 3 is_stmt 0 discriminator 1 view .LVU1160
 3969 0054 DBE7     		b	.L244
 3970              	.LVL384:
 3971              	.L255:
1966:libraries/RTT/RTT/SEGGER_RTT.c ****   //
 3972              		.loc 1 1966 3 discriminator 1 view .LVU1161
 3973              	.LBE58:
 3974              	.LBB59:
1991:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = 0;
 3975              		.loc 1 1991 7 is_stmt 1 view .LVU1162
1991:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = 0;
 3976              		.loc 1 1991 28 is_stmt 0 view .LVU1163
 3977 0056 08F10403 		add	r3, r8, #4
1991:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = 0;
 3978              		.loc 1 1991 10 view .LVU1164
 3979 005a 8342     		cmp	r3, r0
 3980 005c 01D9     		bls	.L256
1992:libraries/RTT/RTT/SEGGER_RTT.c ****       } else {
 3981              		.loc 1 1992 16 view .LVU1165
 3982 005e 0024     		movs	r4, #0
 3983 0060 F1E7     		b	.L248
 3984              	.L256:
1994:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 3985              		.loc 1 1994 9 is_stmt 1 view .LVU1166
 3986 0062 1837     		adds	r7, r7, #24
 3987 0064 2146     		mov	r1, r4
 3988 0066 3846     		mov	r0, r7
 3989              	.LVL385:
1994:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 3990              		.loc 1 1994 9 is_stmt 0 view .LVU1167
 3991 0068 FFF7FEFF 		bl	_PostTerminalSwitch
 3992              	.LVL386:
1995:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3993              		.loc 1 1995 9 is_stmt 1 view .LVU1168
1995:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3994              		.loc 1 1995 23 is_stmt 0 view .LVU1169
 3995 006c 4246     		mov	r2, r8
 3996 006e 2946     		mov	r1, r5
 3997 0070 3846     		mov	r0, r7
 3998 0072 FFF7FEFF 		bl	_WriteBlocking
 3999              	.LVL387:
 4000 0076 0446     		mov	r4, r0
 4001              	.LVL388:
1996:libraries/RTT/RTT/SEGGER_RTT.c ****       }
 4002              		.loc 1 1996 9 is_stmt 1 view .LVU1170
 4003 0078 1A4B     		ldr	r3, .L258+4
 4004 007a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4005 007c 3846     		mov	r0, r7
 4006              	.LVL389:
ARM GAS  /tmp/ccfEWiwI.s 			page 112


1996:libraries/RTT/RTT/SEGGER_RTT.c ****       }
 4007              		.loc 1 1996 9 is_stmt 0 view .LVU1171
 4008 007e FFF7FEFF 		bl	_PostTerminalSwitch
 4009              	.LVL390:
 4010 0082 E0E7     		b	.L248
 4011              	.LVL391:
 4012              	.L246:
2005:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = -1;
 4013              		.loc 1 2005 7 is_stmt 1 view .LVU1172
2005:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = -1;
 4014              		.loc 1 2005 10 is_stmt 0 view .LVU1173
 4015 0084 0328     		cmp	r0, #3
 4016 0086 02D8     		bhi	.L257
2006:libraries/RTT/RTT/SEGGER_RTT.c ****       } else {
 4017              		.loc 1 2006 16 view .LVU1174
 4018 0088 4FF0FF34 		mov	r4, #-1
 4019 008c DBE7     		b	.L248
 4020              	.L257:
2008:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 4021              		.loc 1 2008 9 is_stmt 1 view .LVU1175
 4022 008e 164F     		ldr	r7, .L258+8
 4023 0090 2146     		mov	r1, r4
 4024 0092 3846     		mov	r0, r7
 4025              	.LVL392:
2008:libraries/RTT/RTT/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 4026              		.loc 1 2008 9 is_stmt 0 view .LVU1176
 4027 0094 FFF7FEFF 		bl	_PostTerminalSwitch
 4028              	.LVL393:
2009:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4029              		.loc 1 2009 9 is_stmt 1 view .LVU1177
2009:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4030              		.loc 1 2009 66 is_stmt 0 view .LVU1178
 4031 0098 A9F10402 		sub	r2, r9, #4
2009:libraries/RTT/RTT/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4032              		.loc 1 2009 23 view .LVU1179
 4033 009c 4245     		cmp	r2, r8
 4034 009e 28BF     		it	cs
 4035 00a0 4246     		movcs	r2, r8
 4036 00a2 2946     		mov	r1, r5
 4037 00a4 3846     		mov	r0, r7
 4038 00a6 FFF7FEFF 		bl	_WriteBlocking
 4039              	.LVL394:
 4040 00aa 0446     		mov	r4, r0
 4041              	.LVL395:
2010:libraries/RTT/RTT/SEGGER_RTT.c ****       }
 4042              		.loc 1 2010 9 is_stmt 1 view .LVU1180
 4043 00ac 0D4B     		ldr	r3, .L258+4
 4044 00ae 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4045 00b0 3846     		mov	r0, r7
 4046              	.LVL396:
2010:libraries/RTT/RTT/SEGGER_RTT.c ****       }
 4047              		.loc 1 2010 9 is_stmt 0 view .LVU1181
 4048 00b2 FFF7FEFF 		bl	_PostTerminalSwitch
 4049              	.LVL397:
 4050 00b6 C6E7     		b	.L248
 4051              	.LVL398:
 4052              	.L247:
ARM GAS  /tmp/ccfEWiwI.s 			page 113


2017:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 4053              		.loc 1 2017 7 is_stmt 1 view .LVU1182
 4054 00b8 0B4F     		ldr	r7, .L258+8
 4055 00ba 2146     		mov	r1, r4
 4056 00bc 3846     		mov	r0, r7
 4057              	.LVL399:
2017:libraries/RTT/RTT/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 4058              		.loc 1 2017 7 is_stmt 0 view .LVU1183
 4059 00be FFF7FEFF 		bl	_PostTerminalSwitch
 4060              	.LVL400:
2018:libraries/RTT/RTT/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 4061              		.loc 1 2018 7 is_stmt 1 view .LVU1184
2018:libraries/RTT/RTT/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 4062              		.loc 1 2018 21 is_stmt 0 view .LVU1185
 4063 00c2 4246     		mov	r2, r8
 4064 00c4 2946     		mov	r1, r5
 4065 00c6 3846     		mov	r0, r7
 4066 00c8 FFF7FEFF 		bl	_WriteBlocking
 4067              	.LVL401:
 4068 00cc 0446     		mov	r4, r0
 4069              	.LVL402:
2019:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
 4070              		.loc 1 2019 7 is_stmt 1 view .LVU1186
 4071 00ce 054B     		ldr	r3, .L258+4
 4072 00d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4073 00d2 3846     		mov	r0, r7
 4074              	.LVL403:
2019:libraries/RTT/RTT/SEGGER_RTT.c ****       break;
 4075              		.loc 1 2019 7 is_stmt 0 view .LVU1187
 4076 00d4 FFF7FEFF 		bl	_PostTerminalSwitch
 4077              	.LVL404:
2020:libraries/RTT/RTT/SEGGER_RTT.c ****     default:
 4078              		.loc 1 2020 7 is_stmt 1 view .LVU1188
 4079 00d8 B5E7     		b	.L248
 4080              	.LVL405:
 4081              	.L249:
2020:libraries/RTT/RTT/SEGGER_RTT.c ****     default:
 4082              		.loc 1 2020 7 is_stmt 0 view .LVU1189
 4083              	.LBE59:
2030:libraries/RTT/RTT/SEGGER_RTT.c ****   }
 4084              		.loc 1 2030 12 view .LVU1190
 4085 00da 4FF0FF34 		mov	r4, #-1
 4086              	.LVL406:
2032:libraries/RTT/RTT/SEGGER_RTT.c **** }
 4087              		.loc 1 2032 3 is_stmt 1 view .LVU1191
2032:libraries/RTT/RTT/SEGGER_RTT.c **** }
 4088              		.loc 1 2032 10 is_stmt 0 view .LVU1192
 4089 00de B4E7     		b	.L243
 4090              	.L259:
 4091              		.align	2
 4092              	.L258:
 4093 00e0 00000000 		.word	.LANCHOR0
 4094 00e4 00000000 		.word	.LANCHOR5
 4095 00e8 18000000 		.word	.LANCHOR0+24
 4096              		.cfi_endproc
 4097              	.LFE33:
 4099              		.section	.text.SEGGER_RTT_GetAvailWriteSpace,"ax",%progbits
ARM GAS  /tmp/ccfEWiwI.s 			page 114


 4100              		.align	1
 4101              		.global	SEGGER_RTT_GetAvailWriteSpace
 4102              		.syntax unified
 4103              		.thumb
 4104              		.thumb_func
 4105              		.fpu fpv4-sp-d16
 4107              	SEGGER_RTT_GetAvailWriteSpace:
 4108              	.LVL407:
 4109              	.LFB34:
2034:libraries/RTT/RTT/SEGGER_RTT.c **** 
2035:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
2036:libraries/RTT/RTT/SEGGER_RTT.c **** *
2037:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_GetAvailWriteSpace
2038:libraries/RTT/RTT/SEGGER_RTT.c **** *
2039:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
2040:libraries/RTT/RTT/SEGGER_RTT.c **** *    Returns the number of bytes available in the ring buffer.
2041:libraries/RTT/RTT/SEGGER_RTT.c **** *
2042:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
2043:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2044:libraries/RTT/RTT/SEGGER_RTT.c **** *
2045:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
2046:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes that are free in the selected up buffer.
2047:libraries/RTT/RTT/SEGGER_RTT.c **** */
2048:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetAvailWriteSpace (unsigned BufferIndex) {
 4110              		.loc 1 2048 63 is_stmt 1 view -0
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 0
 4113              		@ frame_needed = 0, uses_anonymous_args = 0
 4114              		.loc 1 2048 63 is_stmt 0 view .LVU1194
 4115 0000 08B5     		push	{r3, lr}
 4116              	.LCFI40:
 4117              		.cfi_def_cfa_offset 8
 4118              		.cfi_offset 3, -8
 4119              		.cfi_offset 14, -4
2049:libraries/RTT/RTT/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 4120              		.loc 1 2049 3 is_stmt 1 view .LVU1195
2050:libraries/RTT/RTT/SEGGER_RTT.c **** 
2051:libraries/RTT/RTT/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 4121              		.loc 1 2051 3 view .LVU1196
 4122              		.loc 1 2051 9 is_stmt 0 view .LVU1197
 4123 0002 0130     		adds	r0, r0, #1
 4124              	.LVL408:
 4125              		.loc 1 2051 9 view .LVU1198
 4126 0004 00EB4000 		add	r0, r0, r0, lsl #1
 4127              	.LVL409:
2052:libraries/RTT/RTT/SEGGER_RTT.c ****   return _GetAvailWriteSpace(pRing);
 4128              		.loc 1 2052 3 is_stmt 1 view .LVU1199
 4129              		.loc 1 2052 10 is_stmt 0 view .LVU1200
 4130 0008 024B     		ldr	r3, .L262
 4131 000a 03EBC000 		add	r0, r3, r0, lsl #3
 4132              	.LVL410:
 4133              		.loc 1 2052 10 view .LVU1201
 4134 000e FFF7FEFF 		bl	_GetAvailWriteSpace
 4135              	.LVL411:
2053:libraries/RTT/RTT/SEGGER_RTT.c **** }
 4136              		.loc 1 2053 1 view .LVU1202
 4137 0012 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccfEWiwI.s 			page 115


 4138              	.L263:
 4139              		.align	2
 4140              	.L262:
 4141 0014 00000000 		.word	.LANCHOR0
 4142              		.cfi_endproc
 4143              	.LFE34:
 4145              		.section	.text.SEGGER_RTT_GetBytesInBuffer,"ax",%progbits
 4146              		.align	1
 4147              		.global	SEGGER_RTT_GetBytesInBuffer
 4148              		.syntax unified
 4149              		.thumb
 4150              		.thumb_func
 4151              		.fpu fpv4-sp-d16
 4153              	SEGGER_RTT_GetBytesInBuffer:
 4154              	.LVL412:
 4155              	.LFB35:
2054:libraries/RTT/RTT/SEGGER_RTT.c **** 
2055:libraries/RTT/RTT/SEGGER_RTT.c **** 
2056:libraries/RTT/RTT/SEGGER_RTT.c **** /*********************************************************************
2057:libraries/RTT/RTT/SEGGER_RTT.c **** *
2058:libraries/RTT/RTT/SEGGER_RTT.c **** *       SEGGER_RTT_GetBytesInBuffer()
2059:libraries/RTT/RTT/SEGGER_RTT.c **** *
2060:libraries/RTT/RTT/SEGGER_RTT.c **** *  Function description
2061:libraries/RTT/RTT/SEGGER_RTT.c **** *    Returns the number of bytes currently used in the up buffer.
2062:libraries/RTT/RTT/SEGGER_RTT.c **** *
2063:libraries/RTT/RTT/SEGGER_RTT.c **** *  Parameters
2064:libraries/RTT/RTT/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2065:libraries/RTT/RTT/SEGGER_RTT.c **** *
2066:libraries/RTT/RTT/SEGGER_RTT.c **** *  Return value
2067:libraries/RTT/RTT/SEGGER_RTT.c **** *    Number of bytes that are used in the buffer.
2068:libraries/RTT/RTT/SEGGER_RTT.c **** */
2069:libraries/RTT/RTT/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetBytesInBuffer(unsigned BufferIndex) {
 4156              		.loc 1 2069 60 is_stmt 1 view -0
 4157              		.cfi_startproc
 4158              		@ args = 0, pretend = 0, frame = 0
 4159              		@ frame_needed = 0, uses_anonymous_args = 0
 4160              		@ link register save eliminated.
2070:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned RdOff;
 4161              		.loc 1 2070 3 view .LVU1204
2071:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned WrOff;
 4162              		.loc 1 2071 3 view .LVU1205
2072:libraries/RTT/RTT/SEGGER_RTT.c ****   unsigned r;
 4163              		.loc 1 2072 3 view .LVU1206
2073:libraries/RTT/RTT/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 4164              		.loc 1 2073 3 view .LVU1207
2074:libraries/RTT/RTT/SEGGER_RTT.c ****   //
2075:libraries/RTT/RTT/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
2076:libraries/RTT/RTT/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
2077:libraries/RTT/RTT/SEGGER_RTT.c ****   //
2078:libraries/RTT/RTT/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 4165              		.loc 1 2078 3 view .LVU1208
2079:libraries/RTT/RTT/SEGGER_RTT.c ****   RdOff = pRTTCB->aUp[BufferIndex].RdOff;
 4166              		.loc 1 2079 3 view .LVU1209
 4167              		.loc 1 2079 9 is_stmt 0 view .LVU1210
 4168 0000 00EB4002 		add	r2, r0, r0, lsl #1
 4169 0004 084B     		ldr	r3, .L267
 4170 0006 03EBC203 		add	r3, r3, r2, lsl #3
ARM GAS  /tmp/ccfEWiwI.s 			page 116


 4171 000a 9A6A     		ldr	r2, [r3, #40]
 4172              	.LVL413:
2080:libraries/RTT/RTT/SEGGER_RTT.c ****   WrOff = pRTTCB->aUp[BufferIndex].WrOff;
 4173              		.loc 1 2080 3 is_stmt 1 view .LVU1211
 4174              		.loc 1 2080 9 is_stmt 0 view .LVU1212
 4175 000c 5B6A     		ldr	r3, [r3, #36]
 4176              	.LVL414:
2081:libraries/RTT/RTT/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4177              		.loc 1 2081 3 is_stmt 1 view .LVU1213
 4178              		.loc 1 2081 6 is_stmt 0 view .LVU1214
 4179 000e 9A42     		cmp	r2, r3
 4180 0010 01D8     		bhi	.L265
2082:libraries/RTT/RTT/SEGGER_RTT.c ****     r = WrOff - RdOff;
 4181              		.loc 1 2082 5 is_stmt 1 view .LVU1215
 4182              		.loc 1 2082 7 is_stmt 0 view .LVU1216
 4183 0012 981A     		subs	r0, r3, r2
 4184              	.LVL415:
 4185              		.loc 1 2082 7 view .LVU1217
 4186 0014 7047     		bx	lr
 4187              	.LVL416:
 4188              	.L265:
2083:libraries/RTT/RTT/SEGGER_RTT.c ****   } else {
2084:libraries/RTT/RTT/SEGGER_RTT.c ****     r = pRTTCB->aUp[BufferIndex].SizeOfBuffer - (WrOff - RdOff);
 4189              		.loc 1 2084 5 is_stmt 1 view .LVU1218
 4190              		.loc 1 2084 33 is_stmt 0 view .LVU1219
 4191 0016 00EB4000 		add	r0, r0, r0, lsl #1
 4192              	.LVL417:
 4193              		.loc 1 2084 33 view .LVU1220
 4194 001a 0349     		ldr	r1, .L267
 4195 001c 01EBC000 		add	r0, r1, r0, lsl #3
 4196 0020 006A     		ldr	r0, [r0, #32]
 4197              		.loc 1 2084 47 view .LVU1221
 4198 0022 D21A     		subs	r2, r2, r3
 4199              	.LVL418:
 4200              		.loc 1 2084 7 view .LVU1222
 4201 0024 1044     		add	r0, r0, r2
 4202              	.LVL419:
2085:libraries/RTT/RTT/SEGGER_RTT.c ****   }
2086:libraries/RTT/RTT/SEGGER_RTT.c ****   return r;
 4203              		.loc 1 2086 3 is_stmt 1 view .LVU1223
2087:libraries/RTT/RTT/SEGGER_RTT.c **** }
 4204              		.loc 1 2087 1 is_stmt 0 view .LVU1224
 4205 0026 7047     		bx	lr
 4206              	.L268:
 4207              		.align	2
 4208              	.L267:
 4209 0028 00000000 		.word	.LANCHOR0
 4210              		.cfi_endproc
 4211              	.LFE35:
 4213              		.global	_SEGGER_RTT
 4214              		.section	.bss._ActiveTerminal,"aw",%nobits
 4215              		.set	.LANCHOR5,. + 0
 4218              	_ActiveTerminal:
 4219 0000 00       		.space	1
 4220              		.section	.bss._SEGGER_RTT,"aw",%nobits
 4221              		.align	2
 4222              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccfEWiwI.s 			page 117


 4225              	_SEGGER_RTT:
 4226 0000 00000000 		.space	168
 4226      00000000 
 4226      00000000 
 4226      00000000 
 4226      00000000 
 4227              		.section	.bss._acDownBuffer,"aw",%nobits
 4228              		.align	2
 4229              		.set	.LANCHOR2,. + 0
 4232              	_acDownBuffer:
 4233 0000 00000000 		.space	16
 4233      00000000 
 4233      00000000 
 4233      00000000 
 4234              		.section	.bss._acUpBuffer,"aw",%nobits
 4235              		.align	2
 4236              		.set	.LANCHOR1,. + 0
 4239              	_acUpBuffer:
 4240 0000 00000000 		.space	1024
 4240      00000000 
 4240      00000000 
 4240      00000000 
 4240      00000000 
 4241              		.section	.rodata._aInitStr.0,"a"
 4242              		.align	2
 4243              		.set	.LANCHOR3,. + 0
 4246              	_aInitStr.0:
 4247 0000 00000000 		.ascii	"\000\000\000\000\000\000TTR REGGES\000"
 4247      00005454 
 4247      52205245 
 4247      47474553 
 4247      00
 4248              		.section	.rodata._aTerminalId,"a"
 4249              		.align	2
 4250              		.set	.LANCHOR4,. + 0
 4253              	_aTerminalId:
 4254 0000 30313233 		.ascii	"0123456789ABCDEF"
 4254      34353637 
 4254      38394142 
 4254      43444546 
 4255              		.text
 4256              	.Letext0:
 4257              		.file 2 "libraries/RTT/RTT/SEGGER_RTT.h"
 4258              		.file 3 "/usr/include/newlib/string.h"
 4259              		.file 4 "<built-in>"
ARM GAS  /tmp/ccfEWiwI.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SEGGER_RTT.c
     /tmp/ccfEWiwI.s:18     .rodata._DoInit.str1.4:0000000000000000 $d
     /tmp/ccfEWiwI.s:22     .text._DoInit:0000000000000000 $t
     /tmp/ccfEWiwI.s:29     .text._DoInit:0000000000000000 _DoInit
     /tmp/ccfEWiwI.s:138    .text._DoInit:000000000000004c $d
     /tmp/ccfEWiwI.s:147    .text._GetAvailWriteSpace:0000000000000000 $t
     /tmp/ccfEWiwI.s:153    .text._GetAvailWriteSpace:0000000000000000 _GetAvailWriteSpace
     /tmp/ccfEWiwI.s:206    .text._WriteNoCheck:0000000000000000 $t
     /tmp/ccfEWiwI.s:212    .text._WriteNoCheck:0000000000000000 _WriteNoCheck
     /tmp/ccfEWiwI.s:328    .text._WriteBlocking:0000000000000000 $t
     /tmp/ccfEWiwI.s:334    .text._WriteBlocking:0000000000000000 _WriteBlocking
     /tmp/ccfEWiwI.s:488    .text._PostTerminalSwitch:0000000000000000 $t
     /tmp/ccfEWiwI.s:494    .text._PostTerminalSwitch:0000000000000000 _PostTerminalSwitch
     /tmp/ccfEWiwI.s:536    .text._PostTerminalSwitch:0000000000000020 $d
     /tmp/ccfEWiwI.s:541    .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000000 $t
     /tmp/ccfEWiwI.s:548    .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000000 SEGGER_RTT_ReadUpBufferNoLock
     /tmp/ccfEWiwI.s:743    .text.SEGGER_RTT_ReadUpBufferNoLock:00000000000000a8 $d
     /tmp/ccfEWiwI.s:748    .text.SEGGER_RTT_ReadNoLock:0000000000000000 $t
     /tmp/ccfEWiwI.s:755    .text.SEGGER_RTT_ReadNoLock:0000000000000000 SEGGER_RTT_ReadNoLock
     /tmp/ccfEWiwI.s:945    .text.SEGGER_RTT_ReadNoLock:000000000000009c $d
     /tmp/ccfEWiwI.s:950    .text.SEGGER_RTT_ReadUpBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:957    .text.SEGGER_RTT_ReadUpBuffer:0000000000000000 SEGGER_RTT_ReadUpBuffer
     /tmp/ccfEWiwI.s:1009   .text.SEGGER_RTT_Read:0000000000000000 $t
     /tmp/ccfEWiwI.s:1016   .text.SEGGER_RTT_Read:0000000000000000 SEGGER_RTT_Read
     /tmp/ccfEWiwI.s:1068   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 $t
     /tmp/ccfEWiwI.s:1075   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 SEGGER_RTT_WriteWithOverwriteNoLock
     /tmp/ccfEWiwI.s:1330   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000114 $d
     /tmp/ccfEWiwI.s:1335   .text.SEGGER_RTT_WriteDownBufferNoLock:0000000000000000 $t
     /tmp/ccfEWiwI.s:1342   .text.SEGGER_RTT_WriteDownBufferNoLock:0000000000000000 SEGGER_RTT_WriteDownBufferNoLock
     /tmp/ccfEWiwI.s:1456   .text.SEGGER_RTT_WriteDownBufferNoLock:0000000000000060 $d
     /tmp/ccfEWiwI.s:1461   .text.SEGGER_RTT_WriteNoLock:0000000000000000 $t
     /tmp/ccfEWiwI.s:1468   .text.SEGGER_RTT_WriteNoLock:0000000000000000 SEGGER_RTT_WriteNoLock
     /tmp/ccfEWiwI.s:1583   .text.SEGGER_RTT_WriteNoLock:0000000000000068 $d
     /tmp/ccfEWiwI.s:1588   .text.SEGGER_RTT_WriteDownBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:1595   .text.SEGGER_RTT_WriteDownBuffer:0000000000000000 SEGGER_RTT_WriteDownBuffer
     /tmp/ccfEWiwI.s:1675   .text.SEGGER_RTT_WriteDownBuffer:0000000000000030 $d
     /tmp/ccfEWiwI.s:1681   .text.SEGGER_RTT_Write:0000000000000000 $t
     /tmp/ccfEWiwI.s:1688   .text.SEGGER_RTT_Write:0000000000000000 SEGGER_RTT_Write
     /tmp/ccfEWiwI.s:1768   .text.SEGGER_RTT_Write:0000000000000030 $d
     /tmp/ccfEWiwI.s:1774   .text.SEGGER_RTT_WriteString:0000000000000000 $t
     /tmp/ccfEWiwI.s:1781   .text.SEGGER_RTT_WriteString:0000000000000000 SEGGER_RTT_WriteString
     /tmp/ccfEWiwI.s:1824   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000000 $t
     /tmp/ccfEWiwI.s:1831   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000000 SEGGER_RTT_PutCharSkipNoLock
     /tmp/ccfEWiwI.s:1937   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000050 $d
     /tmp/ccfEWiwI.s:1942   .text.SEGGER_RTT_PutCharSkip:0000000000000000 $t
     /tmp/ccfEWiwI.s:1949   .text.SEGGER_RTT_PutCharSkip:0000000000000000 SEGGER_RTT_PutCharSkip
     /tmp/ccfEWiwI.s:2096   .text.SEGGER_RTT_PutCharSkip:0000000000000070 $d
     /tmp/ccfEWiwI.s:2102   .text.SEGGER_RTT_PutChar:0000000000000000 $t
     /tmp/ccfEWiwI.s:2109   .text.SEGGER_RTT_PutChar:0000000000000000 SEGGER_RTT_PutChar
     /tmp/ccfEWiwI.s:2281   .text.SEGGER_RTT_PutChar:0000000000000094 $d
     /tmp/ccfEWiwI.s:2287   .text.SEGGER_RTT_GetKey:0000000000000000 $t
     /tmp/ccfEWiwI.s:2294   .text.SEGGER_RTT_GetKey:0000000000000000 SEGGER_RTT_GetKey
     /tmp/ccfEWiwI.s:2346   .text.SEGGER_RTT_WaitKey:0000000000000000 $t
     /tmp/ccfEWiwI.s:2353   .text.SEGGER_RTT_WaitKey:0000000000000000 SEGGER_RTT_WaitKey
     /tmp/ccfEWiwI.s:2383   .text.SEGGER_RTT_HasKey:0000000000000000 $t
     /tmp/ccfEWiwI.s:2390   .text.SEGGER_RTT_HasKey:0000000000000000 SEGGER_RTT_HasKey
ARM GAS  /tmp/ccfEWiwI.s 			page 119


     /tmp/ccfEWiwI.s:2455   .text.SEGGER_RTT_HasKey:0000000000000020 $d
     /tmp/ccfEWiwI.s:2460   .text.SEGGER_RTT_HasData:0000000000000000 $t
     /tmp/ccfEWiwI.s:2467   .text.SEGGER_RTT_HasData:0000000000000000 SEGGER_RTT_HasData
     /tmp/ccfEWiwI.s:2498   .text.SEGGER_RTT_HasData:000000000000001c $d
     /tmp/ccfEWiwI.s:2503   .text.SEGGER_RTT_HasDataUp:0000000000000000 $t
     /tmp/ccfEWiwI.s:2510   .text.SEGGER_RTT_HasDataUp:0000000000000000 SEGGER_RTT_HasDataUp
     /tmp/ccfEWiwI.s:2541   .text.SEGGER_RTT_HasDataUp:000000000000001c $d
     /tmp/ccfEWiwI.s:2546   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:2553   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 SEGGER_RTT_AllocDownBuffer
     /tmp/ccfEWiwI.s:2706   .text.SEGGER_RTT_AllocDownBuffer:0000000000000074 $d
     /tmp/ccfEWiwI.s:2712   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:2719   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 SEGGER_RTT_AllocUpBuffer
     /tmp/ccfEWiwI.s:2880   .text.SEGGER_RTT_AllocUpBuffer:0000000000000088 $d
     /tmp/ccfEWiwI.s:2886   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:2893   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 SEGGER_RTT_ConfigUpBuffer
     /tmp/ccfEWiwI.s:3029   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000070 $d
     /tmp/ccfEWiwI.s:3034   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:3041   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 SEGGER_RTT_ConfigDownBuffer
     /tmp/ccfEWiwI.s:3178   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000064 $d
     /tmp/ccfEWiwI.s:3183   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:3190   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 SEGGER_RTT_SetNameUpBuffer
     /tmp/ccfEWiwI.s:3294   .text.SEGGER_RTT_SetNameUpBuffer:000000000000003c $d
     /tmp/ccfEWiwI.s:3299   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:3306   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 SEGGER_RTT_SetNameDownBuffer
     /tmp/ccfEWiwI.s:3407   .text.SEGGER_RTT_SetNameDownBuffer:000000000000003c $d
     /tmp/ccfEWiwI.s:3412   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:3419   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 SEGGER_RTT_SetFlagsUpBuffer
     /tmp/ccfEWiwI.s:3520   .text.SEGGER_RTT_SetFlagsUpBuffer:000000000000003c $d
     /tmp/ccfEWiwI.s:3525   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:3532   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 SEGGER_RTT_SetFlagsDownBuffer
     /tmp/ccfEWiwI.s:3633   .text.SEGGER_RTT_SetFlagsDownBuffer:000000000000003c $d
     /tmp/ccfEWiwI.s:3638   .text.SEGGER_RTT_Init:0000000000000000 $t
     /tmp/ccfEWiwI.s:3645   .text.SEGGER_RTT_Init:0000000000000000 SEGGER_RTT_Init
     /tmp/ccfEWiwI.s:3665   .text.SEGGER_RTT_SetTerminal:0000000000000000 $t
     /tmp/ccfEWiwI.s:3672   .text.SEGGER_RTT_SetTerminal:0000000000000000 SEGGER_RTT_SetTerminal
     /tmp/ccfEWiwI.s:3842   .text.SEGGER_RTT_SetTerminal:000000000000007c $d
     /tmp/ccfEWiwI.s:3850   .text.SEGGER_RTT_TerminalOut:0000000000000000 $t
     /tmp/ccfEWiwI.s:3857   .text.SEGGER_RTT_TerminalOut:0000000000000000 SEGGER_RTT_TerminalOut
     /tmp/ccfEWiwI.s:4093   .text.SEGGER_RTT_TerminalOut:00000000000000e0 $d
     /tmp/ccfEWiwI.s:4100   .text.SEGGER_RTT_GetAvailWriteSpace:0000000000000000 $t
     /tmp/ccfEWiwI.s:4107   .text.SEGGER_RTT_GetAvailWriteSpace:0000000000000000 SEGGER_RTT_GetAvailWriteSpace
     /tmp/ccfEWiwI.s:4141   .text.SEGGER_RTT_GetAvailWriteSpace:0000000000000014 $d
     /tmp/ccfEWiwI.s:4146   .text.SEGGER_RTT_GetBytesInBuffer:0000000000000000 $t
     /tmp/ccfEWiwI.s:4153   .text.SEGGER_RTT_GetBytesInBuffer:0000000000000000 SEGGER_RTT_GetBytesInBuffer
     /tmp/ccfEWiwI.s:4209   .text.SEGGER_RTT_GetBytesInBuffer:0000000000000028 $d
     /tmp/ccfEWiwI.s:4225   .bss._SEGGER_RTT:0000000000000000 _SEGGER_RTT
     /tmp/ccfEWiwI.s:4218   .bss._ActiveTerminal:0000000000000000 _ActiveTerminal
     /tmp/ccfEWiwI.s:4219   .bss._ActiveTerminal:0000000000000000 $d
     /tmp/ccfEWiwI.s:4221   .bss._SEGGER_RTT:0000000000000000 $d
     /tmp/ccfEWiwI.s:4228   .bss._acDownBuffer:0000000000000000 $d
     /tmp/ccfEWiwI.s:4232   .bss._acDownBuffer:0000000000000000 _acDownBuffer
     /tmp/ccfEWiwI.s:4235   .bss._acUpBuffer:0000000000000000 $d
     /tmp/ccfEWiwI.s:4239   .bss._acUpBuffer:0000000000000000 _acUpBuffer
     /tmp/ccfEWiwI.s:4242   .rodata._aInitStr.0:0000000000000000 $d
     /tmp/ccfEWiwI.s:4246   .rodata._aInitStr.0:0000000000000000 _aInitStr.0
     /tmp/ccfEWiwI.s:4249   .rodata._aTerminalId:0000000000000000 $d
     /tmp/ccfEWiwI.s:4253   .rodata._aTerminalId:0000000000000000 _aTerminalId
ARM GAS  /tmp/ccfEWiwI.s 			page 120



UNDEFINED SYMBOLS
memcpy
strlen
